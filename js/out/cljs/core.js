// Compiled by ClojureScript 0.0-2727 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2727";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__23656__delegate = function (args){
return console.log.apply(console,(function (){var G__23655 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__23655) : cljs.core.into_array.call(null,G__23655));
})());
};
var G__23656 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23657__i = 0, G__23657__a = new Array(arguments.length -  0);
while (G__23657__i < G__23657__a.length) {G__23657__a[G__23657__i] = arguments[G__23657__i + 0]; ++G__23657__i;}
  args = new cljs.core.IndexedSeq(G__23657__a,0);
} 
return G__23656__delegate.call(this,args);};
G__23656.cljs$lang$maxFixedArity = 0;
G__23656.cljs$lang$applyTo = (function (arglist__23658){
var args = cljs.core.seq(arglist__23658);
return G__23656__delegate(args);
});
G__23656.cljs$core$IFn$_invoke$arity$variadic = G__23656__delegate;
return G__23656;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__23660 = x;
return goog.isString(G__23660);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__23662 = x__$1;
return goog.typeOf(G__23662);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__4239__auto__ = ty;
if(cljs.core.truth_(and__4239__auto__)){
return ty.cljs$lang$type;
} else {
return and__4239__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__23664 = obj;
return goog.typeOf(G__23664);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__23666 = Symbol;
return goog.typeOf(G__23666);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__5138__auto___23668 = len;
var i_23669 = (0);
while(true){
if((i_23669 < n__5138__auto___23668)){
(new_arr[i_23669] = (arr[i_23669]));

var G__23670 = (i_23669 + (1));
i_23669 = G__23670;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__23671 = (i + (1));
i = G__23671;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__23680__delegate = function (array,i,idxs){
var G__23677 = aget;
var G__23678 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__23679 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__23677,G__23678,G__23679) : cljs.core.apply.call(null,G__23677,G__23678,G__23679));
};
var G__23680 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__23681__i = 0, G__23681__a = new Array(arguments.length -  2);
while (G__23681__i < G__23681__a.length) {G__23681__a[G__23681__i] = arguments[G__23681__i + 2]; ++G__23681__i;}
  idxs = new cljs.core.IndexedSeq(G__23681__a,0);
} 
return G__23680__delegate.call(this,array,i,idxs);};
G__23680.cljs$lang$maxFixedArity = 2;
G__23680.cljs$lang$applyTo = (function (arglist__23682){
var array = cljs.core.first(arglist__23682);
arglist__23682 = cljs.core.next(arglist__23682);
var i = cljs.core.first(arglist__23682);
var idxs = cljs.core.rest(arglist__23682);
return G__23680__delegate(array,i,idxs);
});
G__23680.cljs$core$IFn$_invoke$arity$variadic = G__23680__delegate;
return G__23680;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__23683 = null;
if (arguments.length > 2) {
var G__23684__i = 0, G__23684__a = new Array(arguments.length -  2);
while (G__23684__i < G__23684__a.length) {G__23684__a[G__23684__i] = arguments[G__23684__i + 2]; ++G__23684__i;}
G__23683 = new cljs.core.IndexedSeq(G__23684__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__23683);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__23693__delegate = function (array,idx,idx2,idxv){
var G__23689 = aset;
var G__23690 = (array[idx]);
var G__23691 = idx2;
var G__23692 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__23689,G__23690,G__23691,G__23692) : cljs.core.apply.call(null,G__23689,G__23690,G__23691,G__23692));
};
var G__23693 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__23694__i = 0, G__23694__a = new Array(arguments.length -  3);
while (G__23694__i < G__23694__a.length) {G__23694__a[G__23694__i] = arguments[G__23694__i + 3]; ++G__23694__i;}
  idxv = new cljs.core.IndexedSeq(G__23694__a,0);
} 
return G__23693__delegate.call(this,array,idx,idx2,idxv);};
G__23693.cljs$lang$maxFixedArity = 3;
G__23693.cljs$lang$applyTo = (function (arglist__23695){
var array = cljs.core.first(arglist__23695);
arglist__23695 = cljs.core.next(arglist__23695);
var idx = cljs.core.first(arglist__23695);
arglist__23695 = cljs.core.next(arglist__23695);
var idx2 = cljs.core.first(arglist__23695);
var idxv = cljs.core.rest(arglist__23695);
return G__23693__delegate(array,idx,idx2,idxv);
});
G__23693.cljs$core$IFn$_invoke$arity$variadic = G__23693__delegate;
return G__23693;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__23696 = null;
if (arguments.length > 3) {
var G__23697__i = 0, G__23697__a = new Array(arguments.length -  3);
while (G__23697__i < G__23697__a.length) {G__23697__a[G__23697__i] = arguments[G__23697__i + 3]; ++G__23697__i;}
G__23696 = new cljs.core.IndexedSeq(G__23697__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__23696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__23703 = (function (a,x){
a.push(x);

return a;
});
var G__23704 = [];
var G__23705 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__23703,G__23704,G__23705) : cljs.core.reduce.call(null,G__23703,G__23704,G__23705));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__23706__i = 0, G__23706__a = new Array(arguments.length -  2);
while (G__23706__i < G__23706__a.length) {G__23706__a[G__23706__i] = arguments[G__23706__i + 2]; ++G__23706__i;}
  args = new cljs.core.IndexedSeq(G__23706__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__23707){
var obj = cljs.core.first(arglist__23707);
arglist__23707 = cljs.core.next(arglist__23707);
var s = cljs.core.first(arglist__23707);
var args = cljs.core.rest(arglist__23707);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj23709 = {};
return obj23709;
})();


cljs.core.IFn = (function (){var obj23711 = {};
return obj23711;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23757 = x__4895__auto__;
return goog.typeOf(G__23757);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23759 = x__4895__auto__;
return goog.typeOf(G__23759);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23761 = x__4895__auto__;
return goog.typeOf(G__23761);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23763 = x__4895__auto__;
return goog.typeOf(G__23763);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23765 = x__4895__auto__;
return goog.typeOf(G__23765);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23767 = x__4895__auto__;
return goog.typeOf(G__23767);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23769 = x__4895__auto__;
return goog.typeOf(G__23769);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23771 = x__4895__auto__;
return goog.typeOf(G__23771);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23773 = x__4895__auto__;
return goog.typeOf(G__23773);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23775 = x__4895__auto__;
return goog.typeOf(G__23775);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23777 = x__4895__auto__;
return goog.typeOf(G__23777);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23779 = x__4895__auto__;
return goog.typeOf(G__23779);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23781 = x__4895__auto__;
return goog.typeOf(G__23781);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23783 = x__4895__auto__;
return goog.typeOf(G__23783);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23785 = x__4895__auto__;
return goog.typeOf(G__23785);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23787 = x__4895__auto__;
return goog.typeOf(G__23787);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23789 = x__4895__auto__;
return goog.typeOf(G__23789);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23791 = x__4895__auto__;
return goog.typeOf(G__23791);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23793 = x__4895__auto__;
return goog.typeOf(G__23793);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23795 = x__4895__auto__;
return goog.typeOf(G__23795);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23797 = x__4895__auto__;
return goog.typeOf(G__23797);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._invoke[(function (){var G__23799 = x__4895__auto__;
return goog.typeOf(G__23799);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._invoke["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj23801 = {};
return obj23801;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__4239__auto__ = value;
if(and__4239__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__4239__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4895__auto__ = (((value == null))?null:value);
return (function (){var or__4251__auto__ = (cljs.core._clone[(function (){var G__23805 = x__4895__auto__;
return goog.typeOf(G__23805);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._clone["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj23807 = {};
return obj23807;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._count[(function (){var G__23811 = x__4895__auto__;
return goog.typeOf(G__23811);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._count["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj23813 = {};
return obj23813;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._empty[(function (){var G__23817 = x__4895__auto__;
return goog.typeOf(G__23817);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._empty["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj23819 = {};
return obj23819;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._conj[(function (){var G__23823 = x__4895__auto__;
return goog.typeOf(G__23823);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._conj["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj23825 = {};
return obj23825;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._nth[(function (){var G__23831 = x__4895__auto__;
return goog.typeOf(G__23831);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._nth["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._nth[(function (){var G__23833 = x__4895__auto__;
return goog.typeOf(G__23833);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._nth["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj23835 = {};
return obj23835;
})();


cljs.core.ISeq = (function (){var obj23837 = {};
return obj23837;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._first[(function (){var G__23841 = x__4895__auto__;
return goog.typeOf(G__23841);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._first["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._rest[(function (){var G__23845 = x__4895__auto__;
return goog.typeOf(G__23845);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._rest["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj23847 = {};
return obj23847;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._next[(function (){var G__23851 = x__4895__auto__;
return goog.typeOf(G__23851);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._next["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj23853 = {};
return obj23853;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._lookup[(function (){var G__23859 = x__4895__auto__;
return goog.typeOf(G__23859);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._lookup["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._lookup[(function (){var G__23861 = x__4895__auto__;
return goog.typeOf(G__23861);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._lookup["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj23863 = {};
return obj23863;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__23867 = x__4895__auto__;
return goog.typeOf(G__23867);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._assoc[(function (){var G__23871 = x__4895__auto__;
return goog.typeOf(G__23871);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._assoc["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj23873 = {};
return obj23873;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._dissoc[(function (){var G__23877 = x__4895__auto__;
return goog.typeOf(G__23877);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._dissoc["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj23879 = {};
return obj23879;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._key[(function (){var G__23883 = x__4895__auto__;
return goog.typeOf(G__23883);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._key["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._val[(function (){var G__23887 = x__4895__auto__;
return goog.typeOf(G__23887);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._val["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj23889 = {};
return obj23889;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._disjoin[(function (){var G__23893 = x__4895__auto__;
return goog.typeOf(G__23893);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._disjoin["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj23895 = {};
return obj23895;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._peek[(function (){var G__23899 = x__4895__auto__;
return goog.typeOf(G__23899);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._peek["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._pop[(function (){var G__23903 = x__4895__auto__;
return goog.typeOf(G__23903);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._pop["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj23905 = {};
return obj23905;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._assoc_n[(function (){var G__23909 = x__4895__auto__;
return goog.typeOf(G__23909);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj23911 = {};
return obj23911;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._deref[(function (){var G__23915 = x__4895__auto__;
return goog.typeOf(G__23915);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._deref["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj23917 = {};
return obj23917;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._deref_with_timeout[(function (){var G__23921 = x__4895__auto__;
return goog.typeOf(G__23921);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj23923 = {};
return obj23923;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._meta[(function (){var G__23927 = x__4895__auto__;
return goog.typeOf(G__23927);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._meta["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj23929 = {};
return obj23929;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._with_meta[(function (){var G__23933 = x__4895__auto__;
return goog.typeOf(G__23933);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._with_meta["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj23935 = {};
return obj23935;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._reduce[(function (){var G__23941 = x__4895__auto__;
return goog.typeOf(G__23941);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._reduce["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._reduce[(function (){var G__23943 = x__4895__auto__;
return goog.typeOf(G__23943);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._reduce["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj23945 = {};
return obj23945;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._kv_reduce[(function (){var G__23949 = x__4895__auto__;
return goog.typeOf(G__23949);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj23951 = {};
return obj23951;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._equiv[(function (){var G__23955 = x__4895__auto__;
return goog.typeOf(G__23955);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._equiv["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj23957 = {};
return obj23957;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._hash[(function (){var G__23961 = x__4895__auto__;
return goog.typeOf(G__23961);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._hash["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj23963 = {};
return obj23963;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._seq[(function (){var G__23967 = x__4895__auto__;
return goog.typeOf(G__23967);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._seq["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj23969 = {};
return obj23969;
})();


cljs.core.IList = (function (){var obj23971 = {};
return obj23971;
})();


cljs.core.IRecord = (function (){var obj23973 = {};
return obj23973;
})();


cljs.core.IReversible = (function (){var obj23975 = {};
return obj23975;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._rseq[(function (){var G__23979 = x__4895__auto__;
return goog.typeOf(G__23979);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._rseq["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj23981 = {};
return obj23981;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._sorted_seq[(function (){var G__23985 = x__4895__auto__;
return goog.typeOf(G__23985);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._sorted_seq_from[(function (){var G__23989 = x__4895__auto__;
return goog.typeOf(G__23989);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._entry_key[(function (){var G__23993 = x__4895__auto__;
return goog.typeOf(G__23993);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._entry_key["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._comparator[(function (){var G__23997 = x__4895__auto__;
return goog.typeOf(G__23997);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._comparator["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj23999 = {};
return obj23999;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__4239__auto__ = writer;
if(and__4239__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__4239__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4895__auto__ = (((writer == null))?null:writer);
return (function (){var or__4251__auto__ = (cljs.core._write[(function (){var G__24003 = x__4895__auto__;
return goog.typeOf(G__24003);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._write["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__4239__auto__ = writer;
if(and__4239__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__4239__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4895__auto__ = (((writer == null))?null:writer);
return (function (){var or__4251__auto__ = (cljs.core._flush[(function (){var G__24007 = x__4895__auto__;
return goog.typeOf(G__24007);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._flush["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj24009 = {};
return obj24009;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._pr_writer[(function (){var G__24013 = x__4895__auto__;
return goog.typeOf(G__24013);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj24015 = {};
return obj24015;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__4239__auto__ = d;
if(and__4239__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__4239__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4895__auto__ = (((d == null))?null:d);
return (function (){var or__4251__auto__ = (cljs.core._realized_QMARK_[(function (){var G__24019 = x__4895__auto__;
return goog.typeOf(G__24019);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj24021 = {};
return obj24021;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._notify_watches[(function (){var G__24025 = x__4895__auto__;
return goog.typeOf(G__24025);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._add_watch[(function (){var G__24029 = x__4895__auto__;
return goog.typeOf(G__24029);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._add_watch["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__4239__auto__ = this$;
if(and__4239__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__4239__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4895__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4251__auto__ = (cljs.core._remove_watch[(function (){var G__24033 = x__4895__auto__;
return goog.typeOf(G__24033);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj24035 = {};
return obj24035;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._as_transient[(function (){var G__24039 = x__4895__auto__;
return goog.typeOf(G__24039);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._as_transient["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj24041 = {};
return obj24041;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__4239__auto__ = tcoll;
if(and__4239__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__4239__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4895__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4251__auto__ = (cljs.core._conj_BANG_[(function (){var G__24045 = x__4895__auto__;
return goog.typeOf(G__24045);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__4239__auto__ = tcoll;
if(and__4239__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__4239__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4895__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4251__auto__ = (cljs.core._persistent_BANG_[(function (){var G__24049 = x__4895__auto__;
return goog.typeOf(G__24049);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj24051 = {};
return obj24051;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__4239__auto__ = tcoll;
if(and__4239__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__4239__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4895__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4251__auto__ = (cljs.core._assoc_BANG_[(function (){var G__24055 = x__4895__auto__;
return goog.typeOf(G__24055);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj24057 = {};
return obj24057;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__4239__auto__ = tcoll;
if(and__4239__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__4239__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4895__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4251__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__24061 = x__4895__auto__;
return goog.typeOf(G__24061);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj24063 = {};
return obj24063;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__4239__auto__ = tcoll;
if(and__4239__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__4239__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4895__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4251__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__24067 = x__4895__auto__;
return goog.typeOf(G__24067);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__4239__auto__ = tcoll;
if(and__4239__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__4239__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4895__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4251__auto__ = (cljs.core._pop_BANG_[(function (){var G__24071 = x__4895__auto__;
return goog.typeOf(G__24071);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj24073 = {};
return obj24073;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__4239__auto__ = tcoll;
if(and__4239__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__4239__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4895__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4251__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__24077 = x__4895__auto__;
return goog.typeOf(G__24077);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj24079 = {};
return obj24079;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__4239__auto__ = x;
if(and__4239__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__4239__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4895__auto__ = (((x == null))?null:x);
return (function (){var or__4251__auto__ = (cljs.core._compare[(function (){var G__24083 = x__4895__auto__;
return goog.typeOf(G__24083);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._compare["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj24085 = {};
return obj24085;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._drop_first[(function (){var G__24089 = x__4895__auto__;
return goog.typeOf(G__24089);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._drop_first["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj24091 = {};
return obj24091;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._chunked_first[(function (){var G__24095 = x__4895__auto__;
return goog.typeOf(G__24095);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._chunked_rest[(function (){var G__24099 = x__4895__auto__;
return goog.typeOf(G__24099);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj24101 = {};
return obj24101;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._chunked_next[(function (){var G__24105 = x__4895__auto__;
return goog.typeOf(G__24105);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj24107 = {};
return obj24107;
})();

cljs.core._name = (function _name(x){
if((function (){var and__4239__auto__ = x;
if(and__4239__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__4239__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4895__auto__ = (((x == null))?null:x);
return (function (){var or__4251__auto__ = (cljs.core._name[(function (){var G__24111 = x__4895__auto__;
return goog.typeOf(G__24111);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._name["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__4239__auto__ = x;
if(and__4239__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__4239__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4895__auto__ = (((x == null))?null:x);
return (function (){var or__4251__auto__ = (cljs.core._namespace[(function (){var G__24115 = x__4895__auto__;
return goog.typeOf(G__24115);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._namespace["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj24117 = {};
return obj24117;
})();


cljs.core.IReset = (function (){var obj24119 = {};
return obj24119;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._reset_BANG_[(function (){var G__24123 = x__4895__auto__;
return goog.typeOf(G__24123);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj24125 = {};
return obj24125;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._swap_BANG_[(function (){var G__24135 = x__4895__auto__;
return goog.typeOf(G__24135);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._swap_BANG_[(function (){var G__24137 = x__4895__auto__;
return goog.typeOf(G__24137);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._swap_BANG_[(function (){var G__24139 = x__4895__auto__;
return goog.typeOf(G__24139);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._swap_BANG_[(function (){var G__24141 = x__4895__auto__;
return goog.typeOf(G__24141);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj24143 = {};
return obj24143;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__4239__auto__ = o;
if(and__4239__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__4239__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4895__auto__ = (((o == null))?null:o);
return (function (){var or__4251__auto__ = (cljs.core._vreset_BANG_[(function (){var G__24147 = x__4895__auto__;
return goog.typeOf(G__24147);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj24149 = {};
return obj24149;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__4239__auto__ = coll;
if(and__4239__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__4239__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4895__auto__ = (((coll == null))?null:coll);
return (function (){var or__4251__auto__ = (cljs.core._iterator[(function (){var G__24153 = x__4895__auto__;
return goog.typeOf(G__24153);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._iterator["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__24156 = (4294967295);
var G__24157 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__24156,G__24157) : Math.imul.call(null,G__24156,G__24157));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__24160 = a;
var G__24161 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__24160,G__24161) : Math.imul.call(null,G__24160,G__24161));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__24162 = (i + (2));
var G__24163 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__24162;
h1 = G__24163;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj24165 = {};
return obj24165;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__24166 = (i + (1));
var G__24167 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__24166;
hash = G__24167;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj24171 = {};
return obj24171;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__24174 = o;
if(G__24174){
var bit__4925__auto__ = (G__24174.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4925__auto__) || (G__24174.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__24175 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24175) : Math.floor.call(null,G__24175));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4239__auto__ = cljs.core.not(a.ns);
if(and__4239__auto__){
return b.ns;
} else {
return and__4239__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24182 = a.ns;
var G__24183 = b.ns;
return goog.array.defaultCompare(G__24182,G__24183);
})();
if(((0) === nsc)){
var G__24184 = a.name;
var G__24185 = b.name;
return goog.array.defaultCompare(G__24184,G__24185);
} else {
return nsc;
}
}
} else {
var G__24186 = a.name;
var G__24187 = b.name;
return goog.array.defaultCompare(G__24186,G__24187);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4672__auto__ = self__._hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__24189 = null;
var G__24189__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__24189__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__24189 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__24189__2.call(this,self__,coll);
case 3:
return G__24189__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24189.cljs$core$IFn$_invoke$arity$2 = G__24189__2;
G__24189.cljs$core$IFn$_invoke$arity$3 = G__24189__3;
return G__24189;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args24188){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24188)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__24237 = null;
var G__24237__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__24237__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__24237__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__24237__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__24237__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__24237__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__24237__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__24237__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__24237__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__24237__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__24237__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__24237__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__24237__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__24237__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__24237__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__24237__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__24237__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__24237__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__24237__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__24237__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__24237__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__24237__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24193 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__24194 = a;
var G__24195 = b;
var G__24196 = c;
var G__24197 = d;
var G__24198 = e;
var G__24199 = f;
var G__24200 = g;
var G__24201 = h;
var G__24202 = i;
var G__24203 = j;
var G__24204 = k;
var G__24205 = l;
var G__24206 = m;
var G__24207 = n;
var G__24208 = o;
var G__24209 = p;
var G__24210 = q;
var G__24211 = r;
var G__24212 = s;
var G__24213 = t;
var G__24214 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24193,G__24194,G__24195,G__24196,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214) : cljs.core.apply.call(null,G__24193,G__24194,G__24195,G__24196,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214));
});
G__24237 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24237__1.call(this,self__);
case 2:
return G__24237__2.call(this,self__,a);
case 3:
return G__24237__3.call(this,self__,a,b);
case 4:
return G__24237__4.call(this,self__,a,b,c);
case 5:
return G__24237__5.call(this,self__,a,b,c,d);
case 6:
return G__24237__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24237__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24237__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24237__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24237__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24237__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24237__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24237__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24237__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24237__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24237__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24237__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24237__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24237__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24237__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24237__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24237__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24237.cljs$core$IFn$_invoke$arity$1 = G__24237__1;
G__24237.cljs$core$IFn$_invoke$arity$2 = G__24237__2;
G__24237.cljs$core$IFn$_invoke$arity$3 = G__24237__3;
G__24237.cljs$core$IFn$_invoke$arity$4 = G__24237__4;
G__24237.cljs$core$IFn$_invoke$arity$5 = G__24237__5;
G__24237.cljs$core$IFn$_invoke$arity$6 = G__24237__6;
G__24237.cljs$core$IFn$_invoke$arity$7 = G__24237__7;
G__24237.cljs$core$IFn$_invoke$arity$8 = G__24237__8;
G__24237.cljs$core$IFn$_invoke$arity$9 = G__24237__9;
G__24237.cljs$core$IFn$_invoke$arity$10 = G__24237__10;
G__24237.cljs$core$IFn$_invoke$arity$11 = G__24237__11;
G__24237.cljs$core$IFn$_invoke$arity$12 = G__24237__12;
G__24237.cljs$core$IFn$_invoke$arity$13 = G__24237__13;
G__24237.cljs$core$IFn$_invoke$arity$14 = G__24237__14;
G__24237.cljs$core$IFn$_invoke$arity$15 = G__24237__15;
G__24237.cljs$core$IFn$_invoke$arity$16 = G__24237__16;
G__24237.cljs$core$IFn$_invoke$arity$17 = G__24237__17;
G__24237.cljs$core$IFn$_invoke$arity$18 = G__24237__18;
G__24237.cljs$core$IFn$_invoke$arity$19 = G__24237__19;
G__24237.cljs$core$IFn$_invoke$arity$20 = G__24237__20;
G__24237.cljs$core$IFn$_invoke$arity$21 = G__24237__21;
G__24237.cljs$core$IFn$_invoke$arity$22 = G__24237__22;
return G__24237;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args24192){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24192)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24215 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__24216 = a;
var G__24217 = b;
var G__24218 = c;
var G__24219 = d;
var G__24220 = e;
var G__24221 = f;
var G__24222 = g;
var G__24223 = h;
var G__24224 = i;
var G__24225 = j;
var G__24226 = k;
var G__24227 = l;
var G__24228 = m;
var G__24229 = n;
var G__24230 = o;
var G__24231 = p;
var G__24232 = q;
var G__24233 = r;
var G__24234 = s;
var G__24235 = t;
var G__24236 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236) : cljs.core.apply.call(null,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__24239 = x;
if(G__24239){
var bit__4932__auto__ = null;
if(cljs.core.truth_((function (){var or__4251__auto__ = bit__4932__auto__;
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return G__24239.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__24239.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__24239);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__24239);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__24241 = value;
if(G__24241){
var bit__4932__auto__ = (G__24241.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4932__auto__) || (G__24241.cljs$core$ICloneable$)){
return true;
} else {
if((!G__24241.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__24241);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__24241);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24243 = coll;
if(G__24243){
var bit__4925__auto__ = (G__24243.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4925__auto__) || (G__24243.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24245 = coll;
if(G__24245){
var bit__4925__auto__ = (G__24245.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4925__auto__) || (G__24245.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__24247 = coll;
if(G__24247){
var bit__4925__auto__ = (G__24247.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4925__auto__) || (G__24247.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24249 = coll;
if(G__24249){
var bit__4925__auto__ = (G__24249.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4925__auto__) || (G__24249.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__24254__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24255 = y;
var G__24256 = cljs.core.first(more);
var G__24257 = cljs.core.next(more);
x = G__24255;
y = G__24256;
more = G__24257;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24254 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24258__i = 0, G__24258__a = new Array(arguments.length -  2);
while (G__24258__i < G__24258__a.length) {G__24258__a[G__24258__i] = arguments[G__24258__i + 2]; ++G__24258__i;}
  more = new cljs.core.IndexedSeq(G__24258__a,0);
} 
return G__24254__delegate.call(this,x,y,more);};
G__24254.cljs$lang$maxFixedArity = 2;
G__24254.cljs$lang$applyTo = (function (arglist__24259){
var x = cljs.core.first(arglist__24259);
arglist__24259 = cljs.core.next(arglist__24259);
var y = cljs.core.first(arglist__24259);
var more = cljs.core.rest(arglist__24259);
return G__24254__delegate(x,y,more);
});
G__24254.cljs$core$IFn$_invoke$arity$variadic = G__24254__delegate;
return G__24254;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__24260 = null;
if (arguments.length > 2) {
var G__24261__i = 0, G__24261__a = new Array(arguments.length -  2);
while (G__24261__i < G__24261__a.length) {G__24261__a[G__24261__i] = arguments[G__24261__i + 2]; ++G__24261__i;}
G__24260 = new cljs.core.IndexedSeq(G__24261__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__24262 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__24262) : cljs.core.es6_iterator_seq.call(null,G__24262));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__24263 = (n + (1));
var G__24264 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__24265 = cljs.core.next(coll__$1);
n = G__24263;
hash_code = G__24264;
coll__$1 = G__24265;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__24266 = (n + (1));
var G__24267 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__24268 = cljs.core.next(coll__$1);
n = G__24266;
hash_code = G__24267;
coll__$1 = G__24268;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__24269 = o;
return goog.getUid(G__24269);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__24271 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24271) : cljs.core.deref.call(null,G__24271));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__24278 = val;
var G__24279 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24278,G__24279) : f.call(null,G__24278,G__24279));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24284 = nval;
var G__24285 = (n + (1));
val = G__24284;
n = G__24285;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__24280 = val__$1;
var G__24281 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24280,G__24281) : f.call(null,G__24280,G__24281));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24286 = nval;
var G__24287 = (n + (1));
val__$1 = G__24286;
n = G__24287;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__24282 = val__$1;
var G__24283 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24282,G__24283) : f.call(null,G__24282,G__24283));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24288 = nval;
var G__24289 = (n + (1));
val__$1 = G__24288;
n = G__24289;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__24296 = val;
var G__24297 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24296,G__24297) : f.call(null,G__24296,G__24297));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24302 = nval;
var G__24303 = (n + (1));
val = G__24302;
n = G__24303;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__24298 = val__$1;
var G__24299 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24298,G__24299) : f.call(null,G__24298,G__24299));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24304 = nval;
var G__24305 = (n + (1));
val__$1 = G__24304;
n = G__24305;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__24300 = val__$1;
var G__24301 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24300,G__24301) : f.call(null,G__24300,G__24301));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24306 = nval;
var G__24307 = (n + (1));
val__$1 = G__24306;
n = G__24307;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__24309 = x;
if(G__24309){
var bit__4932__auto__ = (G__24309.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4932__auto__) || (G__24309.cljs$core$ICounted$)){
return true;
} else {
if((!G__24309.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__24309);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__24309);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__24311 = x;
if(G__24311){
var bit__4932__auto__ = (G__24311.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4932__auto__) || (G__24311.cljs$core$IIndexed$)){
return true;
} else {
if((!G__24311.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__24311);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__24311);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__24312 = coll__$1;
var G__24313 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__24312,G__24313) : cljs.core.equiv_sequential.call(null,G__24312,G__24313));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24314 = o;
var G__24315 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__24314,G__24315) : cljs.core.cons.call(null,G__24314,G__24315));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__24318 = coll__$1;
var G__24319 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__24318,G__24319) : cljs.core.equiv_sequential.call(null,G__24318,G__24319));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__24320 = cljs.core.List.EMPTY;
var G__24321 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__24320,G__24321) : cljs.core.with_meta.call(null,G__24320,G__24321));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__24322 = f;
var G__24323 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__24322,G__24323) : cljs.core.seq_reduce.call(null,G__24322,G__24323));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__24324 = f;
var G__24325 = start;
var G__24326 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__24324,G__24325,G__24326) : cljs.core.seq_reduce.call(null,G__24324,G__24325,G__24326));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24327 = o;
var G__24328 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__24327,G__24328) : cljs.core.cons.call(null,G__24327,G__24328));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__24329 = sn;
s = G__24329;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__24334__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__24335 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__24336 = cljs.core.first(xs);
var G__24337 = cljs.core.next(xs);
coll = G__24335;
x = G__24336;
xs = G__24337;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__24334 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__24338__i = 0, G__24338__a = new Array(arguments.length -  2);
while (G__24338__i < G__24338__a.length) {G__24338__a[G__24338__i] = arguments[G__24338__i + 2]; ++G__24338__i;}
  xs = new cljs.core.IndexedSeq(G__24338__a,0);
} 
return G__24334__delegate.call(this,coll,x,xs);};
G__24334.cljs$lang$maxFixedArity = 2;
G__24334.cljs$lang$applyTo = (function (arglist__24339){
var coll = cljs.core.first(arglist__24339);
arglist__24339 = cljs.core.next(arglist__24339);
var x = cljs.core.first(arglist__24339);
var xs = cljs.core.rest(arglist__24339);
return G__24334__delegate(coll,x,xs);
});
G__24334.cljs$core$IFn$_invoke$arity$variadic = G__24334__delegate;
return G__24334;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__24340 = null;
if (arguments.length > 2) {
var G__24341__i = 0, G__24341__a = new Array(arguments.length -  2);
while (G__24341__i < G__24341__a.length) {G__24341__a[G__24341__i] = arguments[G__24341__i + 2]; ++G__24341__i;}
G__24340 = new cljs.core.IndexedSeq(G__24341__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__24340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__24342 = cljs.core.next(s);
var G__24343 = (acc + (1));
s = G__24342;
acc = G__24343;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__24345 = coll;
if(G__24345){
var bit__4925__auto__ = (G__24345.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4925__auto__) || (G__24345.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__24346 = cljs.core.next(coll);
var G__24347 = (n - (1));
coll = G__24346;
n = G__24347;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__24348 = cljs.core.next(coll);
var G__24349 = (n - (1));
var G__24350 = not_found;
coll = G__24348;
n = G__24349;
not_found = G__24350;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__24355 = coll;
if(G__24355){
var bit__4925__auto__ = (G__24355.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4925__auto__) || (G__24355.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__24356 = coll;
if(G__24356){
var bit__4932__auto__ = (G__24356.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4932__auto__) || (G__24356.cljs$core$ISeq$)){
return true;
} else {
if((!G__24356.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24356);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24356);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__24357 = coll;
if(G__24357){
var bit__4925__auto__ = (G__24357.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4925__auto__) || (G__24357.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__24358 = coll;
if(G__24358){
var bit__4932__auto__ = (G__24358.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4932__auto__) || (G__24358.cljs$core$ISeq$)){
return true;
} else {
if((!G__24358.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24358);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24358);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__24359 = (n__$1 - (1));
var G__24360 = cljs.core.rest(xs);
n__$1 = G__24359;
xs = G__24360;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__24363 = o;
if(G__24363){
var bit__4925__auto__ = (G__24363.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4925__auto__) || (G__24363.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__24364 = o;
if(G__24364){
var bit__4925__auto__ = (G__24364.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4925__auto__) || (G__24364.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__24368__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__24369 = ret;
var G__24370 = cljs.core.first(kvs);
var G__24371 = cljs.core.second(kvs);
var G__24372 = cljs.core.nnext(kvs);
coll = G__24369;
k = G__24370;
v = G__24371;
kvs = G__24372;
continue;
} else {
return ret;
}
break;
}
};
var G__24368 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24373__i = 0, G__24373__a = new Array(arguments.length -  3);
while (G__24373__i < G__24373__a.length) {G__24373__a[G__24373__i] = arguments[G__24373__i + 3]; ++G__24373__i;}
  kvs = new cljs.core.IndexedSeq(G__24373__a,0);
} 
return G__24368__delegate.call(this,coll,k,v,kvs);};
G__24368.cljs$lang$maxFixedArity = 3;
G__24368.cljs$lang$applyTo = (function (arglist__24374){
var coll = cljs.core.first(arglist__24374);
arglist__24374 = cljs.core.next(arglist__24374);
var k = cljs.core.first(arglist__24374);
arglist__24374 = cljs.core.next(arglist__24374);
var v = cljs.core.first(arglist__24374);
var kvs = cljs.core.rest(arglist__24374);
return G__24368__delegate(coll,k,v,kvs);
});
G__24368.cljs$core$IFn$_invoke$arity$variadic = G__24368__delegate;
return G__24368;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__24375 = null;
if (arguments.length > 3) {
var G__24376__i = 0, G__24376__a = new Array(arguments.length -  3);
while (G__24376__i < G__24376__a.length) {G__24376__a[G__24376__i] = arguments[G__24376__i + 3]; ++G__24376__i;}
G__24375 = new cljs.core.IndexedSeq(G__24376__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__24375);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__24379__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24380 = ret;
var G__24381 = cljs.core.first(ks);
var G__24382 = cljs.core.next(ks);
coll = G__24380;
k = G__24381;
ks = G__24382;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24379 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24383__i = 0, G__24383__a = new Array(arguments.length -  2);
while (G__24383__i < G__24383__a.length) {G__24383__a[G__24383__i] = arguments[G__24383__i + 2]; ++G__24383__i;}
  ks = new cljs.core.IndexedSeq(G__24383__a,0);
} 
return G__24379__delegate.call(this,coll,k,ks);};
G__24379.cljs$lang$maxFixedArity = 2;
G__24379.cljs$lang$applyTo = (function (arglist__24384){
var coll = cljs.core.first(arglist__24384);
arglist__24384 = cljs.core.next(arglist__24384);
var k = cljs.core.first(arglist__24384);
var ks = cljs.core.rest(arglist__24384);
return G__24379__delegate(coll,k,ks);
});
G__24379.cljs$core$IFn$_invoke$arity$variadic = G__24379__delegate;
return G__24379;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__24385 = null;
if (arguments.length > 2) {
var G__24386__i = 0, G__24386__a = new Array(arguments.length -  2);
while (G__24386__i < G__24386__a.length) {G__24386__a[G__24386__i] = arguments[G__24386__i + 2]; ++G__24386__i;}
G__24385 = new cljs.core.IndexedSeq(G__24386__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24385);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__4251__auto__ = (function (){var G__24391 = f;
return goog.isFunction(G__24391);
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var G__24392 = f;
if(G__24392){
var bit__4932__auto__ = null;
if(cljs.core.truth_((function (){var or__4251__auto____$1 = bit__4932__auto__;
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
return G__24392.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__24392.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__24392);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__24392);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__24858 = null;
var G__24858__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__24858__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24394 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24394) : self__.afn.call(null,G__24394));
});
var G__24858__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24395 = a;
var G__24396 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24395,G__24396) : self__.afn.call(null,G__24395,G__24396));
});
var G__24858__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24397 = a;
var G__24398 = b;
var G__24399 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24397,G__24398,G__24399) : self__.afn.call(null,G__24397,G__24398,G__24399));
});
var G__24858__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24400 = a;
var G__24401 = b;
var G__24402 = c;
var G__24403 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__24400,G__24401,G__24402,G__24403) : self__.afn.call(null,G__24400,G__24401,G__24402,G__24403));
});
var G__24858__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24404 = a;
var G__24405 = b;
var G__24406 = c;
var G__24407 = d;
var G__24408 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__24404,G__24405,G__24406,G__24407,G__24408) : self__.afn.call(null,G__24404,G__24405,G__24406,G__24407,G__24408));
});
var G__24858__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24409 = a;
var G__24410 = b;
var G__24411 = c;
var G__24412 = d;
var G__24413 = e;
var G__24414 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__24409,G__24410,G__24411,G__24412,G__24413,G__24414) : self__.afn.call(null,G__24409,G__24410,G__24411,G__24412,G__24413,G__24414));
});
var G__24858__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24415 = a;
var G__24416 = b;
var G__24417 = c;
var G__24418 = d;
var G__24419 = e;
var G__24420 = f;
var G__24421 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__24415,G__24416,G__24417,G__24418,G__24419,G__24420,G__24421) : self__.afn.call(null,G__24415,G__24416,G__24417,G__24418,G__24419,G__24420,G__24421));
});
var G__24858__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24422 = a;
var G__24423 = b;
var G__24424 = c;
var G__24425 = d;
var G__24426 = e;
var G__24427 = f;
var G__24428 = g;
var G__24429 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__24422,G__24423,G__24424,G__24425,G__24426,G__24427,G__24428,G__24429) : self__.afn.call(null,G__24422,G__24423,G__24424,G__24425,G__24426,G__24427,G__24428,G__24429));
});
var G__24858__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24430 = a;
var G__24431 = b;
var G__24432 = c;
var G__24433 = d;
var G__24434 = e;
var G__24435 = f;
var G__24436 = g;
var G__24437 = h;
var G__24438 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__24430,G__24431,G__24432,G__24433,G__24434,G__24435,G__24436,G__24437,G__24438) : self__.afn.call(null,G__24430,G__24431,G__24432,G__24433,G__24434,G__24435,G__24436,G__24437,G__24438));
});
var G__24858__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24439 = a;
var G__24440 = b;
var G__24441 = c;
var G__24442 = d;
var G__24443 = e;
var G__24444 = f;
var G__24445 = g;
var G__24446 = h;
var G__24447 = i;
var G__24448 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__24439,G__24440,G__24441,G__24442,G__24443,G__24444,G__24445,G__24446,G__24447,G__24448) : self__.afn.call(null,G__24439,G__24440,G__24441,G__24442,G__24443,G__24444,G__24445,G__24446,G__24447,G__24448));
});
var G__24858__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24449 = a;
var G__24450 = b;
var G__24451 = c;
var G__24452 = d;
var G__24453 = e;
var G__24454 = f;
var G__24455 = g;
var G__24456 = h;
var G__24457 = i;
var G__24458 = j;
var G__24459 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24449,G__24450,G__24451,G__24452,G__24453,G__24454,G__24455,G__24456,G__24457,G__24458,G__24459) : self__.afn.call(null,G__24449,G__24450,G__24451,G__24452,G__24453,G__24454,G__24455,G__24456,G__24457,G__24458,G__24459));
});
var G__24858__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24460 = a;
var G__24461 = b;
var G__24462 = c;
var G__24463 = d;
var G__24464 = e;
var G__24465 = f;
var G__24466 = g;
var G__24467 = h;
var G__24468 = i;
var G__24469 = j;
var G__24470 = k;
var G__24471 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24460,G__24461,G__24462,G__24463,G__24464,G__24465,G__24466,G__24467,G__24468,G__24469,G__24470,G__24471) : self__.afn.call(null,G__24460,G__24461,G__24462,G__24463,G__24464,G__24465,G__24466,G__24467,G__24468,G__24469,G__24470,G__24471));
});
var G__24858__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24472 = a;
var G__24473 = b;
var G__24474 = c;
var G__24475 = d;
var G__24476 = e;
var G__24477 = f;
var G__24478 = g;
var G__24479 = h;
var G__24480 = i;
var G__24481 = j;
var G__24482 = k;
var G__24483 = l;
var G__24484 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24472,G__24473,G__24474,G__24475,G__24476,G__24477,G__24478,G__24479,G__24480,G__24481,G__24482,G__24483,G__24484) : self__.afn.call(null,G__24472,G__24473,G__24474,G__24475,G__24476,G__24477,G__24478,G__24479,G__24480,G__24481,G__24482,G__24483,G__24484));
});
var G__24858__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24485 = a;
var G__24486 = b;
var G__24487 = c;
var G__24488 = d;
var G__24489 = e;
var G__24490 = f;
var G__24491 = g;
var G__24492 = h;
var G__24493 = i;
var G__24494 = j;
var G__24495 = k;
var G__24496 = l;
var G__24497 = m;
var G__24498 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24485,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491,G__24492,G__24493,G__24494,G__24495,G__24496,G__24497,G__24498) : self__.afn.call(null,G__24485,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491,G__24492,G__24493,G__24494,G__24495,G__24496,G__24497,G__24498));
});
var G__24858__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24499 = a;
var G__24500 = b;
var G__24501 = c;
var G__24502 = d;
var G__24503 = e;
var G__24504 = f;
var G__24505 = g;
var G__24506 = h;
var G__24507 = i;
var G__24508 = j;
var G__24509 = k;
var G__24510 = l;
var G__24511 = m;
var G__24512 = n;
var G__24513 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24499,G__24500,G__24501,G__24502,G__24503,G__24504,G__24505,G__24506,G__24507,G__24508,G__24509,G__24510,G__24511,G__24512,G__24513) : self__.afn.call(null,G__24499,G__24500,G__24501,G__24502,G__24503,G__24504,G__24505,G__24506,G__24507,G__24508,G__24509,G__24510,G__24511,G__24512,G__24513));
});
var G__24858__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24514 = a;
var G__24515 = b;
var G__24516 = c;
var G__24517 = d;
var G__24518 = e;
var G__24519 = f;
var G__24520 = g;
var G__24521 = h;
var G__24522 = i;
var G__24523 = j;
var G__24524 = k;
var G__24525 = l;
var G__24526 = m;
var G__24527 = n;
var G__24528 = o;
var G__24529 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24514,G__24515,G__24516,G__24517,G__24518,G__24519,G__24520,G__24521,G__24522,G__24523,G__24524,G__24525,G__24526,G__24527,G__24528,G__24529) : self__.afn.call(null,G__24514,G__24515,G__24516,G__24517,G__24518,G__24519,G__24520,G__24521,G__24522,G__24523,G__24524,G__24525,G__24526,G__24527,G__24528,G__24529));
});
var G__24858__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24530 = a;
var G__24531 = b;
var G__24532 = c;
var G__24533 = d;
var G__24534 = e;
var G__24535 = f;
var G__24536 = g;
var G__24537 = h;
var G__24538 = i;
var G__24539 = j;
var G__24540 = k;
var G__24541 = l;
var G__24542 = m;
var G__24543 = n;
var G__24544 = o;
var G__24545 = p;
var G__24546 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536,G__24537,G__24538,G__24539,G__24540,G__24541,G__24542,G__24543,G__24544,G__24545,G__24546) : self__.afn.call(null,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536,G__24537,G__24538,G__24539,G__24540,G__24541,G__24542,G__24543,G__24544,G__24545,G__24546));
});
var G__24858__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24547 = a;
var G__24548 = b;
var G__24549 = c;
var G__24550 = d;
var G__24551 = e;
var G__24552 = f;
var G__24553 = g;
var G__24554 = h;
var G__24555 = i;
var G__24556 = j;
var G__24557 = k;
var G__24558 = l;
var G__24559 = m;
var G__24560 = n;
var G__24561 = o;
var G__24562 = p;
var G__24563 = q;
var G__24564 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24547,G__24548,G__24549,G__24550,G__24551,G__24552,G__24553,G__24554,G__24555,G__24556,G__24557,G__24558,G__24559,G__24560,G__24561,G__24562,G__24563,G__24564) : self__.afn.call(null,G__24547,G__24548,G__24549,G__24550,G__24551,G__24552,G__24553,G__24554,G__24555,G__24556,G__24557,G__24558,G__24559,G__24560,G__24561,G__24562,G__24563,G__24564));
});
var G__24858__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24565 = a;
var G__24566 = b;
var G__24567 = c;
var G__24568 = d;
var G__24569 = e;
var G__24570 = f;
var G__24571 = g;
var G__24572 = h;
var G__24573 = i;
var G__24574 = j;
var G__24575 = k;
var G__24576 = l;
var G__24577 = m;
var G__24578 = n;
var G__24579 = o;
var G__24580 = p;
var G__24581 = q;
var G__24582 = r;
var G__24583 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24565,G__24566,G__24567,G__24568,G__24569,G__24570,G__24571,G__24572,G__24573,G__24574,G__24575,G__24576,G__24577,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583) : self__.afn.call(null,G__24565,G__24566,G__24567,G__24568,G__24569,G__24570,G__24571,G__24572,G__24573,G__24574,G__24575,G__24576,G__24577,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583));
});
var G__24858__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24584 = a;
var G__24585 = b;
var G__24586 = c;
var G__24587 = d;
var G__24588 = e;
var G__24589 = f;
var G__24590 = g;
var G__24591 = h;
var G__24592 = i;
var G__24593 = j;
var G__24594 = k;
var G__24595 = l;
var G__24596 = m;
var G__24597 = n;
var G__24598 = o;
var G__24599 = p;
var G__24600 = q;
var G__24601 = r;
var G__24602 = s;
var G__24603 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24584,G__24585,G__24586,G__24587,G__24588,G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597,G__24598,G__24599,G__24600,G__24601,G__24602,G__24603) : self__.afn.call(null,G__24584,G__24585,G__24586,G__24587,G__24588,G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597,G__24598,G__24599,G__24600,G__24601,G__24602,G__24603));
});
var G__24858__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24604 = self__.afn;
var G__24605 = a;
var G__24606 = b;
var G__24607 = c;
var G__24608 = d;
var G__24609 = e;
var G__24610 = f;
var G__24611 = g;
var G__24612 = h;
var G__24613 = i;
var G__24614 = j;
var G__24615 = k;
var G__24616 = l;
var G__24617 = m;
var G__24618 = n;
var G__24619 = o;
var G__24620 = p;
var G__24621 = q;
var G__24622 = r;
var G__24623 = s;
var G__24624 = t;
var G__24625 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24604,G__24605,G__24606,G__24607,G__24608,G__24609,G__24610,G__24611,G__24612,G__24613,G__24614,G__24615,G__24616,G__24617,G__24618,G__24619,G__24620,G__24621,G__24622,G__24623,G__24624,G__24625) : cljs.core.apply.call(null,G__24604,G__24605,G__24606,G__24607,G__24608,G__24609,G__24610,G__24611,G__24612,G__24613,G__24614,G__24615,G__24616,G__24617,G__24618,G__24619,G__24620,G__24621,G__24622,G__24623,G__24624,G__24625));
});
G__24858 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24858__1.call(this,self__);
case 2:
return G__24858__2.call(this,self__,a);
case 3:
return G__24858__3.call(this,self__,a,b);
case 4:
return G__24858__4.call(this,self__,a,b,c);
case 5:
return G__24858__5.call(this,self__,a,b,c,d);
case 6:
return G__24858__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24858__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24858__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24858__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24858__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24858__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24858__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24858__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24858__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24858__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24858__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24858__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24858__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24858__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24858__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24858__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24858__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24858.cljs$core$IFn$_invoke$arity$1 = G__24858__1;
G__24858.cljs$core$IFn$_invoke$arity$2 = G__24858__2;
G__24858.cljs$core$IFn$_invoke$arity$3 = G__24858__3;
G__24858.cljs$core$IFn$_invoke$arity$4 = G__24858__4;
G__24858.cljs$core$IFn$_invoke$arity$5 = G__24858__5;
G__24858.cljs$core$IFn$_invoke$arity$6 = G__24858__6;
G__24858.cljs$core$IFn$_invoke$arity$7 = G__24858__7;
G__24858.cljs$core$IFn$_invoke$arity$8 = G__24858__8;
G__24858.cljs$core$IFn$_invoke$arity$9 = G__24858__9;
G__24858.cljs$core$IFn$_invoke$arity$10 = G__24858__10;
G__24858.cljs$core$IFn$_invoke$arity$11 = G__24858__11;
G__24858.cljs$core$IFn$_invoke$arity$12 = G__24858__12;
G__24858.cljs$core$IFn$_invoke$arity$13 = G__24858__13;
G__24858.cljs$core$IFn$_invoke$arity$14 = G__24858__14;
G__24858.cljs$core$IFn$_invoke$arity$15 = G__24858__15;
G__24858.cljs$core$IFn$_invoke$arity$16 = G__24858__16;
G__24858.cljs$core$IFn$_invoke$arity$17 = G__24858__17;
G__24858.cljs$core$IFn$_invoke$arity$18 = G__24858__18;
G__24858.cljs$core$IFn$_invoke$arity$19 = G__24858__19;
G__24858.cljs$core$IFn$_invoke$arity$20 = G__24858__20;
G__24858.cljs$core$IFn$_invoke$arity$21 = G__24858__21;
G__24858.cljs$core$IFn$_invoke$arity$22 = G__24858__22;
return G__24858;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args24393){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24393)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__24626 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24626) : self__.afn.call(null,G__24626));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__24627 = a;
var G__24628 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24627,G__24628) : self__.afn.call(null,G__24627,G__24628));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__24629 = a;
var G__24630 = b;
var G__24631 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24629,G__24630,G__24631) : self__.afn.call(null,G__24629,G__24630,G__24631));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__24632 = a;
var G__24633 = b;
var G__24634 = c;
var G__24635 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__24632,G__24633,G__24634,G__24635) : self__.afn.call(null,G__24632,G__24633,G__24634,G__24635));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__24636 = a;
var G__24637 = b;
var G__24638 = c;
var G__24639 = d;
var G__24640 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__24636,G__24637,G__24638,G__24639,G__24640) : self__.afn.call(null,G__24636,G__24637,G__24638,G__24639,G__24640));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__24641 = a;
var G__24642 = b;
var G__24643 = c;
var G__24644 = d;
var G__24645 = e;
var G__24646 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__24641,G__24642,G__24643,G__24644,G__24645,G__24646) : self__.afn.call(null,G__24641,G__24642,G__24643,G__24644,G__24645,G__24646));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__24647 = a;
var G__24648 = b;
var G__24649 = c;
var G__24650 = d;
var G__24651 = e;
var G__24652 = f;
var G__24653 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__24647,G__24648,G__24649,G__24650,G__24651,G__24652,G__24653) : self__.afn.call(null,G__24647,G__24648,G__24649,G__24650,G__24651,G__24652,G__24653));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__24654 = a;
var G__24655 = b;
var G__24656 = c;
var G__24657 = d;
var G__24658 = e;
var G__24659 = f;
var G__24660 = g;
var G__24661 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__24654,G__24655,G__24656,G__24657,G__24658,G__24659,G__24660,G__24661) : self__.afn.call(null,G__24654,G__24655,G__24656,G__24657,G__24658,G__24659,G__24660,G__24661));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__24662 = a;
var G__24663 = b;
var G__24664 = c;
var G__24665 = d;
var G__24666 = e;
var G__24667 = f;
var G__24668 = g;
var G__24669 = h;
var G__24670 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__24662,G__24663,G__24664,G__24665,G__24666,G__24667,G__24668,G__24669,G__24670) : self__.afn.call(null,G__24662,G__24663,G__24664,G__24665,G__24666,G__24667,G__24668,G__24669,G__24670));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__24671 = a;
var G__24672 = b;
var G__24673 = c;
var G__24674 = d;
var G__24675 = e;
var G__24676 = f;
var G__24677 = g;
var G__24678 = h;
var G__24679 = i;
var G__24680 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__24671,G__24672,G__24673,G__24674,G__24675,G__24676,G__24677,G__24678,G__24679,G__24680) : self__.afn.call(null,G__24671,G__24672,G__24673,G__24674,G__24675,G__24676,G__24677,G__24678,G__24679,G__24680));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__24681 = a;
var G__24682 = b;
var G__24683 = c;
var G__24684 = d;
var G__24685 = e;
var G__24686 = f;
var G__24687 = g;
var G__24688 = h;
var G__24689 = i;
var G__24690 = j;
var G__24691 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24681,G__24682,G__24683,G__24684,G__24685,G__24686,G__24687,G__24688,G__24689,G__24690,G__24691) : self__.afn.call(null,G__24681,G__24682,G__24683,G__24684,G__24685,G__24686,G__24687,G__24688,G__24689,G__24690,G__24691));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__24692 = a;
var G__24693 = b;
var G__24694 = c;
var G__24695 = d;
var G__24696 = e;
var G__24697 = f;
var G__24698 = g;
var G__24699 = h;
var G__24700 = i;
var G__24701 = j;
var G__24702 = k;
var G__24703 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24692,G__24693,G__24694,G__24695,G__24696,G__24697,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703) : self__.afn.call(null,G__24692,G__24693,G__24694,G__24695,G__24696,G__24697,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__24704 = a;
var G__24705 = b;
var G__24706 = c;
var G__24707 = d;
var G__24708 = e;
var G__24709 = f;
var G__24710 = g;
var G__24711 = h;
var G__24712 = i;
var G__24713 = j;
var G__24714 = k;
var G__24715 = l;
var G__24716 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24704,G__24705,G__24706,G__24707,G__24708,G__24709,G__24710,G__24711,G__24712,G__24713,G__24714,G__24715,G__24716) : self__.afn.call(null,G__24704,G__24705,G__24706,G__24707,G__24708,G__24709,G__24710,G__24711,G__24712,G__24713,G__24714,G__24715,G__24716));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__24717 = a;
var G__24718 = b;
var G__24719 = c;
var G__24720 = d;
var G__24721 = e;
var G__24722 = f;
var G__24723 = g;
var G__24724 = h;
var G__24725 = i;
var G__24726 = j;
var G__24727 = k;
var G__24728 = l;
var G__24729 = m;
var G__24730 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723,G__24724,G__24725,G__24726,G__24727,G__24728,G__24729,G__24730) : self__.afn.call(null,G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723,G__24724,G__24725,G__24726,G__24727,G__24728,G__24729,G__24730));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__24731 = a;
var G__24732 = b;
var G__24733 = c;
var G__24734 = d;
var G__24735 = e;
var G__24736 = f;
var G__24737 = g;
var G__24738 = h;
var G__24739 = i;
var G__24740 = j;
var G__24741 = k;
var G__24742 = l;
var G__24743 = m;
var G__24744 = n;
var G__24745 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24731,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737,G__24738,G__24739,G__24740,G__24741,G__24742,G__24743,G__24744,G__24745) : self__.afn.call(null,G__24731,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737,G__24738,G__24739,G__24740,G__24741,G__24742,G__24743,G__24744,G__24745));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__24746 = a;
var G__24747 = b;
var G__24748 = c;
var G__24749 = d;
var G__24750 = e;
var G__24751 = f;
var G__24752 = g;
var G__24753 = h;
var G__24754 = i;
var G__24755 = j;
var G__24756 = k;
var G__24757 = l;
var G__24758 = m;
var G__24759 = n;
var G__24760 = o;
var G__24761 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24746,G__24747,G__24748,G__24749,G__24750,G__24751,G__24752,G__24753,G__24754,G__24755,G__24756,G__24757,G__24758,G__24759,G__24760,G__24761) : self__.afn.call(null,G__24746,G__24747,G__24748,G__24749,G__24750,G__24751,G__24752,G__24753,G__24754,G__24755,G__24756,G__24757,G__24758,G__24759,G__24760,G__24761));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__24762 = a;
var G__24763 = b;
var G__24764 = c;
var G__24765 = d;
var G__24766 = e;
var G__24767 = f;
var G__24768 = g;
var G__24769 = h;
var G__24770 = i;
var G__24771 = j;
var G__24772 = k;
var G__24773 = l;
var G__24774 = m;
var G__24775 = n;
var G__24776 = o;
var G__24777 = p;
var G__24778 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24762,G__24763,G__24764,G__24765,G__24766,G__24767,G__24768,G__24769,G__24770,G__24771,G__24772,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778) : self__.afn.call(null,G__24762,G__24763,G__24764,G__24765,G__24766,G__24767,G__24768,G__24769,G__24770,G__24771,G__24772,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__24779 = a;
var G__24780 = b;
var G__24781 = c;
var G__24782 = d;
var G__24783 = e;
var G__24784 = f;
var G__24785 = g;
var G__24786 = h;
var G__24787 = i;
var G__24788 = j;
var G__24789 = k;
var G__24790 = l;
var G__24791 = m;
var G__24792 = n;
var G__24793 = o;
var G__24794 = p;
var G__24795 = q;
var G__24796 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24779,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796) : self__.afn.call(null,G__24779,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__24797 = a;
var G__24798 = b;
var G__24799 = c;
var G__24800 = d;
var G__24801 = e;
var G__24802 = f;
var G__24803 = g;
var G__24804 = h;
var G__24805 = i;
var G__24806 = j;
var G__24807 = k;
var G__24808 = l;
var G__24809 = m;
var G__24810 = n;
var G__24811 = o;
var G__24812 = p;
var G__24813 = q;
var G__24814 = r;
var G__24815 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24797,G__24798,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815) : self__.afn.call(null,G__24797,G__24798,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__24816 = a;
var G__24817 = b;
var G__24818 = c;
var G__24819 = d;
var G__24820 = e;
var G__24821 = f;
var G__24822 = g;
var G__24823 = h;
var G__24824 = i;
var G__24825 = j;
var G__24826 = k;
var G__24827 = l;
var G__24828 = m;
var G__24829 = n;
var G__24830 = o;
var G__24831 = p;
var G__24832 = q;
var G__24833 = r;
var G__24834 = s;
var G__24835 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24816,G__24817,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835) : self__.afn.call(null,G__24816,G__24817,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24836 = self__.afn;
var G__24837 = a;
var G__24838 = b;
var G__24839 = c;
var G__24840 = d;
var G__24841 = e;
var G__24842 = f;
var G__24843 = g;
var G__24844 = h;
var G__24845 = i;
var G__24846 = j;
var G__24847 = k;
var G__24848 = l;
var G__24849 = m;
var G__24850 = n;
var G__24851 = o;
var G__24852 = p;
var G__24853 = q;
var G__24854 = r;
var G__24855 = s;
var G__24856 = t;
var G__24857 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24836,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855,G__24856,G__24857) : cljs.core.apply.call(null,G__24836,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855,G__24856,G__24857));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__24862 = o;
if(G__24862){
var bit__4932__auto__ = (G__24862.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4932__auto__) || (G__24862.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__24862.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24862);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24862);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__4239__auto__ = !((o == null));
if(and__4239__auto__){
var G__24866 = o;
if(G__24866){
var bit__4932__auto__ = (G__24866.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4932__auto__) || (G__24866.cljs$core$IMeta$)){
return true;
} else {
if((!G__24866.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24866);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24866);
}
} else {
return and__4239__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__24869__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24870 = ret;
var G__24871 = cljs.core.first(ks);
var G__24872 = cljs.core.next(ks);
coll = G__24870;
k = G__24871;
ks = G__24872;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24869 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24873__i = 0, G__24873__a = new Array(arguments.length -  2);
while (G__24873__i < G__24873__a.length) {G__24873__a[G__24873__i] = arguments[G__24873__i + 2]; ++G__24873__i;}
  ks = new cljs.core.IndexedSeq(G__24873__a,0);
} 
return G__24869__delegate.call(this,coll,k,ks);};
G__24869.cljs$lang$maxFixedArity = 2;
G__24869.cljs$lang$applyTo = (function (arglist__24874){
var coll = cljs.core.first(arglist__24874);
arglist__24874 = cljs.core.next(arglist__24874);
var k = cljs.core.first(arglist__24874);
var ks = cljs.core.rest(arglist__24874);
return G__24869__delegate(coll,k,ks);
});
G__24869.cljs$core$IFn$_invoke$arity$variadic = G__24869__delegate;
return G__24869;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__24875 = null;
if (arguments.length > 2) {
var G__24876__i = 0, G__24876__a = new Array(arguments.length -  2);
while (G__24876__i < G__24876__a.length) {G__24876__a[G__24876__i] = arguments[G__24876__i + 2]; ++G__24876__i;}
G__24875 = new cljs.core.IndexedSeq(G__24876__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24878 = x;
if(G__24878){
var bit__4932__auto__ = (G__24878.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4932__auto__) || (G__24878.cljs$core$ICollection$)){
return true;
} else {
if((!G__24878.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24878);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24878);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24880 = x;
if(G__24880){
var bit__4932__auto__ = (G__24880.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4932__auto__) || (G__24880.cljs$core$ISet$)){
return true;
} else {
if((!G__24880.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24880);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24880);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__24882 = x;
if(G__24882){
var bit__4932__auto__ = (G__24882.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4932__auto__) || (G__24882.cljs$core$IAssociative$)){
return true;
} else {
if((!G__24882.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24882);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24882);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__24884 = x;
if(G__24884){
var bit__4932__auto__ = (G__24884.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4932__auto__) || (G__24884.cljs$core$ISequential$)){
return true;
} else {
if((!G__24884.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24884);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24884);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__24886 = x;
if(G__24886){
var bit__4932__auto__ = (G__24886.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4932__auto__) || (G__24886.cljs$core$ISorted$)){
return true;
} else {
if((!G__24886.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24886);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24886);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__24888 = x;
if(G__24888){
var bit__4932__auto__ = (G__24888.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4932__auto__) || (G__24888.cljs$core$IReduce$)){
return true;
} else {
if((!G__24888.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24888);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24888);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24890 = x;
if(G__24890){
var bit__4932__auto__ = (G__24890.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4932__auto__) || (G__24890.cljs$core$IMap$)){
return true;
} else {
if((!G__24890.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24890);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24890);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__24892 = x;
if(G__24892){
var bit__4932__auto__ = (G__24892.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4932__auto__) || (G__24892.cljs$core$IVector$)){
return true;
} else {
if((!G__24892.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24892);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24892);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__24894 = x;
if(G__24894){
var bit__4925__auto__ = (G__24894.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4925__auto__) || (G__24894.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj24900 = {};
return obj24900;
});
var js_obj__1 = (function() { 
var G__24903__delegate = function (keyvals){
var G__24901 = goog.object.create;
var G__24902 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__24901,G__24902) : cljs.core.apply.call(null,G__24901,G__24902));
};
var G__24903 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24904__i = 0, G__24904__a = new Array(arguments.length -  0);
while (G__24904__i < G__24904__a.length) {G__24904__a[G__24904__i] = arguments[G__24904__i + 0]; ++G__24904__i;}
  keyvals = new cljs.core.IndexedSeq(G__24904__a,0);
} 
return G__24903__delegate.call(this,keyvals);};
G__24903.cljs$lang$maxFixedArity = 0;
G__24903.cljs$lang$applyTo = (function (arglist__24905){
var keyvals = cljs.core.seq(arglist__24905);
return G__24903__delegate(keyvals);
});
G__24903.cljs$core$IFn$_invoke$arity$variadic = G__24903__delegate;
return G__24903;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__24906 = null;
if (arguments.length > 0) {
var G__24907__i = 0, G__24907__a = new Array(arguments.length -  0);
while (G__24907__i < G__24907__a.length) {G__24907__a[G__24907__i] = arguments[G__24907__i + 0]; ++G__24907__i;}
G__24906 = new cljs.core.IndexedSeq(G__24907__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__24906);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__24910_24912 = obj;
var G__24911_24913 = ((function (G__24910_24912,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__24910_24912,keys))
;
goog.object.forEach(G__24910_24912,G__24911_24913);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24914 = (i__$1 + (1));
var G__24915 = (j__$1 + (1));
var G__24916 = (len__$1 - (1));
i__$1 = G__24914;
j__$1 = G__24915;
len__$1 = G__24916;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24917 = (i__$1 - (1));
var G__24918 = (j__$1 - (1));
var G__24919 = (len__$1 - (1));
i__$1 = G__24917;
j__$1 = G__24918;
len__$1 = G__24919;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj24921 = {};
return obj24921;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__24923 = s;
if(G__24923){
var bit__4932__auto__ = (G__24923.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4932__auto__) || (G__24923.cljs$core$ISeq$)){
return true;
} else {
if((!G__24923.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24923);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24923);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__24925 = s;
if(G__24925){
var bit__4932__auto__ = (G__24925.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4932__auto__) || (G__24925.cljs$core$ISeqable$)){
return true;
} else {
if((!G__24925.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24925);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24925);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__4251__auto__ = cljs.core.fn_QMARK_(f);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var G__24929 = f;
if(G__24929){
var bit__4932__auto__ = (G__24929.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4932__auto__) || (G__24929.cljs$core$IFn$)){
return true;
} else {
if((!G__24929.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24929);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24929);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__24942 = n;
return isNaN(G__24942);
})())) && (!((n === Infinity))) && (((function (){var G__24943 = n;
return parseFloat(G__24943);
})() === (function (){var G__24944 = n;
var G__24945 = (10);
return parseInt(G__24944,G__24945);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__24946__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__24947 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__24948 = etc;
s = G__24947;
xs = G__24948;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__24946 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24949__i = 0, G__24949__a = new Array(arguments.length -  2);
while (G__24949__i < G__24949__a.length) {G__24949__a[G__24949__i] = arguments[G__24949__i + 2]; ++G__24949__i;}
  more = new cljs.core.IndexedSeq(G__24949__a,0);
} 
return G__24946__delegate.call(this,x,y,more);};
G__24946.cljs$lang$maxFixedArity = 2;
G__24946.cljs$lang$applyTo = (function (arglist__24950){
var x = cljs.core.first(arglist__24950);
arglist__24950 = cljs.core.next(arglist__24950);
var y = cljs.core.first(arglist__24950);
var more = cljs.core.rest(arglist__24950);
return G__24946__delegate(x,y,more);
});
G__24946.cljs$core$IFn$_invoke$arity$variadic = G__24946__delegate;
return G__24946;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__24951 = null;
if (arguments.length > 2) {
var G__24952__i = 0, G__24952__a = new Array(arguments.length -  2);
while (G__24952__i < G__24952__a.length) {G__24952__a[G__24952__i] = arguments[G__24952__i + 2]; ++G__24952__i;}
G__24951 = new cljs.core.IndexedSeq(G__24952__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__24956 = x;
if(G__24956){
var bit__4925__auto__ = (G__24956.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4925__auto__) || (G__24956.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__24957 = x;
var G__24958 = y;
return goog.array.defaultCompare(G__24957,G__24958);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__24963 = xs;
var G__24964 = ys;
var G__24965 = len;
var G__24966 = (n + (1));
xs = G__24963;
ys = G__24964;
len = G__24965;
n = G__24966;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__24971 = x;
var G__24972 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24971,G__24972) : f.call(null,G__24971,G__24972));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24973 = y;
var G__24974 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24973,G__24974) : f.call(null,G__24973,G__24974));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__24980 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24980) : cljs.core.to_array.call(null,G__24980));
})();
var G__24981_24983 = a;
var G__24982_24984 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__24981_24983,G__24982_24984);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__24990 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24990) : keyfn.call(null,G__24990));
})(),(function (){var G__24991 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24991) : keyfn.call(null,G__24991));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__24997 = f;
var G__24998 = cljs.core.first(s);
var G__24999 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24997,G__24998,G__24999) : cljs.core.reduce.call(null,G__24997,G__24998,G__24999));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__25000 = val__$1;
var G__25001 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25000,G__25001) : f.call(null,G__25000,G__25001));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25002 = nval;
var G__25003 = cljs.core.next(coll__$1);
val__$1 = G__25002;
coll__$1 = G__25003;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__25007 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__25007) : cljs.core.to_array.call(null,G__25007));
})();
var G__25008_25010 = a;
goog.array.shuffle(G__25008_25010);

var G__25009 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__25009) : cljs.core.vec.call(null,G__25009));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__25013 = coll;
if(G__25013){
var bit__4925__auto__ = (G__25013.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4925__auto__) || (G__25013.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__25014 = coll;
if(G__25014){
var bit__4925__auto__ = (G__25014.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4925__auto__) || (G__25014.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__25023 = null;
var G__25023__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__25023__1 = (function (x){
var G__25020 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__25020) : cf.call(null,G__25020));
});
var G__25023__2 = (function (x,y){
var G__25021 = x;
var G__25022 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25021,G__25022) : f.call(null,G__25021,G__25022));
});
G__25023 = function(x,y){
switch(arguments.length){
case 0:
return G__25023__0.call(this);
case 1:
return G__25023__1.call(this,x);
case 2:
return G__25023__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25023.cljs$core$IFn$_invoke$arity$0 = G__25023__0;
G__25023.cljs$core$IFn$_invoke$arity$1 = G__25023__1;
G__25023.cljs$core$IFn$_invoke$arity$2 = G__25023__2;
return G__25023;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__25030 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25030) : xform.call(null,G__25030));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__25031 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__25031) : f__$1.call(null,G__25031));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__25032__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__25032 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25033__i = 0, G__25033__a = new Array(arguments.length -  2);
while (G__25033__i < G__25033__a.length) {G__25033__a[G__25033__i] = arguments[G__25033__i + 2]; ++G__25033__i;}
  more = new cljs.core.IndexedSeq(G__25033__a,0);
} 
return G__25032__delegate.call(this,x,y,more);};
G__25032.cljs$lang$maxFixedArity = 2;
G__25032.cljs$lang$applyTo = (function (arglist__25034){
var x = cljs.core.first(arglist__25034);
arglist__25034 = cljs.core.next(arglist__25034);
var y = cljs.core.first(arglist__25034);
var more = cljs.core.rest(arglist__25034);
return G__25032__delegate(x,y,more);
});
G__25032.cljs$core$IFn$_invoke$arity$variadic = G__25032__delegate;
return G__25032;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__25035 = null;
if (arguments.length > 2) {
var G__25036__i = 0, G__25036__a = new Array(arguments.length -  2);
while (G__25036__i < G__25036__a.length) {G__25036__a[G__25036__i] = arguments[G__25036__i + 2]; ++G__25036__i;}
G__25035 = new cljs.core.IndexedSeq(G__25036__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25035);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__25037__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__25037 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25038__i = 0, G__25038__a = new Array(arguments.length -  2);
while (G__25038__i < G__25038__a.length) {G__25038__a[G__25038__i] = arguments[G__25038__i + 2]; ++G__25038__i;}
  more = new cljs.core.IndexedSeq(G__25038__a,0);
} 
return G__25037__delegate.call(this,x,y,more);};
G__25037.cljs$lang$maxFixedArity = 2;
G__25037.cljs$lang$applyTo = (function (arglist__25039){
var x = cljs.core.first(arglist__25039);
arglist__25039 = cljs.core.next(arglist__25039);
var y = cljs.core.first(arglist__25039);
var more = cljs.core.rest(arglist__25039);
return G__25037__delegate(x,y,more);
});
G__25037.cljs$core$IFn$_invoke$arity$variadic = G__25037__delegate;
return G__25037;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__25040 = null;
if (arguments.length > 2) {
var G__25041__i = 0, G__25041__a = new Array(arguments.length -  2);
while (G__25041__i < G__25041__a.length) {G__25041__a[G__25041__i] = arguments[G__25041__i + 2]; ++G__25041__i;}
G__25040 = new cljs.core.IndexedSeq(G__25041__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25040);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__25042__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__25042 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25043__i = 0, G__25043__a = new Array(arguments.length -  2);
while (G__25043__i < G__25043__a.length) {G__25043__a[G__25043__i] = arguments[G__25043__i + 2]; ++G__25043__i;}
  more = new cljs.core.IndexedSeq(G__25043__a,0);
} 
return G__25042__delegate.call(this,x,y,more);};
G__25042.cljs$lang$maxFixedArity = 2;
G__25042.cljs$lang$applyTo = (function (arglist__25044){
var x = cljs.core.first(arglist__25044);
arglist__25044 = cljs.core.next(arglist__25044);
var y = cljs.core.first(arglist__25044);
var more = cljs.core.rest(arglist__25044);
return G__25042__delegate(x,y,more);
});
G__25042.cljs$core$IFn$_invoke$arity$variadic = G__25042__delegate;
return G__25042;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__25045 = null;
if (arguments.length > 2) {
var G__25046__i = 0, G__25046__a = new Array(arguments.length -  2);
while (G__25046__i < G__25046__a.length) {G__25046__a[G__25046__i] = arguments[G__25046__i + 2]; ++G__25046__i;}
G__25045 = new cljs.core.IndexedSeq(G__25046__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25045);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__25051__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__25051 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25052__i = 0, G__25052__a = new Array(arguments.length -  2);
while (G__25052__i < G__25052__a.length) {G__25052__a[G__25052__i] = arguments[G__25052__i + 2]; ++G__25052__i;}
  more = new cljs.core.IndexedSeq(G__25052__a,0);
} 
return G__25051__delegate.call(this,x,y,more);};
G__25051.cljs$lang$maxFixedArity = 2;
G__25051.cljs$lang$applyTo = (function (arglist__25053){
var x = cljs.core.first(arglist__25053);
arglist__25053 = cljs.core.next(arglist__25053);
var y = cljs.core.first(arglist__25053);
var more = cljs.core.rest(arglist__25053);
return G__25051__delegate(x,y,more);
});
G__25051.cljs$core$IFn$_invoke$arity$variadic = G__25051__delegate;
return G__25051;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__25054 = null;
if (arguments.length > 2) {
var G__25055__i = 0, G__25055__a = new Array(arguments.length -  2);
while (G__25055__i < G__25055__a.length) {G__25055__a[G__25055__i] = arguments[G__25055__i + 2]; ++G__25055__i;}
G__25054 = new cljs.core.IndexedSeq(G__25055__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25054);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__25056__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__25057 = y;
var G__25058 = cljs.core.first(more);
var G__25059 = cljs.core.next(more);
x = G__25057;
y = G__25058;
more = G__25059;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25056 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25060__i = 0, G__25060__a = new Array(arguments.length -  2);
while (G__25060__i < G__25060__a.length) {G__25060__a[G__25060__i] = arguments[G__25060__i + 2]; ++G__25060__i;}
  more = new cljs.core.IndexedSeq(G__25060__a,0);
} 
return G__25056__delegate.call(this,x,y,more);};
G__25056.cljs$lang$maxFixedArity = 2;
G__25056.cljs$lang$applyTo = (function (arglist__25061){
var x = cljs.core.first(arglist__25061);
arglist__25061 = cljs.core.next(arglist__25061);
var y = cljs.core.first(arglist__25061);
var more = cljs.core.rest(arglist__25061);
return G__25056__delegate(x,y,more);
});
G__25056.cljs$core$IFn$_invoke$arity$variadic = G__25056__delegate;
return G__25056;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__25062 = null;
if (arguments.length > 2) {
var G__25063__i = 0, G__25063__a = new Array(arguments.length -  2);
while (G__25063__i < G__25063__a.length) {G__25063__a[G__25063__i] = arguments[G__25063__i + 2]; ++G__25063__i;}
G__25062 = new cljs.core.IndexedSeq(G__25063__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25062);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__25064__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__25065 = y;
var G__25066 = cljs.core.first(more);
var G__25067 = cljs.core.next(more);
x = G__25065;
y = G__25066;
more = G__25067;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25064 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25068__i = 0, G__25068__a = new Array(arguments.length -  2);
while (G__25068__i < G__25068__a.length) {G__25068__a[G__25068__i] = arguments[G__25068__i + 2]; ++G__25068__i;}
  more = new cljs.core.IndexedSeq(G__25068__a,0);
} 
return G__25064__delegate.call(this,x,y,more);};
G__25064.cljs$lang$maxFixedArity = 2;
G__25064.cljs$lang$applyTo = (function (arglist__25069){
var x = cljs.core.first(arglist__25069);
arglist__25069 = cljs.core.next(arglist__25069);
var y = cljs.core.first(arglist__25069);
var more = cljs.core.rest(arglist__25069);
return G__25064__delegate(x,y,more);
});
G__25064.cljs$core$IFn$_invoke$arity$variadic = G__25064__delegate;
return G__25064;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__25070 = null;
if (arguments.length > 2) {
var G__25071__i = 0, G__25071__a = new Array(arguments.length -  2);
while (G__25071__i < G__25071__a.length) {G__25071__a[G__25071__i] = arguments[G__25071__i + 2]; ++G__25071__i;}
G__25070 = new cljs.core.IndexedSeq(G__25071__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25070);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__25072__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__25073 = y;
var G__25074 = cljs.core.first(more);
var G__25075 = cljs.core.next(more);
x = G__25073;
y = G__25074;
more = G__25075;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25072 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25076__i = 0, G__25076__a = new Array(arguments.length -  2);
while (G__25076__i < G__25076__a.length) {G__25076__a[G__25076__i] = arguments[G__25076__i + 2]; ++G__25076__i;}
  more = new cljs.core.IndexedSeq(G__25076__a,0);
} 
return G__25072__delegate.call(this,x,y,more);};
G__25072.cljs$lang$maxFixedArity = 2;
G__25072.cljs$lang$applyTo = (function (arglist__25077){
var x = cljs.core.first(arglist__25077);
arglist__25077 = cljs.core.next(arglist__25077);
var y = cljs.core.first(arglist__25077);
var more = cljs.core.rest(arglist__25077);
return G__25072__delegate(x,y,more);
});
G__25072.cljs$core$IFn$_invoke$arity$variadic = G__25072__delegate;
return G__25072;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__25078 = null;
if (arguments.length > 2) {
var G__25079__i = 0, G__25079__a = new Array(arguments.length -  2);
while (G__25079__i < G__25079__a.length) {G__25079__a[G__25079__i] = arguments[G__25079__i + 2]; ++G__25079__i;}
G__25078 = new cljs.core.IndexedSeq(G__25079__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25078);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__25080__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__25081 = y;
var G__25082 = cljs.core.first(more);
var G__25083 = cljs.core.next(more);
x = G__25081;
y = G__25082;
more = G__25083;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25080 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25084__i = 0, G__25084__a = new Array(arguments.length -  2);
while (G__25084__i < G__25084__a.length) {G__25084__a[G__25084__i] = arguments[G__25084__i + 2]; ++G__25084__i;}
  more = new cljs.core.IndexedSeq(G__25084__a,0);
} 
return G__25080__delegate.call(this,x,y,more);};
G__25080.cljs$lang$maxFixedArity = 2;
G__25080.cljs$lang$applyTo = (function (arglist__25085){
var x = cljs.core.first(arglist__25085);
arglist__25085 = cljs.core.next(arglist__25085);
var y = cljs.core.first(arglist__25085);
var more = cljs.core.rest(arglist__25085);
return G__25080__delegate(x,y,more);
});
G__25080.cljs$core$IFn$_invoke$arity$variadic = G__25080__delegate;
return G__25080;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__25086 = null;
if (arguments.length > 2) {
var G__25087__i = 0, G__25087__a = new Array(arguments.length -  2);
while (G__25087__i < G__25087__a.length) {G__25087__a[G__25087__i] = arguments[G__25087__i + 2]; ++G__25087__i;}
G__25086 = new cljs.core.IndexedSeq(G__25087__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25086);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4568__auto__ = x;
var y__4569__auto__ = y;
return ((x__4568__auto__ > y__4569__auto__) ? x__4568__auto__ : y__4569__auto__);
});
var max__3 = (function() { 
var G__25088__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4568__auto__ = x;
var y__4569__auto__ = y;
return ((x__4568__auto__ > y__4569__auto__) ? x__4568__auto__ : y__4569__auto__);
})(),more);
};
var G__25088 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25089__i = 0, G__25089__a = new Array(arguments.length -  2);
while (G__25089__i < G__25089__a.length) {G__25089__a[G__25089__i] = arguments[G__25089__i + 2]; ++G__25089__i;}
  more = new cljs.core.IndexedSeq(G__25089__a,0);
} 
return G__25088__delegate.call(this,x,y,more);};
G__25088.cljs$lang$maxFixedArity = 2;
G__25088.cljs$lang$applyTo = (function (arglist__25090){
var x = cljs.core.first(arglist__25090);
arglist__25090 = cljs.core.next(arglist__25090);
var y = cljs.core.first(arglist__25090);
var more = cljs.core.rest(arglist__25090);
return G__25088__delegate(x,y,more);
});
G__25088.cljs$core$IFn$_invoke$arity$variadic = G__25088__delegate;
return G__25088;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__25091 = null;
if (arguments.length > 2) {
var G__25092__i = 0, G__25092__a = new Array(arguments.length -  2);
while (G__25092__i < G__25092__a.length) {G__25092__a[G__25092__i] = arguments[G__25092__i + 2]; ++G__25092__i;}
G__25091 = new cljs.core.IndexedSeq(G__25092__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25091);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4575__auto__ = x;
var y__4576__auto__ = y;
return ((x__4575__auto__ < y__4576__auto__) ? x__4575__auto__ : y__4576__auto__);
});
var min__3 = (function() { 
var G__25093__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4575__auto__ = x;
var y__4576__auto__ = y;
return ((x__4575__auto__ < y__4576__auto__) ? x__4575__auto__ : y__4576__auto__);
})(),more);
};
var G__25093 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25094__i = 0, G__25094__a = new Array(arguments.length -  2);
while (G__25094__i < G__25094__a.length) {G__25094__a[G__25094__i] = arguments[G__25094__i + 2]; ++G__25094__i;}
  more = new cljs.core.IndexedSeq(G__25094__a,0);
} 
return G__25093__delegate.call(this,x,y,more);};
G__25093.cljs$lang$maxFixedArity = 2;
G__25093.cljs$lang$applyTo = (function (arglist__25095){
var x = cljs.core.first(arglist__25095);
arglist__25095 = cljs.core.next(arglist__25095);
var y = cljs.core.first(arglist__25095);
var more = cljs.core.rest(arglist__25095);
return G__25093__delegate(x,y,more);
});
G__25093.cljs$core$IFn$_invoke$arity$variadic = G__25093__delegate;
return G__25093;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__25096 = null;
if (arguments.length > 2) {
var G__25097__i = 0, G__25097__a = new Array(arguments.length -  2);
while (G__25097__i < G__25097__a.length) {G__25097__a[G__25097__i] = arguments[G__25097__i + 2]; ++G__25097__i;}
G__25096 = new cljs.core.IndexedSeq(G__25097__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25096);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__25098__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__25098 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25099__i = 0, G__25099__a = new Array(arguments.length -  2);
while (G__25099__i < G__25099__a.length) {G__25099__a[G__25099__i] = arguments[G__25099__i + 2]; ++G__25099__i;}
  more = new cljs.core.IndexedSeq(G__25099__a,0);
} 
return G__25098__delegate.call(this,x,y,more);};
G__25098.cljs$lang$maxFixedArity = 2;
G__25098.cljs$lang$applyTo = (function (arglist__25100){
var x = cljs.core.first(arglist__25100);
arglist__25100 = cljs.core.next(arglist__25100);
var y = cljs.core.first(arglist__25100);
var more = cljs.core.rest(arglist__25100);
return G__25098__delegate(x,y,more);
});
G__25098.cljs$core$IFn$_invoke$arity$variadic = G__25098__delegate;
return G__25098;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__25101 = null;
if (arguments.length > 2) {
var G__25102__i = 0, G__25102__a = new Array(arguments.length -  2);
while (G__25102__i < G__25102__a.length) {G__25102__a[G__25102__i] = arguments[G__25102__i + 2]; ++G__25102__i;}
G__25101 = new cljs.core.IndexedSeq(G__25102__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25101);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__25103__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__25103 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25104__i = 0, G__25104__a = new Array(arguments.length -  2);
while (G__25104__i < G__25104__a.length) {G__25104__a[G__25104__i] = arguments[G__25104__i + 2]; ++G__25104__i;}
  more = new cljs.core.IndexedSeq(G__25104__a,0);
} 
return G__25103__delegate.call(this,x,y,more);};
G__25103.cljs$lang$maxFixedArity = 2;
G__25103.cljs$lang$applyTo = (function (arglist__25105){
var x = cljs.core.first(arglist__25105);
arglist__25105 = cljs.core.next(arglist__25105);
var y = cljs.core.first(arglist__25105);
var more = cljs.core.rest(arglist__25105);
return G__25103__delegate(x,y,more);
});
G__25103.cljs$core$IFn$_invoke$arity$variadic = G__25103__delegate;
return G__25103;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__25106 = null;
if (arguments.length > 2) {
var G__25107__i = 0, G__25107__a = new Array(arguments.length -  2);
while (G__25107__i < G__25107__a.length) {G__25107__a[G__25107__i] = arguments[G__25107__i + 2]; ++G__25107__i;}
G__25106 = new cljs.core.IndexedSeq(G__25107__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25106);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__25112__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__25112 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25113__i = 0, G__25113__a = new Array(arguments.length -  2);
while (G__25113__i < G__25113__a.length) {G__25113__a[G__25113__i] = arguments[G__25113__i + 2]; ++G__25113__i;}
  more = new cljs.core.IndexedSeq(G__25113__a,0);
} 
return G__25112__delegate.call(this,x,y,more);};
G__25112.cljs$lang$maxFixedArity = 2;
G__25112.cljs$lang$applyTo = (function (arglist__25114){
var x = cljs.core.first(arglist__25114);
arglist__25114 = cljs.core.next(arglist__25114);
var y = cljs.core.first(arglist__25114);
var more = cljs.core.rest(arglist__25114);
return G__25112__delegate(x,y,more);
});
G__25112.cljs$core$IFn$_invoke$arity$variadic = G__25112__delegate;
return G__25112;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__25115 = null;
if (arguments.length > 2) {
var G__25116__i = 0, G__25116__a = new Array(arguments.length -  2);
while (G__25116__i < G__25116__a.length) {G__25116__a[G__25116__i] = arguments[G__25116__i + 2]; ++G__25116__i;}
G__25115 = new cljs.core.IndexedSeq(G__25116__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25115);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__25117__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__25117 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25118__i = 0, G__25118__a = new Array(arguments.length -  2);
while (G__25118__i < G__25118__a.length) {G__25118__a[G__25118__i] = arguments[G__25118__i + 2]; ++G__25118__i;}
  more = new cljs.core.IndexedSeq(G__25118__a,0);
} 
return G__25117__delegate.call(this,x,y,more);};
G__25117.cljs$lang$maxFixedArity = 2;
G__25117.cljs$lang$applyTo = (function (arglist__25119){
var x = cljs.core.first(arglist__25119);
arglist__25119 = cljs.core.next(arglist__25119);
var y = cljs.core.first(arglist__25119);
var more = cljs.core.rest(arglist__25119);
return G__25117__delegate(x,y,more);
});
G__25117.cljs$core$IFn$_invoke$arity$variadic = G__25117__delegate;
return G__25117;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__25120 = null;
if (arguments.length > 2) {
var G__25121__i = 0, G__25121__a = new Array(arguments.length -  2);
while (G__25121__i < G__25121__a.length) {G__25121__a[G__25121__i] = arguments[G__25121__i + 2]; ++G__25121__i;}
G__25120 = new cljs.core.IndexedSeq(G__25121__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__25122__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__25122 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25123__i = 0, G__25123__a = new Array(arguments.length -  2);
while (G__25123__i < G__25123__a.length) {G__25123__a[G__25123__i] = arguments[G__25123__i + 2]; ++G__25123__i;}
  more = new cljs.core.IndexedSeq(G__25123__a,0);
} 
return G__25122__delegate.call(this,x,y,more);};
G__25122.cljs$lang$maxFixedArity = 2;
G__25122.cljs$lang$applyTo = (function (arglist__25124){
var x = cljs.core.first(arglist__25124);
arglist__25124 = cljs.core.next(arglist__25124);
var y = cljs.core.first(arglist__25124);
var more = cljs.core.rest(arglist__25124);
return G__25122__delegate(x,y,more);
});
G__25122.cljs$core$IFn$_invoke$arity$variadic = G__25122__delegate;
return G__25122;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__25125 = null;
if (arguments.length > 2) {
var G__25126__i = 0, G__25126__a = new Array(arguments.length -  2);
while (G__25126__i < G__25126__a.length) {G__25126__a[G__25126__i] = arguments[G__25126__i + 2]; ++G__25126__i;}
G__25125 = new cljs.core.IndexedSeq(G__25126__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25125);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__25129 = x;
var G__25130 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__25129,G__25130) : cljs.core.mod.call(null,G__25129,G__25130));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__25131__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__25131 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25132__i = 0, G__25132__a = new Array(arguments.length -  2);
while (G__25132__i < G__25132__a.length) {G__25132__a[G__25132__i] = arguments[G__25132__i + 2]; ++G__25132__i;}
  more = new cljs.core.IndexedSeq(G__25132__a,0);
} 
return G__25131__delegate.call(this,x,y,more);};
G__25131.cljs$lang$maxFixedArity = 2;
G__25131.cljs$lang$applyTo = (function (arglist__25133){
var x = cljs.core.first(arglist__25133);
arglist__25133 = cljs.core.next(arglist__25133);
var y = cljs.core.first(arglist__25133);
var more = cljs.core.rest(arglist__25133);
return G__25131__delegate(x,y,more);
});
G__25131.cljs$core$IFn$_invoke$arity$variadic = G__25131__delegate;
return G__25131;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__25134 = null;
if (arguments.length > 2) {
var G__25135__i = 0, G__25135__a = new Array(arguments.length -  2);
while (G__25135__i < G__25135__a.length) {G__25135__a[G__25135__i] = arguments[G__25135__i + 2]; ++G__25135__i;}
G__25134 = new cljs.core.IndexedSeq(G__25135__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__25136__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__25136 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25137__i = 0, G__25137__a = new Array(arguments.length -  2);
while (G__25137__i < G__25137__a.length) {G__25137__a[G__25137__i] = arguments[G__25137__i + 2]; ++G__25137__i;}
  more = new cljs.core.IndexedSeq(G__25137__a,0);
} 
return G__25136__delegate.call(this,x,y,more);};
G__25136.cljs$lang$maxFixedArity = 2;
G__25136.cljs$lang$applyTo = (function (arglist__25138){
var x = cljs.core.first(arglist__25138);
arglist__25138 = cljs.core.next(arglist__25138);
var y = cljs.core.first(arglist__25138);
var more = cljs.core.rest(arglist__25138);
return G__25136__delegate(x,y,more);
});
G__25136.cljs$core$IFn$_invoke$arity$variadic = G__25136__delegate;
return G__25136;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__25139 = null;
if (arguments.length > 2) {
var G__25140__i = 0, G__25140__a = new Array(arguments.length -  2);
while (G__25140__i < G__25140__a.length) {G__25140__a[G__25140__i] = arguments[G__25140__i + 2]; ++G__25140__i;}
G__25139 = new cljs.core.IndexedSeq(G__25140__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25139);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__25143 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__25143) : Math.floor.call(null,G__25143));
} else {
var G__25144 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__25144) : Math.ceil.call(null,G__25144));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__25145__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__25145 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25146__i = 0, G__25146__a = new Array(arguments.length -  2);
while (G__25146__i < G__25146__a.length) {G__25146__a[G__25146__i] = arguments[G__25146__i + 2]; ++G__25146__i;}
  more = new cljs.core.IndexedSeq(G__25146__a,0);
} 
return G__25145__delegate.call(this,x,y,more);};
G__25145.cljs$lang$maxFixedArity = 2;
G__25145.cljs$lang$applyTo = (function (arglist__25147){
var x = cljs.core.first(arglist__25147);
arglist__25147 = cljs.core.next(arglist__25147);
var y = cljs.core.first(arglist__25147);
var more = cljs.core.rest(arglist__25147);
return G__25145__delegate(x,y,more);
});
G__25145.cljs$core$IFn$_invoke$arity$variadic = G__25145__delegate;
return G__25145;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__25148 = null;
if (arguments.length > 2) {
var G__25149__i = 0, G__25149__a = new Array(arguments.length -  2);
while (G__25149__i < G__25149__a.length) {G__25149__a[G__25149__i] = arguments[G__25149__i + 2]; ++G__25149__i;}
G__25148 = new cljs.core.IndexedSeq(G__25149__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25148);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__25150__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__25150 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25151__i = 0, G__25151__a = new Array(arguments.length -  2);
while (G__25151__i < G__25151__a.length) {G__25151__a[G__25151__i] = arguments[G__25151__i + 2]; ++G__25151__i;}
  more = new cljs.core.IndexedSeq(G__25151__a,0);
} 
return G__25150__delegate.call(this,x,y,more);};
G__25150.cljs$lang$maxFixedArity = 2;
G__25150.cljs$lang$applyTo = (function (arglist__25152){
var x = cljs.core.first(arglist__25152);
arglist__25152 = cljs.core.next(arglist__25152);
var y = cljs.core.first(arglist__25152);
var more = cljs.core.rest(arglist__25152);
return G__25150__delegate(x,y,more);
});
G__25150.cljs$core$IFn$_invoke$arity$variadic = G__25150__delegate;
return G__25150;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__25153 = null;
if (arguments.length > 2) {
var G__25154__i = 0, G__25154__a = new Array(arguments.length -  2);
while (G__25154__i < G__25154__a.length) {G__25154__a[G__25154__i] = arguments[G__25154__i + 2]; ++G__25154__i;}
G__25153 = new cljs.core.IndexedSeq(G__25154__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25153);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__25155__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__25155 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25156__i = 0, G__25156__a = new Array(arguments.length -  2);
while (G__25156__i < G__25156__a.length) {G__25156__a[G__25156__i] = arguments[G__25156__i + 2]; ++G__25156__i;}
  more = new cljs.core.IndexedSeq(G__25156__a,0);
} 
return G__25155__delegate.call(this,x,y,more);};
G__25155.cljs$lang$maxFixedArity = 2;
G__25155.cljs$lang$applyTo = (function (arglist__25157){
var x = cljs.core.first(arglist__25157);
arglist__25157 = cljs.core.next(arglist__25157);
var y = cljs.core.first(arglist__25157);
var more = cljs.core.rest(arglist__25157);
return G__25155__delegate(x,y,more);
});
G__25155.cljs$core$IFn$_invoke$arity$variadic = G__25155__delegate;
return G__25155;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__25158 = null;
if (arguments.length > 2) {
var G__25159__i = 0, G__25159__a = new Array(arguments.length -  2);
while (G__25159__i < G__25159__a.length) {G__25159__a[G__25159__i] = arguments[G__25159__i + 2]; ++G__25159__i;}
G__25158 = new cljs.core.IndexedSeq(G__25159__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__25160__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__25160 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25161__i = 0, G__25161__a = new Array(arguments.length -  2);
while (G__25161__i < G__25161__a.length) {G__25161__a[G__25161__i] = arguments[G__25161__i + 2]; ++G__25161__i;}
  more = new cljs.core.IndexedSeq(G__25161__a,0);
} 
return G__25160__delegate.call(this,x,y,more);};
G__25160.cljs$lang$maxFixedArity = 2;
G__25160.cljs$lang$applyTo = (function (arglist__25162){
var x = cljs.core.first(arglist__25162);
arglist__25162 = cljs.core.next(arglist__25162);
var y = cljs.core.first(arglist__25162);
var more = cljs.core.rest(arglist__25162);
return G__25160__delegate(x,y,more);
});
G__25160.cljs$core$IFn$_invoke$arity$variadic = G__25160__delegate;
return G__25160;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__25163 = null;
if (arguments.length > 2) {
var G__25164__i = 0, G__25164__a = new Array(arguments.length -  2);
while (G__25164__i < G__25164__a.length) {G__25164__a[G__25164__i] = arguments[G__25164__i + 2]; ++G__25164__i;}
G__25163 = new cljs.core.IndexedSeq(G__25164__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__25169__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__25170 = y;
var G__25171 = cljs.core.first(more);
var G__25172 = cljs.core.next(more);
x = G__25170;
y = G__25171;
more = G__25172;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25169 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25173__i = 0, G__25173__a = new Array(arguments.length -  2);
while (G__25173__i < G__25173__a.length) {G__25173__a[G__25173__i] = arguments[G__25173__i + 2]; ++G__25173__i;}
  more = new cljs.core.IndexedSeq(G__25173__a,0);
} 
return G__25169__delegate.call(this,x,y,more);};
G__25169.cljs$lang$maxFixedArity = 2;
G__25169.cljs$lang$applyTo = (function (arglist__25174){
var x = cljs.core.first(arglist__25174);
arglist__25174 = cljs.core.next(arglist__25174);
var y = cljs.core.first(arglist__25174);
var more = cljs.core.rest(arglist__25174);
return G__25169__delegate(x,y,more);
});
G__25169.cljs$core$IFn$_invoke$arity$variadic = G__25169__delegate;
return G__25169;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__25175 = null;
if (arguments.length > 2) {
var G__25176__i = 0, G__25176__a = new Array(arguments.length -  2);
while (G__25176__i < G__25176__a.length) {G__25176__a[G__25176__i] = arguments[G__25176__i + 2]; ++G__25176__i;}
G__25175 = new cljs.core.IndexedSeq(G__25176__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25175);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__25177 = (n__$1 - (1));
var G__25178 = cljs.core.next(xs);
n__$1 = G__25177;
xs = G__25178;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__25182 = x;
return goog.string.buildString(G__25182);
}
});
var str__2 = (function() { 
var G__25183__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__25184 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__25185 = cljs.core.next(more);
sb = G__25184;
more = G__25185;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__25183 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__25186__i = 0, G__25186__a = new Array(arguments.length -  1);
while (G__25186__i < G__25186__a.length) {G__25186__a[G__25186__i] = arguments[G__25186__i + 1]; ++G__25186__i;}
  ys = new cljs.core.IndexedSeq(G__25186__a,0);
} 
return G__25183__delegate.call(this,x,ys);};
G__25183.cljs$lang$maxFixedArity = 1;
G__25183.cljs$lang$applyTo = (function (arglist__25187){
var x = cljs.core.first(arglist__25187);
var ys = cljs.core.rest(arglist__25187);
return G__25183__delegate(x,ys);
});
G__25183.cljs$core$IFn$_invoke$arity$variadic = G__25183__delegate;
return G__25183;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__25188 = null;
if (arguments.length > 1) {
var G__25189__i = 0, G__25189__a = new Array(arguments.length -  1);
while (G__25189__i < G__25189__a.length) {G__25189__a[G__25189__i] = arguments[G__25189__i + 1]; ++G__25189__i;}
G__25188 = new cljs.core.IndexedSeq(G__25189__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__25190 = cljs.core.next(xs);
var G__25191 = cljs.core.next(ys);
xs = G__25190;
ys = G__25191;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__25192 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__25193 = cljs.core.next(s);
res = G__25192;
s = G__25193;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__25198 = ((h + (cljs.core.hash((function (){var G__25196 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25196) : cljs.core.key.call(null,G__25196));
})()) ^ cljs.core.hash((function (){var G__25197 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25197) : cljs.core.val.call(null,G__25197));
})()))) % (4503599627370496));
var G__25199 = cljs.core.next(s);
h = G__25198;
s = G__25199;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__25200 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__25201 = cljs.core.next(s__$1);
h = G__25200;
s__$1 = G__25201;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__25212_25222 = cljs.core.seq(fn_map);
var chunk__25213_25223 = null;
var count__25214_25224 = (0);
var i__25215_25225 = (0);
while(true){
if((i__25215_25225 < count__25214_25224)){
var vec__25216_25226 = chunk__25213_25223.cljs$core$IIndexed$_nth$arity$2(null,i__25215_25225);
var key_name_25227 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25216_25226,(0),null);
var f_25228 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25216_25226,(1),null);
var str_name_25229 = (function (){var G__25217 = key_name_25227;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25217) : cljs.core.name.call(null,G__25217));
})();
(obj[str_name_25229] = f_25228);

var G__25230 = seq__25212_25222;
var G__25231 = chunk__25213_25223;
var G__25232 = count__25214_25224;
var G__25233 = (i__25215_25225 + (1));
seq__25212_25222 = G__25230;
chunk__25213_25223 = G__25231;
count__25214_25224 = G__25232;
i__25215_25225 = G__25233;
continue;
} else {
var temp__4126__auto___25234 = cljs.core.seq(seq__25212_25222);
if(temp__4126__auto___25234){
var seq__25212_25235__$1 = temp__4126__auto___25234;
if(cljs.core.chunked_seq_QMARK_(seq__25212_25235__$1)){
var c__5038__auto___25236 = (function (){var G__25218 = seq__25212_25235__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__25218) : cljs.core.chunk_first.call(null,G__25218));
})();
var G__25237 = (function (){var G__25219 = seq__25212_25235__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__25219) : cljs.core.chunk_rest.call(null,G__25219));
})();
var G__25238 = c__5038__auto___25236;
var G__25239 = cljs.core.count(c__5038__auto___25236);
var G__25240 = (0);
seq__25212_25222 = G__25237;
chunk__25213_25223 = G__25238;
count__25214_25224 = G__25239;
i__25215_25225 = G__25240;
continue;
} else {
var vec__25220_25241 = cljs.core.first(seq__25212_25235__$1);
var key_name_25242 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25220_25241,(0),null);
var f_25243 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25220_25241,(1),null);
var str_name_25244 = (function (){var G__25221 = key_name_25242;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25221) : cljs.core.name.call(null,G__25221));
})();
(obj[str_name_25244] = f_25243);

var G__25245 = cljs.core.next(seq__25212_25235__$1);
var G__25246 = null;
var G__25247 = (0);
var G__25248 = (0);
seq__25212_25222 = G__25245;
chunk__25213_25223 = G__25246;
count__25214_25224 = G__25247;
i__25215_25225 = G__25248;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__25250 = coll;
if(G__25250){
var bit__4932__auto__ = (G__25250.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4932__auto__) || (G__25250.cljs$core$IReversible$)){
return true;
} else {
if((!G__25250.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__25250);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__25250);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__25251 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__25251;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__25252 = (i - (1));
var G__25253 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__25252;
r = G__25253;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__25254__i = 0, G__25254__a = new Array(arguments.length -  0);
while (G__25254__i < G__25254__a.length) {G__25254__a[G__25254__i] = arguments[G__25254__i + 0]; ++G__25254__i;}
  xs = new cljs.core.IndexedSeq(G__25254__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__25255){
var xs = cljs.core.seq(arglist__25255);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__4251__auto__ = (coll == null);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var G__25259 = coll;
if(G__25259){
var bit__4925__auto__ = (G__25259.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4925__auto__) || (G__25259.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__25261 = x;
if(G__25261){
var bit__4932__auto__ = (G__25261.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4932__auto__) || (G__25261.cljs$core$IList$)){
return true;
} else {
if((!G__25261.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__25261);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__25261);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4239__auto__ = cljs.core.not(a.ns);
if(and__4239__auto__){
return b.ns;
} else {
return and__4239__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__25268 = a.ns;
var G__25269 = b.ns;
return goog.array.defaultCompare(G__25268,G__25269);
})();
if(((0) === nsc)){
var G__25270 = a.name;
var G__25271 = b.name;
return goog.array.defaultCompare(G__25270,G__25271);
} else {
return nsc;
}
}
} else {
var G__25272 = a.name;
var G__25273 = b.name;
return goog.array.defaultCompare(G__25272,G__25273);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4672__auto__ = self__._hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__25275 = null;
var G__25275__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__25275__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__25275 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__25275__2.call(this,self__,coll);
case 3:
return G__25275__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25275.cljs$core$IFn$_invoke$arity$2 = G__25275__2;
G__25275.cljs$core$IFn$_invoke$arity$3 = G__25275__3;
return G__25275;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args25274){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25274)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__25277 = x;
if(G__25277){
var bit__4925__auto__ = (G__25277.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4925__auto__) || (G__25277.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__25279 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25279) : cljs.core.name.call(null,G__25279));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__25280 = ls.sval();
ls = G__25280;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__25282 = s;
if(G__25282){
var bit__4925__auto__ = (G__25282.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4925__auto__) || (G__25282.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__25283 = cljs.core.next(s__$1);
s__$1 = G__25283;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_25284 = (0);
var xs_25285 = cljs.core.seq(coll);
while(true){
if(xs_25285){
(ret[i_25284] = cljs.core.to_array(cljs.core.first(xs_25285)));

var G__25286 = (i_25284 + (1));
var G__25287 = cljs.core.next(xs_25285);
i_25284 = G__25286;
xs_25285 = G__25287;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25290 = (i + (1));
var G__25291 = cljs.core.next(s__$1);
i = G__25290;
s__$1 = G__25291;
continue;
} else {
return a;
}
break;
}
} else {
var n__5138__auto___25292 = size;
var i_25293 = (0);
while(true){
if((i_25293 < n__5138__auto___25292)){
(a[i_25293] = init_val_or_seq);

var G__25294 = (i_25293 + (1));
i_25293 = G__25294;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25297 = (i + (1));
var G__25298 = cljs.core.next(s__$1);
i = G__25297;
s__$1 = G__25298;
continue;
} else {
return a;
}
break;
}
} else {
var n__5138__auto___25299 = size;
var i_25300 = (0);
while(true){
if((i_25300 < n__5138__auto___25299)){
(a[i_25300] = init_val_or_seq);

var G__25301 = (i_25300 + (1));
i_25300 = G__25301;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25304 = (i + (1));
var G__25305 = cljs.core.next(s__$1);
i = G__25304;
s__$1 = G__25305;
continue;
} else {
return a;
}
break;
}
} else {
var n__5138__auto___25306 = size;
var i_25307 = (0);
while(true){
if((i_25307 < n__5138__auto___25306)){
(a[i_25307] = init_val_or_seq);

var G__25308 = (i_25307 + (1));
i_25307 = G__25308;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25311 = (i + (1));
var G__25312 = cljs.core.next(s__$1);
i = G__25311;
s__$1 = G__25312;
continue;
} else {
return a;
}
break;
}
} else {
var n__5138__auto___25313 = size;
var i_25314 = (0);
while(true){
if((i_25314 < n__5138__auto___25313)){
(a[i_25314] = init_val_or_seq);

var G__25315 = (i_25314 + (1));
i_25314 = G__25315;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__25316 = cljs.core.next(s__$1);
var G__25317 = (i - (1));
var G__25318 = (sum + (1));
s__$1 = G__25316;
i = G__25317;
sum = G__25318;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__25338__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__25338 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25339__i = 0, G__25339__a = new Array(arguments.length -  2);
while (G__25339__i < G__25339__a.length) {G__25339__a[G__25339__i] = arguments[G__25339__i + 2]; ++G__25339__i;}
  zs = new cljs.core.IndexedSeq(G__25339__a,0);
} 
return G__25338__delegate.call(this,x,y,zs);};
G__25338.cljs$lang$maxFixedArity = 2;
G__25338.cljs$lang$applyTo = (function (arglist__25340){
var x = cljs.core.first(arglist__25340);
arglist__25340 = cljs.core.next(arglist__25340);
var y = cljs.core.first(arglist__25340);
var zs = cljs.core.rest(arglist__25340);
return G__25338__delegate(x,y,zs);
});
G__25338.cljs$core$IFn$_invoke$arity$variadic = G__25338__delegate;
return G__25338;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__25341 = null;
if (arguments.length > 2) {
var G__25342__i = 0, G__25342__a = new Array(arguments.length -  2);
while (G__25342__i < G__25342__a.length) {G__25342__a[G__25342__i] = arguments[G__25342__i + 2]; ++G__25342__i;}
G__25341 = new cljs.core.IndexedSeq(G__25342__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__25343__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__25343 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__25344__i = 0, G__25344__a = new Array(arguments.length -  4);
while (G__25344__i < G__25344__a.length) {G__25344__a[G__25344__i] = arguments[G__25344__i + 4]; ++G__25344__i;}
  more = new cljs.core.IndexedSeq(G__25344__a,0);
} 
return G__25343__delegate.call(this,a,b,c,d,more);};
G__25343.cljs$lang$maxFixedArity = 4;
G__25343.cljs$lang$applyTo = (function (arglist__25345){
var a = cljs.core.first(arglist__25345);
arglist__25345 = cljs.core.next(arglist__25345);
var b = cljs.core.first(arglist__25345);
arglist__25345 = cljs.core.next(arglist__25345);
var c = cljs.core.first(arglist__25345);
arglist__25345 = cljs.core.next(arglist__25345);
var d = cljs.core.first(arglist__25345);
var more = cljs.core.rest(arglist__25345);
return G__25343__delegate(a,b,c,d,more);
});
G__25343.cljs$core$IFn$_invoke$arity$variadic = G__25343__delegate;
return G__25343;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__25346 = null;
if (arguments.length > 4) {
var G__25347__i = 0, G__25347__a = new Array(arguments.length -  4);
while (G__25347__i < G__25347__a.length) {G__25347__a[G__25347__i] = arguments[G__25347__i + 4]; ++G__25347__i;}
G__25346 = new cljs.core.IndexedSeq(G__25347__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__25346);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__25348__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__25349 = ntcoll;
var G__25350 = cljs.core.first(vals);
var G__25351 = cljs.core.next(vals);
tcoll = G__25349;
val = G__25350;
vals = G__25351;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25348 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__25352__i = 0, G__25352__a = new Array(arguments.length -  2);
while (G__25352__i < G__25352__a.length) {G__25352__a[G__25352__i] = arguments[G__25352__i + 2]; ++G__25352__i;}
  vals = new cljs.core.IndexedSeq(G__25352__a,0);
} 
return G__25348__delegate.call(this,tcoll,val,vals);};
G__25348.cljs$lang$maxFixedArity = 2;
G__25348.cljs$lang$applyTo = (function (arglist__25353){
var tcoll = cljs.core.first(arglist__25353);
arglist__25353 = cljs.core.next(arglist__25353);
var val = cljs.core.first(arglist__25353);
var vals = cljs.core.rest(arglist__25353);
return G__25348__delegate(tcoll,val,vals);
});
G__25348.cljs$core$IFn$_invoke$arity$variadic = G__25348__delegate;
return G__25348;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__25354 = null;
if (arguments.length > 2) {
var G__25355__i = 0, G__25355__a = new Array(arguments.length -  2);
while (G__25355__i < G__25355__a.length) {G__25355__a[G__25355__i] = arguments[G__25355__i + 2]; ++G__25355__i;}
G__25354 = new cljs.core.IndexedSeq(G__25355__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__25354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__25356__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__25357 = ntcoll;
var G__25358 = cljs.core.first(kvs);
var G__25359 = cljs.core.second(kvs);
var G__25360 = cljs.core.nnext(kvs);
tcoll = G__25357;
key = G__25358;
val = G__25359;
kvs = G__25360;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25356 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__25361__i = 0, G__25361__a = new Array(arguments.length -  3);
while (G__25361__i < G__25361__a.length) {G__25361__a[G__25361__i] = arguments[G__25361__i + 3]; ++G__25361__i;}
  kvs = new cljs.core.IndexedSeq(G__25361__a,0);
} 
return G__25356__delegate.call(this,tcoll,key,val,kvs);};
G__25356.cljs$lang$maxFixedArity = 3;
G__25356.cljs$lang$applyTo = (function (arglist__25362){
var tcoll = cljs.core.first(arglist__25362);
arglist__25362 = cljs.core.next(arglist__25362);
var key = cljs.core.first(arglist__25362);
arglist__25362 = cljs.core.next(arglist__25362);
var val = cljs.core.first(arglist__25362);
var kvs = cljs.core.rest(arglist__25362);
return G__25356__delegate(tcoll,key,val,kvs);
});
G__25356.cljs$core$IFn$_invoke$arity$variadic = G__25356__delegate;
return G__25356;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__25363 = null;
if (arguments.length > 3) {
var G__25364__i = 0, G__25364__a = new Array(arguments.length -  3);
while (G__25364__i < G__25364__a.length) {G__25364__a[G__25364__i] = arguments[G__25364__i + 3]; ++G__25364__i;}
G__25363 = new cljs.core.IndexedSeq(G__25364__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__25363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__25365__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__25366 = ntcoll;
var G__25367 = cljs.core.first(ks);
var G__25368 = cljs.core.next(ks);
tcoll = G__25366;
key = G__25367;
ks = G__25368;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25365 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__25369__i = 0, G__25369__a = new Array(arguments.length -  2);
while (G__25369__i < G__25369__a.length) {G__25369__a[G__25369__i] = arguments[G__25369__i + 2]; ++G__25369__i;}
  ks = new cljs.core.IndexedSeq(G__25369__a,0);
} 
return G__25365__delegate.call(this,tcoll,key,ks);};
G__25365.cljs$lang$maxFixedArity = 2;
G__25365.cljs$lang$applyTo = (function (arglist__25370){
var tcoll = cljs.core.first(arglist__25370);
arglist__25370 = cljs.core.next(arglist__25370);
var key = cljs.core.first(arglist__25370);
var ks = cljs.core.rest(arglist__25370);
return G__25365__delegate(tcoll,key,ks);
});
G__25365.cljs$core$IFn$_invoke$arity$variadic = G__25365__delegate;
return G__25365;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__25371 = null;
if (arguments.length > 2) {
var G__25372__i = 0, G__25372__a = new Array(arguments.length -  2);
while (G__25372__i < G__25372__a.length) {G__25372__a[G__25372__i] = arguments[G__25372__i + 2]; ++G__25372__i;}
G__25371 = new cljs.core.IndexedSeq(G__25372__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__25371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__25373__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__25374 = ntcoll;
var G__25375 = cljs.core.first(vals);
var G__25376 = cljs.core.next(vals);
tcoll = G__25374;
val = G__25375;
vals = G__25376;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25373 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__25377__i = 0, G__25377__a = new Array(arguments.length -  2);
while (G__25377__i < G__25377__a.length) {G__25377__a[G__25377__i] = arguments[G__25377__i + 2]; ++G__25377__i;}
  vals = new cljs.core.IndexedSeq(G__25377__a,0);
} 
return G__25373__delegate.call(this,tcoll,val,vals);};
G__25373.cljs$lang$maxFixedArity = 2;
G__25373.cljs$lang$applyTo = (function (arglist__25378){
var tcoll = cljs.core.first(arglist__25378);
arglist__25378 = cljs.core.next(arglist__25378);
var val = cljs.core.first(arglist__25378);
var vals = cljs.core.rest(arglist__25378);
return G__25373__delegate(tcoll,val,vals);
});
G__25373.cljs$core$IFn$_invoke$arity$variadic = G__25373__delegate;
return G__25373;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__25379 = null;
if (arguments.length > 2) {
var G__25380__i = 0, G__25380__a = new Array(arguments.length -  2);
while (G__25380__i < G__25380__a.length) {G__25380__a[G__25380__i] = arguments[G__25380__i + 2]; ++G__25380__i;}
G__25379 = new cljs.core.IndexedSeq(G__25380__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__25379);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a5182 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a5182);
} else {
var G__25591 = a5182;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25591) : f.call(null,G__25591));
}
} else {
var b5183 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a5182,b5183);
} else {
var G__25592 = a5182;
var G__25593 = b5183;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25592,G__25593) : f.call(null,G__25592,G__25593));
}
} else {
var c5184 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a5182,b5183,c5184);
} else {
var G__25594 = a5182;
var G__25595 = b5183;
var G__25596 = c5184;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25594,G__25595,G__25596) : f.call(null,G__25594,G__25595,G__25596));
}
} else {
var d5185 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a5182,b5183,c5184,d5185);
} else {
var G__25597 = a5182;
var G__25598 = b5183;
var G__25599 = c5184;
var G__25600 = d5185;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25597,G__25598,G__25599,G__25600) : f.call(null,G__25597,G__25598,G__25599,G__25600));
}
} else {
var e5186 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a5182,b5183,c5184,d5185,e5186);
} else {
var G__25601 = a5182;
var G__25602 = b5183;
var G__25603 = c5184;
var G__25604 = d5185;
var G__25605 = e5186;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25601,G__25602,G__25603,G__25604,G__25605) : f.call(null,G__25601,G__25602,G__25603,G__25604,G__25605));
}
} else {
var f5187 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a5182,b5183,c5184,d5185,e5186,f5187);
} else {
var G__25606 = a5182;
var G__25607 = b5183;
var G__25608 = c5184;
var G__25609 = d5185;
var G__25610 = e5186;
var G__25611 = f5187;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25606,G__25607,G__25608,G__25609,G__25610,G__25611) : f.call(null,G__25606,G__25607,G__25608,G__25609,G__25610,G__25611));
}
} else {
var g5188 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a5182,b5183,c5184,d5185,e5186,f5187,g5188);
} else {
var G__25612 = a5182;
var G__25613 = b5183;
var G__25614 = c5184;
var G__25615 = d5185;
var G__25616 = e5186;
var G__25617 = f5187;
var G__25618 = g5188;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__25612,G__25613,G__25614,G__25615,G__25616,G__25617,G__25618) : f.call(null,G__25612,G__25613,G__25614,G__25615,G__25616,G__25617,G__25618));
}
} else {
var h5189 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189);
} else {
var G__25619 = a5182;
var G__25620 = b5183;
var G__25621 = c5184;
var G__25622 = d5185;
var G__25623 = e5186;
var G__25624 = f5187;
var G__25625 = g5188;
var G__25626 = h5189;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625,G__25626) : f.call(null,G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625,G__25626));
}
} else {
var i5190 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190);
} else {
var G__25627 = a5182;
var G__25628 = b5183;
var G__25629 = c5184;
var G__25630 = d5185;
var G__25631 = e5186;
var G__25632 = f5187;
var G__25633 = g5188;
var G__25634 = h5189;
var G__25635 = i5190;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__25627,G__25628,G__25629,G__25630,G__25631,G__25632,G__25633,G__25634,G__25635) : f.call(null,G__25627,G__25628,G__25629,G__25630,G__25631,G__25632,G__25633,G__25634,G__25635));
}
} else {
var j5191 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191);
} else {
var G__25636 = a5182;
var G__25637 = b5183;
var G__25638 = c5184;
var G__25639 = d5185;
var G__25640 = e5186;
var G__25641 = f5187;
var G__25642 = g5188;
var G__25643 = h5189;
var G__25644 = i5190;
var G__25645 = j5191;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__25636,G__25637,G__25638,G__25639,G__25640,G__25641,G__25642,G__25643,G__25644,G__25645) : f.call(null,G__25636,G__25637,G__25638,G__25639,G__25640,G__25641,G__25642,G__25643,G__25644,G__25645));
}
} else {
var k5192 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191,k5192);
} else {
var G__25646 = a5182;
var G__25647 = b5183;
var G__25648 = c5184;
var G__25649 = d5185;
var G__25650 = e5186;
var G__25651 = f5187;
var G__25652 = g5188;
var G__25653 = h5189;
var G__25654 = i5190;
var G__25655 = j5191;
var G__25656 = k5192;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__25646,G__25647,G__25648,G__25649,G__25650,G__25651,G__25652,G__25653,G__25654,G__25655,G__25656) : f.call(null,G__25646,G__25647,G__25648,G__25649,G__25650,G__25651,G__25652,G__25653,G__25654,G__25655,G__25656));
}
} else {
var l5193 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191,k5192,l5193);
} else {
var G__25657 = a5182;
var G__25658 = b5183;
var G__25659 = c5184;
var G__25660 = d5185;
var G__25661 = e5186;
var G__25662 = f5187;
var G__25663 = g5188;
var G__25664 = h5189;
var G__25665 = i5190;
var G__25666 = j5191;
var G__25667 = k5192;
var G__25668 = l5193;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664,G__25665,G__25666,G__25667,G__25668) : f.call(null,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664,G__25665,G__25666,G__25667,G__25668));
}
} else {
var m5194 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191,k5192,l5193,m5194);
} else {
var G__25669 = a5182;
var G__25670 = b5183;
var G__25671 = c5184;
var G__25672 = d5185;
var G__25673 = e5186;
var G__25674 = f5187;
var G__25675 = g5188;
var G__25676 = h5189;
var G__25677 = i5190;
var G__25678 = j5191;
var G__25679 = k5192;
var G__25680 = l5193;
var G__25681 = m5194;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__25669,G__25670,G__25671,G__25672,G__25673,G__25674,G__25675,G__25676,G__25677,G__25678,G__25679,G__25680,G__25681) : f.call(null,G__25669,G__25670,G__25671,G__25672,G__25673,G__25674,G__25675,G__25676,G__25677,G__25678,G__25679,G__25680,G__25681));
}
} else {
var n5195 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191,k5192,l5193,m5194,n5195);
} else {
var G__25682 = a5182;
var G__25683 = b5183;
var G__25684 = c5184;
var G__25685 = d5185;
var G__25686 = e5186;
var G__25687 = f5187;
var G__25688 = g5188;
var G__25689 = h5189;
var G__25690 = i5190;
var G__25691 = j5191;
var G__25692 = k5192;
var G__25693 = l5193;
var G__25694 = m5194;
var G__25695 = n5195;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__25682,G__25683,G__25684,G__25685,G__25686,G__25687,G__25688,G__25689,G__25690,G__25691,G__25692,G__25693,G__25694,G__25695) : f.call(null,G__25682,G__25683,G__25684,G__25685,G__25686,G__25687,G__25688,G__25689,G__25690,G__25691,G__25692,G__25693,G__25694,G__25695));
}
} else {
var o5196 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191,k5192,l5193,m5194,n5195,o5196);
} else {
var G__25696 = a5182;
var G__25697 = b5183;
var G__25698 = c5184;
var G__25699 = d5185;
var G__25700 = e5186;
var G__25701 = f5187;
var G__25702 = g5188;
var G__25703 = h5189;
var G__25704 = i5190;
var G__25705 = j5191;
var G__25706 = k5192;
var G__25707 = l5193;
var G__25708 = m5194;
var G__25709 = n5195;
var G__25710 = o5196;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__25696,G__25697,G__25698,G__25699,G__25700,G__25701,G__25702,G__25703,G__25704,G__25705,G__25706,G__25707,G__25708,G__25709,G__25710) : f.call(null,G__25696,G__25697,G__25698,G__25699,G__25700,G__25701,G__25702,G__25703,G__25704,G__25705,G__25706,G__25707,G__25708,G__25709,G__25710));
}
} else {
var p5197 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191,k5192,l5193,m5194,n5195,o5196,p5197);
} else {
var G__25711 = a5182;
var G__25712 = b5183;
var G__25713 = c5184;
var G__25714 = d5185;
var G__25715 = e5186;
var G__25716 = f5187;
var G__25717 = g5188;
var G__25718 = h5189;
var G__25719 = i5190;
var G__25720 = j5191;
var G__25721 = k5192;
var G__25722 = l5193;
var G__25723 = m5194;
var G__25724 = n5195;
var G__25725 = o5196;
var G__25726 = p5197;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__25711,G__25712,G__25713,G__25714,G__25715,G__25716,G__25717,G__25718,G__25719,G__25720,G__25721,G__25722,G__25723,G__25724,G__25725,G__25726) : f.call(null,G__25711,G__25712,G__25713,G__25714,G__25715,G__25716,G__25717,G__25718,G__25719,G__25720,G__25721,G__25722,G__25723,G__25724,G__25725,G__25726));
}
} else {
var q5198 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191,k5192,l5193,m5194,n5195,o5196,p5197,q5198);
} else {
var G__25727 = a5182;
var G__25728 = b5183;
var G__25729 = c5184;
var G__25730 = d5185;
var G__25731 = e5186;
var G__25732 = f5187;
var G__25733 = g5188;
var G__25734 = h5189;
var G__25735 = i5190;
var G__25736 = j5191;
var G__25737 = k5192;
var G__25738 = l5193;
var G__25739 = m5194;
var G__25740 = n5195;
var G__25741 = o5196;
var G__25742 = p5197;
var G__25743 = q5198;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__25727,G__25728,G__25729,G__25730,G__25731,G__25732,G__25733,G__25734,G__25735,G__25736,G__25737,G__25738,G__25739,G__25740,G__25741,G__25742,G__25743) : f.call(null,G__25727,G__25728,G__25729,G__25730,G__25731,G__25732,G__25733,G__25734,G__25735,G__25736,G__25737,G__25738,G__25739,G__25740,G__25741,G__25742,G__25743));
}
} else {
var r5199 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191,k5192,l5193,m5194,n5195,o5196,p5197,q5198,r5199);
} else {
var G__25744 = a5182;
var G__25745 = b5183;
var G__25746 = c5184;
var G__25747 = d5185;
var G__25748 = e5186;
var G__25749 = f5187;
var G__25750 = g5188;
var G__25751 = h5189;
var G__25752 = i5190;
var G__25753 = j5191;
var G__25754 = k5192;
var G__25755 = l5193;
var G__25756 = m5194;
var G__25757 = n5195;
var G__25758 = o5196;
var G__25759 = p5197;
var G__25760 = q5198;
var G__25761 = r5199;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__25744,G__25745,G__25746,G__25747,G__25748,G__25749,G__25750,G__25751,G__25752,G__25753,G__25754,G__25755,G__25756,G__25757,G__25758,G__25759,G__25760,G__25761) : f.call(null,G__25744,G__25745,G__25746,G__25747,G__25748,G__25749,G__25750,G__25751,G__25752,G__25753,G__25754,G__25755,G__25756,G__25757,G__25758,G__25759,G__25760,G__25761));
}
} else {
var s5200 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191,k5192,l5193,m5194,n5195,o5196,p5197,q5198,r5199,s5200);
} else {
var G__25762 = a5182;
var G__25763 = b5183;
var G__25764 = c5184;
var G__25765 = d5185;
var G__25766 = e5186;
var G__25767 = f5187;
var G__25768 = g5188;
var G__25769 = h5189;
var G__25770 = i5190;
var G__25771 = j5191;
var G__25772 = k5192;
var G__25773 = l5193;
var G__25774 = m5194;
var G__25775 = n5195;
var G__25776 = o5196;
var G__25777 = p5197;
var G__25778 = q5198;
var G__25779 = r5199;
var G__25780 = s5200;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__25762,G__25763,G__25764,G__25765,G__25766,G__25767,G__25768,G__25769,G__25770,G__25771,G__25772,G__25773,G__25774,G__25775,G__25776,G__25777,G__25778,G__25779,G__25780) : f.call(null,G__25762,G__25763,G__25764,G__25765,G__25766,G__25767,G__25768,G__25769,G__25770,G__25771,G__25772,G__25773,G__25774,G__25775,G__25776,G__25777,G__25778,G__25779,G__25780));
}
} else {
var t5201 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a5182,b5183,c5184,d5185,e5186,f5187,g5188,h5189,i5190,j5191,k5192,l5193,m5194,n5195,o5196,p5197,q5198,r5199,s5200,t5201);
} else {
var G__25781 = a5182;
var G__25782 = b5183;
var G__25783 = c5184;
var G__25784 = d5185;
var G__25785 = e5186;
var G__25786 = f5187;
var G__25787 = g5188;
var G__25788 = h5189;
var G__25789 = i5190;
var G__25790 = j5191;
var G__25791 = k5192;
var G__25792 = l5193;
var G__25793 = m5194;
var G__25794 = n5195;
var G__25795 = o5196;
var G__25796 = p5197;
var G__25797 = q5198;
var G__25798 = r5199;
var G__25799 = s5200;
var G__25800 = t5201;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__25781,G__25782,G__25783,G__25784,G__25785,G__25786,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793,G__25794,G__25795,G__25796,G__25797,G__25798,G__25799,G__25800) : f.call(null,G__25781,G__25782,G__25783,G__25784,G__25785,G__25786,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793,G__25794,G__25795,G__25796,G__25797,G__25798,G__25799,G__25800));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__25801__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__25801 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__25802__i = 0, G__25802__a = new Array(arguments.length -  5);
while (G__25802__i < G__25802__a.length) {G__25802__a[G__25802__i] = arguments[G__25802__i + 5]; ++G__25802__i;}
  args = new cljs.core.IndexedSeq(G__25802__a,0);
} 
return G__25801__delegate.call(this,f,a,b,c,d,args);};
G__25801.cljs$lang$maxFixedArity = 5;
G__25801.cljs$lang$applyTo = (function (arglist__25803){
var f = cljs.core.first(arglist__25803);
arglist__25803 = cljs.core.next(arglist__25803);
var a = cljs.core.first(arglist__25803);
arglist__25803 = cljs.core.next(arglist__25803);
var b = cljs.core.first(arglist__25803);
arglist__25803 = cljs.core.next(arglist__25803);
var c = cljs.core.first(arglist__25803);
arglist__25803 = cljs.core.next(arglist__25803);
var d = cljs.core.first(arglist__25803);
var args = cljs.core.rest(arglist__25803);
return G__25801__delegate(f,a,b,c,d,args);
});
G__25801.cljs$core$IFn$_invoke$arity$variadic = G__25801__delegate;
return G__25801;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__25804 = null;
if (arguments.length > 5) {
var G__25805__i = 0, G__25805__a = new Array(arguments.length -  5);
while (G__25805__i < G__25805__a.length) {G__25805__a[G__25805__i] = arguments[G__25805__i + 5]; ++G__25805__i;}
G__25804 = new cljs.core.IndexedSeq(G__25805__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__25804);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__25821 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25821) : f.call(null,G__25821));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__25822 = cljs.core.meta(obj);
var G__25823 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25822,G__25823) : f.call(null,G__25822,G__25823));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__25824 = cljs.core.meta(obj);
var G__25825 = a;
var G__25826 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25824,G__25825,G__25826) : f.call(null,G__25824,G__25825,G__25826));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__25827 = cljs.core.meta(obj);
var G__25828 = a;
var G__25829 = b;
var G__25830 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25827,G__25828,G__25829,G__25830) : f.call(null,G__25827,G__25828,G__25829,G__25830));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__25831 = cljs.core.meta(obj);
var G__25832 = a;
var G__25833 = b;
var G__25834 = c;
var G__25835 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25831,G__25832,G__25833,G__25834,G__25835) : f.call(null,G__25831,G__25832,G__25833,G__25834,G__25835));
})());
});
var vary_meta__7 = (function() { 
var G__25836__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__25836 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__25837__i = 0, G__25837__a = new Array(arguments.length -  6);
while (G__25837__i < G__25837__a.length) {G__25837__a[G__25837__i] = arguments[G__25837__i + 6]; ++G__25837__i;}
  args = new cljs.core.IndexedSeq(G__25837__a,0);
} 
return G__25836__delegate.call(this,obj,f,a,b,c,d,args);};
G__25836.cljs$lang$maxFixedArity = 6;
G__25836.cljs$lang$applyTo = (function (arglist__25838){
var obj = cljs.core.first(arglist__25838);
arglist__25838 = cljs.core.next(arglist__25838);
var f = cljs.core.first(arglist__25838);
arglist__25838 = cljs.core.next(arglist__25838);
var a = cljs.core.first(arglist__25838);
arglist__25838 = cljs.core.next(arglist__25838);
var b = cljs.core.first(arglist__25838);
arglist__25838 = cljs.core.next(arglist__25838);
var c = cljs.core.first(arglist__25838);
arglist__25838 = cljs.core.next(arglist__25838);
var d = cljs.core.first(arglist__25838);
var args = cljs.core.rest(arglist__25838);
return G__25836__delegate(obj,f,a,b,c,d,args);
});
G__25836.cljs$core$IFn$_invoke$arity$variadic = G__25836__delegate;
return G__25836;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__25839 = null;
if (arguments.length > 6) {
var G__25840__i = 0, G__25840__a = new Array(arguments.length -  6);
while (G__25840__i < G__25840__a.length) {G__25840__a[G__25840__i] = arguments[G__25840__i + 6]; ++G__25840__i;}
G__25839 = new cljs.core.IndexedSeq(G__25840__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__25839);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__25841__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__25841 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25842__i = 0, G__25842__a = new Array(arguments.length -  2);
while (G__25842__i < G__25842__a.length) {G__25842__a[G__25842__i] = arguments[G__25842__i + 2]; ++G__25842__i;}
  more = new cljs.core.IndexedSeq(G__25842__a,0);
} 
return G__25841__delegate.call(this,x,y,more);};
G__25841.cljs$lang$maxFixedArity = 2;
G__25841.cljs$lang$applyTo = (function (arglist__25843){
var x = cljs.core.first(arglist__25843);
arglist__25843 = cljs.core.next(arglist__25843);
var y = cljs.core.first(arglist__25843);
var more = cljs.core.rest(arglist__25843);
return G__25841__delegate(x,y,more);
});
G__25841.cljs$core$IFn$_invoke$arity$variadic = G__25841__delegate;
return G__25841;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__25844 = null;
if (arguments.length > 2) {
var G__25845__i = 0, G__25845__a = new Array(arguments.length -  2);
while (G__25845__i < G__25845__a.length) {G__25845__a[G__25845__i] = arguments[G__25845__i + 2]; ++G__25845__i;}
G__25844 = new cljs.core.IndexedSeq(G__25845__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25844);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t25849 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t25849 = (function (nil_iter,meta25850){
this.nil_iter = nil_iter;
this.meta25850 = meta25850;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t25849.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t25849.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t25849.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t25849.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_25851){
var self__ = this;
var _25851__$1 = this;
return self__.meta25850;
});

cljs.core.t25849.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_25851,meta25850__$1){
var self__ = this;
var _25851__$1 = this;
return (new cljs.core.t25849(self__.nil_iter,meta25850__$1));
});

cljs.core.t25849.cljs$lang$type = true;

cljs.core.t25849.cljs$lang$ctorStr = "cljs.core/t25849";

cljs.core.t25849.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/t25849");
});

cljs.core.__GT_t25849 = (function __GT_t25849(nil_iter__$1,meta25850){
return (new cljs.core.t25849(nil_iter__$1,meta25850));
});

}

return (new cljs.core.t25849(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8,54,cljs.core.constant$keyword$9,3063,cljs.core.constant$keyword$10,3,cljs.core.constant$keyword$11,3059,cljs.core.constant$keyword$12,"/home/juho/Source/lomakkeet/example/target/cljsbuild-adv/public/js/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4239__auto__ = !((lt.stepper == null));
if(and__4239__auto__){
return self__.iter.hasNext();
} else {
return and__4239__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__25852 = lt;
var G__25853 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__25852,G__25853) : self__.xform.call(null,G__25852,G__25853));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25854 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25854) : self__.xform.call(null,G__25854));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__25856 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25856) : xform.call(null,G__25856));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__25858 = cljs.core.next(iters__$1);
iters__$1 = G__25858;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__5138__auto___25859 = self__.iters.length;
var i_25860 = (0);
while(true){
if((i_25860 < n__5138__auto___25859)){
(self__.nexts[i_25860] = (self__.iters[i_25860]).next());

var G__25861 = (i_25860 + (1));
i_25860 = G__25861;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4239__auto__ = !((lt.stepper == null));
if(and__4239__auto__){
return this$.hasNext();
} else {
return and__4239__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25857 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25857) : self__.xform.call(null,G__25857));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__25866 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25866) : xform.call(null,G__25866));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__25867_25871 = cljs.core.seq(colls);
var chunk__25868_25872 = null;
var count__25869_25873 = (0);
var i__25870_25874 = (0);
while(true){
if((i__25870_25874 < count__25869_25873)){
var coll_25875 = chunk__25868_25872.cljs$core$IIndexed$_nth$arity$2(null,i__25870_25874);
iters.push(cljs.core.iter(coll_25875));

var G__25876 = seq__25867_25871;
var G__25877 = chunk__25868_25872;
var G__25878 = count__25869_25873;
var G__25879 = (i__25870_25874 + (1));
seq__25867_25871 = G__25876;
chunk__25868_25872 = G__25877;
count__25869_25873 = G__25878;
i__25870_25874 = G__25879;
continue;
} else {
var temp__4126__auto___25880 = cljs.core.seq(seq__25867_25871);
if(temp__4126__auto___25880){
var seq__25867_25881__$1 = temp__4126__auto___25880;
if(cljs.core.chunked_seq_QMARK_(seq__25867_25881__$1)){
var c__5038__auto___25882 = cljs.core.chunk_first(seq__25867_25881__$1);
var G__25883 = cljs.core.chunk_rest(seq__25867_25881__$1);
var G__25884 = c__5038__auto___25882;
var G__25885 = cljs.core.count(c__5038__auto___25882);
var G__25886 = (0);
seq__25867_25871 = G__25883;
chunk__25868_25872 = G__25884;
count__25869_25873 = G__25885;
i__25870_25874 = G__25886;
continue;
} else {
var coll_25887 = cljs.core.first(seq__25867_25881__$1);
iters.push(cljs.core.iter(coll_25887));

var G__25888 = cljs.core.next(seq__25867_25881__$1);
var G__25889 = null;
var G__25890 = (0);
var G__25891 = (0);
seq__25867_25871 = G__25888;
chunk__25868_25872 = G__25889;
count__25869_25873 = G__25890;
i__25870_25874 = G__25891;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__4251__auto__ = cljs.core.seq(coll);
if(or__4251__auto__){
return or__4251__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__25892__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__25892 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__25893__i = 0, G__25893__a = new Array(arguments.length -  2);
while (G__25893__i < G__25893__a.length) {G__25893__a[G__25893__i] = arguments[G__25893__i + 2]; ++G__25893__i;}
  colls = new cljs.core.IndexedSeq(G__25893__a,0);
} 
return G__25892__delegate.call(this,xform,coll,colls);};
G__25892.cljs$lang$maxFixedArity = 2;
G__25892.cljs$lang$applyTo = (function (arglist__25894){
var xform = cljs.core.first(arglist__25894);
arglist__25894 = cljs.core.next(arglist__25894);
var coll = cljs.core.first(arglist__25894);
var colls = cljs.core.rest(arglist__25894);
return G__25892__delegate(xform,coll,colls);
});
G__25892.cljs$core$IFn$_invoke$arity$variadic = G__25892__delegate;
return G__25892;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__25895 = null;
if (arguments.length > 2) {
var G__25896__i = 0, G__25896__a = new Array(arguments.length -  2);
while (G__25896__i < G__25896__a.length) {G__25896__a[G__25896__i] = arguments[G__25896__i + 2]; ++G__25896__i;}
G__25895 = new cljs.core.IndexedSeq(G__25896__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__25895);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__25898 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25898) : pred.call(null,G__25898));
})())){
var G__25899 = pred;
var G__25900 = cljs.core.next(coll);
pred = G__25899;
coll = G__25900;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__4251__auto__ = (function (){var G__25904 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25904) : pred.call(null,G__25904));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var G__25905 = pred;
var G__25906 = cljs.core.next(coll);
pred = G__25905;
coll = G__25906;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__25913 = null;
var G__25913__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__25913__1 = (function (x){
return cljs.core.not((function (){var G__25910 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25910) : f.call(null,G__25910));
})());
});
var G__25913__2 = (function (x,y){
return cljs.core.not((function (){var G__25911 = x;
var G__25912 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25911,G__25912) : f.call(null,G__25911,G__25912));
})());
});
var G__25913__3 = (function() { 
var G__25914__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__25914 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25915__i = 0, G__25915__a = new Array(arguments.length -  2);
while (G__25915__i < G__25915__a.length) {G__25915__a[G__25915__i] = arguments[G__25915__i + 2]; ++G__25915__i;}
  zs = new cljs.core.IndexedSeq(G__25915__a,0);
} 
return G__25914__delegate.call(this,x,y,zs);};
G__25914.cljs$lang$maxFixedArity = 2;
G__25914.cljs$lang$applyTo = (function (arglist__25916){
var x = cljs.core.first(arglist__25916);
arglist__25916 = cljs.core.next(arglist__25916);
var y = cljs.core.first(arglist__25916);
var zs = cljs.core.rest(arglist__25916);
return G__25914__delegate(x,y,zs);
});
G__25914.cljs$core$IFn$_invoke$arity$variadic = G__25914__delegate;
return G__25914;
})()
;
G__25913 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__25913__0.call(this);
case 1:
return G__25913__1.call(this,x);
case 2:
return G__25913__2.call(this,x,y);
default:
var G__25917 = null;
if (arguments.length > 2) {
var G__25918__i = 0, G__25918__a = new Array(arguments.length -  2);
while (G__25918__i < G__25918__a.length) {G__25918__a[G__25918__i] = arguments[G__25918__i + 2]; ++G__25918__i;}
G__25917 = new cljs.core.IndexedSeq(G__25918__a,0);
}
return G__25913__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25913.cljs$lang$maxFixedArity = 2;
G__25913.cljs$lang$applyTo = G__25913__3.cljs$lang$applyTo;
G__25913.cljs$core$IFn$_invoke$arity$0 = G__25913__0;
G__25913.cljs$core$IFn$_invoke$arity$1 = G__25913__1;
G__25913.cljs$core$IFn$_invoke$arity$2 = G__25913__2;
G__25913.cljs$core$IFn$_invoke$arity$variadic = G__25913__3.cljs$core$IFn$_invoke$arity$variadic;
return G__25913;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__25919__delegate = function (args){
return x;
};
var G__25919 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25920__i = 0, G__25920__a = new Array(arguments.length -  0);
while (G__25920__i < G__25920__a.length) {G__25920__a[G__25920__i] = arguments[G__25920__i + 0]; ++G__25920__i;}
  args = new cljs.core.IndexedSeq(G__25920__a,0);
} 
return G__25919__delegate.call(this,args);};
G__25919.cljs$lang$maxFixedArity = 0;
G__25919.cljs$lang$applyTo = (function (arglist__25921){
var args = cljs.core.seq(arglist__25921);
return G__25919__delegate(args);
});
G__25919.cljs$core$IFn$_invoke$arity$variadic = G__25919__delegate;
return G__25919;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__25976 = null;
var G__25976__0 = (function (){
var G__25949 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25949) : f.call(null,G__25949));
});
var G__25976__1 = (function (x){
var G__25950 = (function (){var G__25951 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25951) : g.call(null,G__25951));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25950) : f.call(null,G__25950));
});
var G__25976__2 = (function (x,y){
var G__25952 = (function (){var G__25953 = x;
var G__25954 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25953,G__25954) : g.call(null,G__25953,G__25954));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25952) : f.call(null,G__25952));
});
var G__25976__3 = (function (x,y,z){
var G__25955 = (function (){var G__25956 = x;
var G__25957 = y;
var G__25958 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25956,G__25957,G__25958) : g.call(null,G__25956,G__25957,G__25958));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25955) : f.call(null,G__25955));
});
var G__25976__4 = (function() { 
var G__25977__delegate = function (x,y,z,args){
var G__25959 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25959) : f.call(null,G__25959));
};
var G__25977 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25978__i = 0, G__25978__a = new Array(arguments.length -  3);
while (G__25978__i < G__25978__a.length) {G__25978__a[G__25978__i] = arguments[G__25978__i + 3]; ++G__25978__i;}
  args = new cljs.core.IndexedSeq(G__25978__a,0);
} 
return G__25977__delegate.call(this,x,y,z,args);};
G__25977.cljs$lang$maxFixedArity = 3;
G__25977.cljs$lang$applyTo = (function (arglist__25979){
var x = cljs.core.first(arglist__25979);
arglist__25979 = cljs.core.next(arglist__25979);
var y = cljs.core.first(arglist__25979);
arglist__25979 = cljs.core.next(arglist__25979);
var z = cljs.core.first(arglist__25979);
var args = cljs.core.rest(arglist__25979);
return G__25977__delegate(x,y,z,args);
});
G__25977.cljs$core$IFn$_invoke$arity$variadic = G__25977__delegate;
return G__25977;
})()
;
G__25976 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25976__0.call(this);
case 1:
return G__25976__1.call(this,x);
case 2:
return G__25976__2.call(this,x,y);
case 3:
return G__25976__3.call(this,x,y,z);
default:
var G__25980 = null;
if (arguments.length > 3) {
var G__25981__i = 0, G__25981__a = new Array(arguments.length -  3);
while (G__25981__i < G__25981__a.length) {G__25981__a[G__25981__i] = arguments[G__25981__i + 3]; ++G__25981__i;}
G__25980 = new cljs.core.IndexedSeq(G__25981__a,0);
}
return G__25976__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25980);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25976.cljs$lang$maxFixedArity = 3;
G__25976.cljs$lang$applyTo = G__25976__4.cljs$lang$applyTo;
G__25976.cljs$core$IFn$_invoke$arity$0 = G__25976__0;
G__25976.cljs$core$IFn$_invoke$arity$1 = G__25976__1;
G__25976.cljs$core$IFn$_invoke$arity$2 = G__25976__2;
G__25976.cljs$core$IFn$_invoke$arity$3 = G__25976__3;
G__25976.cljs$core$IFn$_invoke$arity$variadic = G__25976__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25976;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__25982 = null;
var G__25982__0 = (function (){
var G__25960 = (function (){var G__25961 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25961) : g.call(null,G__25961));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25960) : f.call(null,G__25960));
});
var G__25982__1 = (function (x){
var G__25962 = (function (){var G__25963 = (function (){var G__25964 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25964) : h.call(null,G__25964));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25963) : g.call(null,G__25963));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25962) : f.call(null,G__25962));
});
var G__25982__2 = (function (x,y){
var G__25965 = (function (){var G__25966 = (function (){var G__25967 = x;
var G__25968 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25967,G__25968) : h.call(null,G__25967,G__25968));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25966) : g.call(null,G__25966));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25965) : f.call(null,G__25965));
});
var G__25982__3 = (function (x,y,z){
var G__25969 = (function (){var G__25970 = (function (){var G__25971 = x;
var G__25972 = y;
var G__25973 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25971,G__25972,G__25973) : h.call(null,G__25971,G__25972,G__25973));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25970) : g.call(null,G__25970));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25969) : f.call(null,G__25969));
});
var G__25982__4 = (function() { 
var G__25983__delegate = function (x,y,z,args){
var G__25974 = (function (){var G__25975 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25975) : g.call(null,G__25975));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25974) : f.call(null,G__25974));
};
var G__25983 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25984__i = 0, G__25984__a = new Array(arguments.length -  3);
while (G__25984__i < G__25984__a.length) {G__25984__a[G__25984__i] = arguments[G__25984__i + 3]; ++G__25984__i;}
  args = new cljs.core.IndexedSeq(G__25984__a,0);
} 
return G__25983__delegate.call(this,x,y,z,args);};
G__25983.cljs$lang$maxFixedArity = 3;
G__25983.cljs$lang$applyTo = (function (arglist__25985){
var x = cljs.core.first(arglist__25985);
arglist__25985 = cljs.core.next(arglist__25985);
var y = cljs.core.first(arglist__25985);
arglist__25985 = cljs.core.next(arglist__25985);
var z = cljs.core.first(arglist__25985);
var args = cljs.core.rest(arglist__25985);
return G__25983__delegate(x,y,z,args);
});
G__25983.cljs$core$IFn$_invoke$arity$variadic = G__25983__delegate;
return G__25983;
})()
;
G__25982 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25982__0.call(this);
case 1:
return G__25982__1.call(this,x);
case 2:
return G__25982__2.call(this,x,y);
case 3:
return G__25982__3.call(this,x,y,z);
default:
var G__25986 = null;
if (arguments.length > 3) {
var G__25987__i = 0, G__25987__a = new Array(arguments.length -  3);
while (G__25987__i < G__25987__a.length) {G__25987__a[G__25987__i] = arguments[G__25987__i + 3]; ++G__25987__i;}
G__25986 = new cljs.core.IndexedSeq(G__25987__a,0);
}
return G__25982__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25986);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25982.cljs$lang$maxFixedArity = 3;
G__25982.cljs$lang$applyTo = G__25982__4.cljs$lang$applyTo;
G__25982.cljs$core$IFn$_invoke$arity$0 = G__25982__0;
G__25982.cljs$core$IFn$_invoke$arity$1 = G__25982__1;
G__25982.cljs$core$IFn$_invoke$arity$2 = G__25982__2;
G__25982.cljs$core$IFn$_invoke$arity$3 = G__25982__3;
G__25982.cljs$core$IFn$_invoke$arity$variadic = G__25982__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25982;
})()
});
var comp__4 = (function() { 
var G__25988__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__25989__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__25990 = cljs.core.first(fs__$2).call(null,ret);
var G__25991 = cljs.core.next(fs__$2);
ret = G__25990;
fs__$2 = G__25991;
continue;
} else {
return ret;
}
break;
}
};
var G__25989 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25992__i = 0, G__25992__a = new Array(arguments.length -  0);
while (G__25992__i < G__25992__a.length) {G__25992__a[G__25992__i] = arguments[G__25992__i + 0]; ++G__25992__i;}
  args = new cljs.core.IndexedSeq(G__25992__a,0);
} 
return G__25989__delegate.call(this,args);};
G__25989.cljs$lang$maxFixedArity = 0;
G__25989.cljs$lang$applyTo = (function (arglist__25993){
var args = cljs.core.seq(arglist__25993);
return G__25989__delegate(args);
});
G__25989.cljs$core$IFn$_invoke$arity$variadic = G__25989__delegate;
return G__25989;
})()
;
;})(fs__$1))
};
var G__25988 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25994__i = 0, G__25994__a = new Array(arguments.length -  3);
while (G__25994__i < G__25994__a.length) {G__25994__a[G__25994__i] = arguments[G__25994__i + 3]; ++G__25994__i;}
  fs = new cljs.core.IndexedSeq(G__25994__a,0);
} 
return G__25988__delegate.call(this,f1,f2,f3,fs);};
G__25988.cljs$lang$maxFixedArity = 3;
G__25988.cljs$lang$applyTo = (function (arglist__25995){
var f1 = cljs.core.first(arglist__25995);
arglist__25995 = cljs.core.next(arglist__25995);
var f2 = cljs.core.first(arglist__25995);
arglist__25995 = cljs.core.next(arglist__25995);
var f3 = cljs.core.first(arglist__25995);
var fs = cljs.core.rest(arglist__25995);
return G__25988__delegate(f1,f2,f3,fs);
});
G__25988.cljs$core$IFn$_invoke$arity$variadic = G__25988__delegate;
return G__25988;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__25996 = null;
if (arguments.length > 3) {
var G__25997__i = 0, G__25997__a = new Array(arguments.length -  3);
while (G__25997__i < G__25997__a.length) {G__25997__a[G__25997__i] = arguments[G__25997__i + 3]; ++G__25997__i;}
G__25996 = new cljs.core.IndexedSeq(G__25997__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__25996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__26082 = null;
var G__26082__0 = (function (){
var G__26040 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26040) : f.call(null,G__26040));
});
var G__26082__1 = (function (x){
var G__26041 = arg1;
var G__26042 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26041,G__26042) : f.call(null,G__26041,G__26042));
});
var G__26082__2 = (function (x,y){
var G__26043 = arg1;
var G__26044 = x;
var G__26045 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26043,G__26044,G__26045) : f.call(null,G__26043,G__26044,G__26045));
});
var G__26082__3 = (function (x,y,z){
var G__26046 = arg1;
var G__26047 = x;
var G__26048 = y;
var G__26049 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26046,G__26047,G__26048,G__26049) : f.call(null,G__26046,G__26047,G__26048,G__26049));
});
var G__26082__4 = (function() { 
var G__26083__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__26083 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26084__i = 0, G__26084__a = new Array(arguments.length -  3);
while (G__26084__i < G__26084__a.length) {G__26084__a[G__26084__i] = arguments[G__26084__i + 3]; ++G__26084__i;}
  args = new cljs.core.IndexedSeq(G__26084__a,0);
} 
return G__26083__delegate.call(this,x,y,z,args);};
G__26083.cljs$lang$maxFixedArity = 3;
G__26083.cljs$lang$applyTo = (function (arglist__26085){
var x = cljs.core.first(arglist__26085);
arglist__26085 = cljs.core.next(arglist__26085);
var y = cljs.core.first(arglist__26085);
arglist__26085 = cljs.core.next(arglist__26085);
var z = cljs.core.first(arglist__26085);
var args = cljs.core.rest(arglist__26085);
return G__26083__delegate(x,y,z,args);
});
G__26083.cljs$core$IFn$_invoke$arity$variadic = G__26083__delegate;
return G__26083;
})()
;
G__26082 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26082__0.call(this);
case 1:
return G__26082__1.call(this,x);
case 2:
return G__26082__2.call(this,x,y);
case 3:
return G__26082__3.call(this,x,y,z);
default:
var G__26086 = null;
if (arguments.length > 3) {
var G__26087__i = 0, G__26087__a = new Array(arguments.length -  3);
while (G__26087__i < G__26087__a.length) {G__26087__a[G__26087__i] = arguments[G__26087__i + 3]; ++G__26087__i;}
G__26086 = new cljs.core.IndexedSeq(G__26087__a,0);
}
return G__26082__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26086);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26082.cljs$lang$maxFixedArity = 3;
G__26082.cljs$lang$applyTo = G__26082__4.cljs$lang$applyTo;
G__26082.cljs$core$IFn$_invoke$arity$0 = G__26082__0;
G__26082.cljs$core$IFn$_invoke$arity$1 = G__26082__1;
G__26082.cljs$core$IFn$_invoke$arity$2 = G__26082__2;
G__26082.cljs$core$IFn$_invoke$arity$3 = G__26082__3;
G__26082.cljs$core$IFn$_invoke$arity$variadic = G__26082__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26082;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__26088 = null;
var G__26088__0 = (function (){
var G__26050 = arg1;
var G__26051 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26050,G__26051) : f.call(null,G__26050,G__26051));
});
var G__26088__1 = (function (x){
var G__26052 = arg1;
var G__26053 = arg2;
var G__26054 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26052,G__26053,G__26054) : f.call(null,G__26052,G__26053,G__26054));
});
var G__26088__2 = (function (x,y){
var G__26055 = arg1;
var G__26056 = arg2;
var G__26057 = x;
var G__26058 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26055,G__26056,G__26057,G__26058) : f.call(null,G__26055,G__26056,G__26057,G__26058));
});
var G__26088__3 = (function (x,y,z){
var G__26059 = arg1;
var G__26060 = arg2;
var G__26061 = x;
var G__26062 = y;
var G__26063 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26059,G__26060,G__26061,G__26062,G__26063) : f.call(null,G__26059,G__26060,G__26061,G__26062,G__26063));
});
var G__26088__4 = (function() { 
var G__26089__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__26089 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26090__i = 0, G__26090__a = new Array(arguments.length -  3);
while (G__26090__i < G__26090__a.length) {G__26090__a[G__26090__i] = arguments[G__26090__i + 3]; ++G__26090__i;}
  args = new cljs.core.IndexedSeq(G__26090__a,0);
} 
return G__26089__delegate.call(this,x,y,z,args);};
G__26089.cljs$lang$maxFixedArity = 3;
G__26089.cljs$lang$applyTo = (function (arglist__26091){
var x = cljs.core.first(arglist__26091);
arglist__26091 = cljs.core.next(arglist__26091);
var y = cljs.core.first(arglist__26091);
arglist__26091 = cljs.core.next(arglist__26091);
var z = cljs.core.first(arglist__26091);
var args = cljs.core.rest(arglist__26091);
return G__26089__delegate(x,y,z,args);
});
G__26089.cljs$core$IFn$_invoke$arity$variadic = G__26089__delegate;
return G__26089;
})()
;
G__26088 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26088__0.call(this);
case 1:
return G__26088__1.call(this,x);
case 2:
return G__26088__2.call(this,x,y);
case 3:
return G__26088__3.call(this,x,y,z);
default:
var G__26092 = null;
if (arguments.length > 3) {
var G__26093__i = 0, G__26093__a = new Array(arguments.length -  3);
while (G__26093__i < G__26093__a.length) {G__26093__a[G__26093__i] = arguments[G__26093__i + 3]; ++G__26093__i;}
G__26092 = new cljs.core.IndexedSeq(G__26093__a,0);
}
return G__26088__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26088.cljs$lang$maxFixedArity = 3;
G__26088.cljs$lang$applyTo = G__26088__4.cljs$lang$applyTo;
G__26088.cljs$core$IFn$_invoke$arity$0 = G__26088__0;
G__26088.cljs$core$IFn$_invoke$arity$1 = G__26088__1;
G__26088.cljs$core$IFn$_invoke$arity$2 = G__26088__2;
G__26088.cljs$core$IFn$_invoke$arity$3 = G__26088__3;
G__26088.cljs$core$IFn$_invoke$arity$variadic = G__26088__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26088;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__26094 = null;
var G__26094__0 = (function (){
var G__26064 = arg1;
var G__26065 = arg2;
var G__26066 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26064,G__26065,G__26066) : f.call(null,G__26064,G__26065,G__26066));
});
var G__26094__1 = (function (x){
var G__26067 = arg1;
var G__26068 = arg2;
var G__26069 = arg3;
var G__26070 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26067,G__26068,G__26069,G__26070) : f.call(null,G__26067,G__26068,G__26069,G__26070));
});
var G__26094__2 = (function (x,y){
var G__26071 = arg1;
var G__26072 = arg2;
var G__26073 = arg3;
var G__26074 = x;
var G__26075 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26071,G__26072,G__26073,G__26074,G__26075) : f.call(null,G__26071,G__26072,G__26073,G__26074,G__26075));
});
var G__26094__3 = (function (x,y,z){
var G__26076 = arg1;
var G__26077 = arg2;
var G__26078 = arg3;
var G__26079 = x;
var G__26080 = y;
var G__26081 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__26076,G__26077,G__26078,G__26079,G__26080,G__26081) : f.call(null,G__26076,G__26077,G__26078,G__26079,G__26080,G__26081));
});
var G__26094__4 = (function() { 
var G__26095__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__26095 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26096__i = 0, G__26096__a = new Array(arguments.length -  3);
while (G__26096__i < G__26096__a.length) {G__26096__a[G__26096__i] = arguments[G__26096__i + 3]; ++G__26096__i;}
  args = new cljs.core.IndexedSeq(G__26096__a,0);
} 
return G__26095__delegate.call(this,x,y,z,args);};
G__26095.cljs$lang$maxFixedArity = 3;
G__26095.cljs$lang$applyTo = (function (arglist__26097){
var x = cljs.core.first(arglist__26097);
arglist__26097 = cljs.core.next(arglist__26097);
var y = cljs.core.first(arglist__26097);
arglist__26097 = cljs.core.next(arglist__26097);
var z = cljs.core.first(arglist__26097);
var args = cljs.core.rest(arglist__26097);
return G__26095__delegate(x,y,z,args);
});
G__26095.cljs$core$IFn$_invoke$arity$variadic = G__26095__delegate;
return G__26095;
})()
;
G__26094 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26094__0.call(this);
case 1:
return G__26094__1.call(this,x);
case 2:
return G__26094__2.call(this,x,y);
case 3:
return G__26094__3.call(this,x,y,z);
default:
var G__26098 = null;
if (arguments.length > 3) {
var G__26099__i = 0, G__26099__a = new Array(arguments.length -  3);
while (G__26099__i < G__26099__a.length) {G__26099__a[G__26099__i] = arguments[G__26099__i + 3]; ++G__26099__i;}
G__26098 = new cljs.core.IndexedSeq(G__26099__a,0);
}
return G__26094__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26098);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26094.cljs$lang$maxFixedArity = 3;
G__26094.cljs$lang$applyTo = G__26094__4.cljs$lang$applyTo;
G__26094.cljs$core$IFn$_invoke$arity$0 = G__26094__0;
G__26094.cljs$core$IFn$_invoke$arity$1 = G__26094__1;
G__26094.cljs$core$IFn$_invoke$arity$2 = G__26094__2;
G__26094.cljs$core$IFn$_invoke$arity$3 = G__26094__3;
G__26094.cljs$core$IFn$_invoke$arity$variadic = G__26094__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26094;
})()
});
var partial__5 = (function() { 
var G__26100__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__26101__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__26101 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26102__i = 0, G__26102__a = new Array(arguments.length -  0);
while (G__26102__i < G__26102__a.length) {G__26102__a[G__26102__i] = arguments[G__26102__i + 0]; ++G__26102__i;}
  args = new cljs.core.IndexedSeq(G__26102__a,0);
} 
return G__26101__delegate.call(this,args);};
G__26101.cljs$lang$maxFixedArity = 0;
G__26101.cljs$lang$applyTo = (function (arglist__26103){
var args = cljs.core.seq(arglist__26103);
return G__26101__delegate(args);
});
G__26101.cljs$core$IFn$_invoke$arity$variadic = G__26101__delegate;
return G__26101;
})()
;
};
var G__26100 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__26104__i = 0, G__26104__a = new Array(arguments.length -  4);
while (G__26104__i < G__26104__a.length) {G__26104__a[G__26104__i] = arguments[G__26104__i + 4]; ++G__26104__i;}
  more = new cljs.core.IndexedSeq(G__26104__a,0);
} 
return G__26100__delegate.call(this,f,arg1,arg2,arg3,more);};
G__26100.cljs$lang$maxFixedArity = 4;
G__26100.cljs$lang$applyTo = (function (arglist__26105){
var f = cljs.core.first(arglist__26105);
arglist__26105 = cljs.core.next(arglist__26105);
var arg1 = cljs.core.first(arglist__26105);
arglist__26105 = cljs.core.next(arglist__26105);
var arg2 = cljs.core.first(arglist__26105);
arglist__26105 = cljs.core.next(arglist__26105);
var arg3 = cljs.core.first(arglist__26105);
var more = cljs.core.rest(arglist__26105);
return G__26100__delegate(f,arg1,arg2,arg3,more);
});
G__26100.cljs$core$IFn$_invoke$arity$variadic = G__26100__delegate;
return G__26100;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__26106 = null;
if (arguments.length > 4) {
var G__26107__i = 0, G__26107__a = new Array(arguments.length -  4);
while (G__26107__i < G__26107__a.length) {G__26107__a[G__26107__i] = arguments[G__26107__i + 4]; ++G__26107__i;}
G__26106 = new cljs.core.IndexedSeq(G__26107__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__26106);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__26140 = null;
var G__26140__1 = (function (a){
var G__26124 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26124) : f.call(null,G__26124));
});
var G__26140__2 = (function (a,b){
var G__26125 = (((a == null))?x:a);
var G__26126 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26125,G__26126) : f.call(null,G__26125,G__26126));
});
var G__26140__3 = (function (a,b,c){
var G__26127 = (((a == null))?x:a);
var G__26128 = b;
var G__26129 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26127,G__26128,G__26129) : f.call(null,G__26127,G__26128,G__26129));
});
var G__26140__4 = (function() { 
var G__26141__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__26141 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26142__i = 0, G__26142__a = new Array(arguments.length -  3);
while (G__26142__i < G__26142__a.length) {G__26142__a[G__26142__i] = arguments[G__26142__i + 3]; ++G__26142__i;}
  ds = new cljs.core.IndexedSeq(G__26142__a,0);
} 
return G__26141__delegate.call(this,a,b,c,ds);};
G__26141.cljs$lang$maxFixedArity = 3;
G__26141.cljs$lang$applyTo = (function (arglist__26143){
var a = cljs.core.first(arglist__26143);
arglist__26143 = cljs.core.next(arglist__26143);
var b = cljs.core.first(arglist__26143);
arglist__26143 = cljs.core.next(arglist__26143);
var c = cljs.core.first(arglist__26143);
var ds = cljs.core.rest(arglist__26143);
return G__26141__delegate(a,b,c,ds);
});
G__26141.cljs$core$IFn$_invoke$arity$variadic = G__26141__delegate;
return G__26141;
})()
;
G__26140 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__26140__1.call(this,a);
case 2:
return G__26140__2.call(this,a,b);
case 3:
return G__26140__3.call(this,a,b,c);
default:
var G__26144 = null;
if (arguments.length > 3) {
var G__26145__i = 0, G__26145__a = new Array(arguments.length -  3);
while (G__26145__i < G__26145__a.length) {G__26145__a[G__26145__i] = arguments[G__26145__i + 3]; ++G__26145__i;}
G__26144 = new cljs.core.IndexedSeq(G__26145__a,0);
}
return G__26140__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26144);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26140.cljs$lang$maxFixedArity = 3;
G__26140.cljs$lang$applyTo = G__26140__4.cljs$lang$applyTo;
G__26140.cljs$core$IFn$_invoke$arity$1 = G__26140__1;
G__26140.cljs$core$IFn$_invoke$arity$2 = G__26140__2;
G__26140.cljs$core$IFn$_invoke$arity$3 = G__26140__3;
G__26140.cljs$core$IFn$_invoke$arity$variadic = G__26140__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26140;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__26146 = null;
var G__26146__2 = (function (a,b){
var G__26130 = (((a == null))?x:a);
var G__26131 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26130,G__26131) : f.call(null,G__26130,G__26131));
});
var G__26146__3 = (function (a,b,c){
var G__26132 = (((a == null))?x:a);
var G__26133 = (((b == null))?y:b);
var G__26134 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26132,G__26133,G__26134) : f.call(null,G__26132,G__26133,G__26134));
});
var G__26146__4 = (function() { 
var G__26147__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__26147 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26148__i = 0, G__26148__a = new Array(arguments.length -  3);
while (G__26148__i < G__26148__a.length) {G__26148__a[G__26148__i] = arguments[G__26148__i + 3]; ++G__26148__i;}
  ds = new cljs.core.IndexedSeq(G__26148__a,0);
} 
return G__26147__delegate.call(this,a,b,c,ds);};
G__26147.cljs$lang$maxFixedArity = 3;
G__26147.cljs$lang$applyTo = (function (arglist__26149){
var a = cljs.core.first(arglist__26149);
arglist__26149 = cljs.core.next(arglist__26149);
var b = cljs.core.first(arglist__26149);
arglist__26149 = cljs.core.next(arglist__26149);
var c = cljs.core.first(arglist__26149);
var ds = cljs.core.rest(arglist__26149);
return G__26147__delegate(a,b,c,ds);
});
G__26147.cljs$core$IFn$_invoke$arity$variadic = G__26147__delegate;
return G__26147;
})()
;
G__26146 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__26146__2.call(this,a,b);
case 3:
return G__26146__3.call(this,a,b,c);
default:
var G__26150 = null;
if (arguments.length > 3) {
var G__26151__i = 0, G__26151__a = new Array(arguments.length -  3);
while (G__26151__i < G__26151__a.length) {G__26151__a[G__26151__i] = arguments[G__26151__i + 3]; ++G__26151__i;}
G__26150 = new cljs.core.IndexedSeq(G__26151__a,0);
}
return G__26146__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26150);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26146.cljs$lang$maxFixedArity = 3;
G__26146.cljs$lang$applyTo = G__26146__4.cljs$lang$applyTo;
G__26146.cljs$core$IFn$_invoke$arity$2 = G__26146__2;
G__26146.cljs$core$IFn$_invoke$arity$3 = G__26146__3;
G__26146.cljs$core$IFn$_invoke$arity$variadic = G__26146__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26146;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__26152 = null;
var G__26152__2 = (function (a,b){
var G__26135 = (((a == null))?x:a);
var G__26136 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26135,G__26136) : f.call(null,G__26135,G__26136));
});
var G__26152__3 = (function (a,b,c){
var G__26137 = (((a == null))?x:a);
var G__26138 = (((b == null))?y:b);
var G__26139 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26137,G__26138,G__26139) : f.call(null,G__26137,G__26138,G__26139));
});
var G__26152__4 = (function() { 
var G__26153__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__26153 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26154__i = 0, G__26154__a = new Array(arguments.length -  3);
while (G__26154__i < G__26154__a.length) {G__26154__a[G__26154__i] = arguments[G__26154__i + 3]; ++G__26154__i;}
  ds = new cljs.core.IndexedSeq(G__26154__a,0);
} 
return G__26153__delegate.call(this,a,b,c,ds);};
G__26153.cljs$lang$maxFixedArity = 3;
G__26153.cljs$lang$applyTo = (function (arglist__26155){
var a = cljs.core.first(arglist__26155);
arglist__26155 = cljs.core.next(arglist__26155);
var b = cljs.core.first(arglist__26155);
arglist__26155 = cljs.core.next(arglist__26155);
var c = cljs.core.first(arglist__26155);
var ds = cljs.core.rest(arglist__26155);
return G__26153__delegate(a,b,c,ds);
});
G__26153.cljs$core$IFn$_invoke$arity$variadic = G__26153__delegate;
return G__26153;
})()
;
G__26152 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__26152__2.call(this,a,b);
case 3:
return G__26152__3.call(this,a,b,c);
default:
var G__26156 = null;
if (arguments.length > 3) {
var G__26157__i = 0, G__26157__a = new Array(arguments.length -  3);
while (G__26157__i < G__26157__a.length) {G__26157__a[G__26157__i] = arguments[G__26157__i + 3]; ++G__26157__i;}
G__26156 = new cljs.core.IndexedSeq(G__26157__a,0);
}
return G__26152__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26156);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26152.cljs$lang$maxFixedArity = 3;
G__26152.cljs$lang$applyTo = G__26152__4.cljs$lang$applyTo;
G__26152.cljs$core$IFn$_invoke$arity$2 = G__26152__2;
G__26152.cljs$core$IFn$_invoke$arity$3 = G__26152__3;
G__26152.cljs$core$IFn$_invoke$arity$variadic = G__26152__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26152;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__26188 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__26188) : cljs.core.volatile_BANG_.call(null,G__26188));
})();
return ((function (i){
return (function() {
var G__26218 = null;
var G__26218__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26218__1 = (function (result){
var G__26189 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26189) : rf.call(null,G__26189));
});
var G__26218__2 = (function (result,input){
var G__26190 = result;
var G__26191 = (function (){var G__26192 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__26193 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26192,G__26193) : f.call(null,G__26192,G__26193));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26190,G__26191) : rf.call(null,G__26190,G__26191));
});
G__26218 = function(result,input){
switch(arguments.length){
case 0:
return G__26218__0.call(this);
case 1:
return G__26218__1.call(this,result);
case 2:
return G__26218__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26218.cljs$core$IFn$_invoke$arity$0 = G__26218__0;
G__26218.cljs$core$IFn$_invoke$arity$1 = G__26218__1;
G__26218.cljs$core$IFn$_invoke$arity$2 = G__26218__2;
return G__26218;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5138__auto___26219 = size;
var i_26220 = (0);
while(true){
if((i_26220 < n__5138__auto___26219)){
cljs.core.chunk_append(b,(function (){var G__26214 = (idx + i_26220);
var G__26215 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26220);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26214,G__26215) : f.call(null,G__26214,G__26215));
})());

var G__26221 = (i_26220 + (1));
i_26220 = G__26221;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26216 = idx;
var G__26217 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26216,G__26217) : f.call(null,G__26216,G__26217));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__26240 = null;
var G__26240__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26240__1 = (function (result){
var G__26234 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26234) : rf.call(null,G__26234));
});
var G__26240__2 = (function (result,input){
var v = (function (){var G__26235 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26235) : f.call(null,G__26235));
})();
if((v == null)){
return result;
} else {
var G__26236 = result;
var G__26237 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26236,G__26237) : rf.call(null,G__26236,G__26237));
}
});
G__26240 = function(result,input){
switch(arguments.length){
case 0:
return G__26240__0.call(this);
case 1:
return G__26240__1.call(this,result);
case 2:
return G__26240__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26240.cljs$core$IFn$_invoke$arity$0 = G__26240__0;
G__26240.cljs$core$IFn$_invoke$arity$1 = G__26240__1;
G__26240.cljs$core$IFn$_invoke$arity$2 = G__26240__2;
return G__26240;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5138__auto___26241 = size;
var i_26242 = (0);
while(true){
if((i_26242 < n__5138__auto___26241)){
var x_26243 = (function (){var G__26238 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26242);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26238) : f.call(null,G__26238));
})();
if((x_26243 == null)){
} else {
cljs.core.chunk_append(b,x_26243);
}

var G__26244 = (i_26242 + (1));
i_26242 = G__26244;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__26239 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26239) : f.call(null,G__26239));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26245 = this$__$1;
return goog.getUid(G__26245);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__26246 = cljs.core.seq(self__.watches);
var chunk__26247 = null;
var count__26248 = (0);
var i__26249 = (0);
while(true){
if((i__26249 < count__26248)){
var vec__26250 = chunk__26247.cljs$core$IIndexed$_nth$arity$2(null,i__26249);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26250,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26250,(1),null);
var G__26251_26260 = key;
var G__26252_26261 = this$__$1;
var G__26253_26262 = oldval;
var G__26254_26263 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26251_26260,G__26252_26261,G__26253_26262,G__26254_26263) : f.call(null,G__26251_26260,G__26252_26261,G__26253_26262,G__26254_26263));

var G__26264 = seq__26246;
var G__26265 = chunk__26247;
var G__26266 = count__26248;
var G__26267 = (i__26249 + (1));
seq__26246 = G__26264;
chunk__26247 = G__26265;
count__26248 = G__26266;
i__26249 = G__26267;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26246);
if(temp__4126__auto__){
var seq__26246__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26246__$1)){
var c__5038__auto__ = cljs.core.chunk_first(seq__26246__$1);
var G__26268 = cljs.core.chunk_rest(seq__26246__$1);
var G__26269 = c__5038__auto__;
var G__26270 = cljs.core.count(c__5038__auto__);
var G__26271 = (0);
seq__26246 = G__26268;
chunk__26247 = G__26269;
count__26248 = G__26270;
i__26249 = G__26271;
continue;
} else {
var vec__26255 = cljs.core.first(seq__26246__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26255,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26255,(1),null);
var G__26256_26272 = key;
var G__26257_26273 = this$__$1;
var G__26258_26274 = oldval;
var G__26259_26275 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26256_26272,G__26257_26273,G__26258_26274,G__26259_26275) : f.call(null,G__26256_26272,G__26257_26273,G__26258_26274,G__26259_26275));

var G__26276 = cljs.core.next(seq__26246__$1);
var G__26277 = null;
var G__26278 = (0);
var G__26279 = (0);
seq__26246 = G__26276;
chunk__26247 = G__26277;
count__26248 = G__26278;
i__26249 = G__26279;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__26283__delegate = function (x,p__26280){
var map__26282 = p__26280;
var map__26282__$1 = ((cljs.core.seq_QMARK_(map__26282))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__26282):map__26282);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26282__$1,cljs.core.constant$keyword$13);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26282__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__26283 = function (x,var_args){
var p__26280 = null;
if (arguments.length > 1) {
var G__26284__i = 0, G__26284__a = new Array(arguments.length -  1);
while (G__26284__i < G__26284__a.length) {G__26284__a[G__26284__i] = arguments[G__26284__i + 1]; ++G__26284__i;}
  p__26280 = new cljs.core.IndexedSeq(G__26284__a,0);
} 
return G__26283__delegate.call(this,x,p__26280);};
G__26283.cljs$lang$maxFixedArity = 1;
G__26283.cljs$lang$applyTo = (function (arglist__26285){
var x = cljs.core.first(arglist__26285);
var p__26280 = cljs.core.rest(arglist__26285);
return G__26283__delegate(x,p__26280);
});
G__26283.cljs$core$IFn$_invoke$arity$variadic = G__26283__delegate;
return G__26283;
})()
;
atom = function(x,var_args){
var p__26280 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__26286 = null;
if (arguments.length > 1) {
var G__26287__i = 0, G__26287__a = new Array(arguments.length -  1);
while (G__26287__i < G__26287__a.length) {G__26287__a[G__26287__i] = arguments[G__26287__i + 1]; ++G__26287__i;}
G__26286 = new cljs.core.IndexedSeq(G__26287__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__26286);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__26290 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__26290) : validate.call(null,G__26290));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__26291 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__26291) : cljs.core.pr_str.call(null,G__26291));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26298 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26298) : f.call(null,G__26298));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26299 = a.state;
var G__26300 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26299,G__26300) : f.call(null,G__26299,G__26300));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26301 = a.state;
var G__26302 = x;
var G__26303 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26301,G__26302,G__26303) : f.call(null,G__26301,G__26302,G__26303));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__26304__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__26304 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__26305__i = 0, G__26305__a = new Array(arguments.length -  4);
while (G__26305__i < G__26305__a.length) {G__26305__a[G__26305__i] = arguments[G__26305__i + 4]; ++G__26305__i;}
  more = new cljs.core.IndexedSeq(G__26305__a,0);
} 
return G__26304__delegate.call(this,a,f,x,y,more);};
G__26304.cljs$lang$maxFixedArity = 4;
G__26304.cljs$lang$applyTo = (function (arglist__26306){
var a = cljs.core.first(arglist__26306);
arglist__26306 = cljs.core.next(arglist__26306);
var f = cljs.core.first(arglist__26306);
arglist__26306 = cljs.core.next(arglist__26306);
var x = cljs.core.first(arglist__26306);
arglist__26306 = cljs.core.next(arglist__26306);
var y = cljs.core.first(arglist__26306);
var more = cljs.core.rest(arglist__26306);
return G__26304__delegate(a,f,x,y,more);
});
G__26304.cljs$core$IFn$_invoke$arity$variadic = G__26304__delegate;
return G__26304;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__26307 = null;
if (arguments.length > 4) {
var G__26308__i = 0, G__26308__a = new Array(arguments.length -  4);
while (G__26308__i < G__26308__a.length) {G__26308__a[G__26308__i] = arguments[G__26308__i + 4]; ++G__26308__i;}
G__26307 = new cljs.core.IndexedSeq(G__26308__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__26307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__26375 = null;
var G__26375__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26375__1 = (function (result){
var G__26342 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26342) : rf.call(null,G__26342));
});
var G__26375__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__26343 = i;
var G__26344 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26343,G__26344) : f.call(null,G__26343,G__26344));
})();
if((v == null)){
return result;
} else {
var G__26345 = result;
var G__26346 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26345,G__26346) : rf.call(null,G__26345,G__26346));
}
});
G__26375 = function(result,input){
switch(arguments.length){
case 0:
return G__26375__0.call(this);
case 1:
return G__26375__1.call(this,result);
case 2:
return G__26375__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26375.cljs$core$IFn$_invoke$arity$0 = G__26375__0;
G__26375.cljs$core$IFn$_invoke$arity$1 = G__26375__1;
G__26375.cljs$core$IFn$_invoke$arity$2 = G__26375__2;
return G__26375;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5138__auto___26376 = size;
var i_26377 = (0);
while(true){
if((i_26377 < n__5138__auto___26376)){
var x_26378 = (function (){var G__26371 = (idx + i_26377);
var G__26372 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26377);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26371,G__26372) : f.call(null,G__26371,G__26372));
})();
if((x_26378 == null)){
} else {
cljs.core.chunk_append(b,x_26378);
}

var G__26379 = (i_26377 + (1));
i_26377 = G__26379;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__26373 = idx;
var G__26374 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26373,G__26374) : f.call(null,G__26373,G__26374));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__26593 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26593) : p.call(null,G__26593));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4239__auto__ = (function (){var G__26595 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26595) : p.call(null,G__26595));
})();
if(cljs.core.truth_(and__4239__auto__)){
var G__26596 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26596) : p.call(null,G__26596));
} else {
return and__4239__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4239__auto__ = (function (){var G__26598 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26598) : p.call(null,G__26598));
})();
if(cljs.core.truth_(and__4239__auto__)){
var and__4239__auto____$1 = (function (){var G__26600 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26600) : p.call(null,G__26600));
})();
if(cljs.core.truth_(and__4239__auto____$1)){
var G__26601 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26601) : p.call(null,G__26601));
} else {
return and__4239__auto____$1;
}
} else {
return and__4239__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__26770__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__26770 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26771__i = 0, G__26771__a = new Array(arguments.length -  3);
while (G__26771__i < G__26771__a.length) {G__26771__a[G__26771__i] = arguments[G__26771__i + 3]; ++G__26771__i;}
  args = new cljs.core.IndexedSeq(G__26771__a,0);
} 
return G__26770__delegate.call(this,x,y,z,args);};
G__26770.cljs$lang$maxFixedArity = 3;
G__26770.cljs$lang$applyTo = (function (arglist__26772){
var x = cljs.core.first(arglist__26772);
arglist__26772 = cljs.core.next(arglist__26772);
var y = cljs.core.first(arglist__26772);
arglist__26772 = cljs.core.next(arglist__26772);
var z = cljs.core.first(arglist__26772);
var args = cljs.core.rest(arglist__26772);
return G__26770__delegate(x,y,z,args);
});
G__26770.cljs$core$IFn$_invoke$arity$variadic = G__26770__delegate;
return G__26770;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__26773 = null;
if (arguments.length > 3) {
var G__26774__i = 0, G__26774__a = new Array(arguments.length -  3);
while (G__26774__i < G__26774__a.length) {G__26774__a[G__26774__i] = arguments[G__26774__i + 3]; ++G__26774__i;}
G__26773 = new cljs.core.IndexedSeq(G__26774__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__4239__auto__ = (function (){var G__26633 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26633) : p1.call(null,G__26633));
})();
if(cljs.core.truth_(and__4239__auto__)){
var G__26634 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26634) : p2.call(null,G__26634));
} else {
return and__4239__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4239__auto__ = (function (){var G__26636 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26636) : p1.call(null,G__26636));
})();
if(cljs.core.truth_(and__4239__auto__)){
var and__4239__auto____$1 = (function (){var G__26638 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26638) : p1.call(null,G__26638));
})();
if(cljs.core.truth_(and__4239__auto____$1)){
var and__4239__auto____$2 = (function (){var G__26640 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26640) : p2.call(null,G__26640));
})();
if(cljs.core.truth_(and__4239__auto____$2)){
var G__26641 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26641) : p2.call(null,G__26641));
} else {
return and__4239__auto____$2;
}
} else {
return and__4239__auto____$1;
}
} else {
return and__4239__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4239__auto__ = (function (){var G__26643 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26643) : p1.call(null,G__26643));
})();
if(cljs.core.truth_(and__4239__auto__)){
var and__4239__auto____$1 = (function (){var G__26645 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26645) : p1.call(null,G__26645));
})();
if(cljs.core.truth_(and__4239__auto____$1)){
var and__4239__auto____$2 = (function (){var G__26647 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26647) : p1.call(null,G__26647));
})();
if(cljs.core.truth_(and__4239__auto____$2)){
var and__4239__auto____$3 = (function (){var G__26649 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26649) : p2.call(null,G__26649));
})();
if(cljs.core.truth_(and__4239__auto____$3)){
var and__4239__auto____$4 = (function (){var G__26651 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26651) : p2.call(null,G__26651));
})();
if(cljs.core.truth_(and__4239__auto____$4)){
var G__26652 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26652) : p2.call(null,G__26652));
} else {
return and__4239__auto____$4;
}
} else {
return and__4239__auto____$3;
}
} else {
return and__4239__auto____$2;
}
} else {
return and__4239__auto____$1;
}
} else {
return and__4239__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__26775__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__26380_SHARP_){
var and__4239__auto__ = (function (){var G__26657 = p1__26380_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26657) : p1.call(null,G__26657));
})();
if(cljs.core.truth_(and__4239__auto__)){
var G__26658 = p1__26380_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26658) : p2.call(null,G__26658));
} else {
return and__4239__auto__;
}
}),args)));
};
var G__26775 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26776__i = 0, G__26776__a = new Array(arguments.length -  3);
while (G__26776__i < G__26776__a.length) {G__26776__a[G__26776__i] = arguments[G__26776__i + 3]; ++G__26776__i;}
  args = new cljs.core.IndexedSeq(G__26776__a,0);
} 
return G__26775__delegate.call(this,x,y,z,args);};
G__26775.cljs$lang$maxFixedArity = 3;
G__26775.cljs$lang$applyTo = (function (arglist__26777){
var x = cljs.core.first(arglist__26777);
arglist__26777 = cljs.core.next(arglist__26777);
var y = cljs.core.first(arglist__26777);
arglist__26777 = cljs.core.next(arglist__26777);
var z = cljs.core.first(arglist__26777);
var args = cljs.core.rest(arglist__26777);
return G__26775__delegate(x,y,z,args);
});
G__26775.cljs$core$IFn$_invoke$arity$variadic = G__26775__delegate;
return G__26775;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__26778 = null;
if (arguments.length > 3) {
var G__26779__i = 0, G__26779__a = new Array(arguments.length -  3);
while (G__26779__i < G__26779__a.length) {G__26779__a[G__26779__i] = arguments[G__26779__i + 3]; ++G__26779__i;}
G__26778 = new cljs.core.IndexedSeq(G__26779__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__4239__auto__ = (function (){var G__26704 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26704) : p1.call(null,G__26704));
})();
if(cljs.core.truth_(and__4239__auto__)){
var and__4239__auto____$1 = (function (){var G__26706 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26706) : p2.call(null,G__26706));
})();
if(cljs.core.truth_(and__4239__auto____$1)){
var G__26707 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26707) : p3.call(null,G__26707));
} else {
return and__4239__auto____$1;
}
} else {
return and__4239__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4239__auto__ = (function (){var G__26709 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26709) : p1.call(null,G__26709));
})();
if(cljs.core.truth_(and__4239__auto__)){
var and__4239__auto____$1 = (function (){var G__26711 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26711) : p2.call(null,G__26711));
})();
if(cljs.core.truth_(and__4239__auto____$1)){
var and__4239__auto____$2 = (function (){var G__26713 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26713) : p3.call(null,G__26713));
})();
if(cljs.core.truth_(and__4239__auto____$2)){
var and__4239__auto____$3 = (function (){var G__26715 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26715) : p1.call(null,G__26715));
})();
if(cljs.core.truth_(and__4239__auto____$3)){
var and__4239__auto____$4 = (function (){var G__26717 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26717) : p2.call(null,G__26717));
})();
if(cljs.core.truth_(and__4239__auto____$4)){
var G__26718 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26718) : p3.call(null,G__26718));
} else {
return and__4239__auto____$4;
}
} else {
return and__4239__auto____$3;
}
} else {
return and__4239__auto____$2;
}
} else {
return and__4239__auto____$1;
}
} else {
return and__4239__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4239__auto__ = (function (){var G__26720 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26720) : p1.call(null,G__26720));
})();
if(cljs.core.truth_(and__4239__auto__)){
var and__4239__auto____$1 = (function (){var G__26722 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26722) : p2.call(null,G__26722));
})();
if(cljs.core.truth_(and__4239__auto____$1)){
var and__4239__auto____$2 = (function (){var G__26724 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26724) : p3.call(null,G__26724));
})();
if(cljs.core.truth_(and__4239__auto____$2)){
var and__4239__auto____$3 = (function (){var G__26726 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26726) : p1.call(null,G__26726));
})();
if(cljs.core.truth_(and__4239__auto____$3)){
var and__4239__auto____$4 = (function (){var G__26728 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26728) : p2.call(null,G__26728));
})();
if(cljs.core.truth_(and__4239__auto____$4)){
var and__4239__auto____$5 = (function (){var G__26730 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26730) : p3.call(null,G__26730));
})();
if(cljs.core.truth_(and__4239__auto____$5)){
var and__4239__auto____$6 = (function (){var G__26732 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26732) : p1.call(null,G__26732));
})();
if(cljs.core.truth_(and__4239__auto____$6)){
var and__4239__auto____$7 = (function (){var G__26734 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26734) : p2.call(null,G__26734));
})();
if(cljs.core.truth_(and__4239__auto____$7)){
var G__26735 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26735) : p3.call(null,G__26735));
} else {
return and__4239__auto____$7;
}
} else {
return and__4239__auto____$6;
}
} else {
return and__4239__auto____$5;
}
} else {
return and__4239__auto____$4;
}
} else {
return and__4239__auto____$3;
}
} else {
return and__4239__auto____$2;
}
} else {
return and__4239__auto____$1;
}
} else {
return and__4239__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__26780__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__26381_SHARP_){
var and__4239__auto__ = (function (){var G__26742 = p1__26381_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26742) : p1.call(null,G__26742));
})();
if(cljs.core.truth_(and__4239__auto__)){
var and__4239__auto____$1 = (function (){var G__26744 = p1__26381_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26744) : p2.call(null,G__26744));
})();
if(cljs.core.truth_(and__4239__auto____$1)){
var G__26745 = p1__26381_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26745) : p3.call(null,G__26745));
} else {
return and__4239__auto____$1;
}
} else {
return and__4239__auto__;
}
}),args)));
};
var G__26780 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26781__i = 0, G__26781__a = new Array(arguments.length -  3);
while (G__26781__i < G__26781__a.length) {G__26781__a[G__26781__i] = arguments[G__26781__i + 3]; ++G__26781__i;}
  args = new cljs.core.IndexedSeq(G__26781__a,0);
} 
return G__26780__delegate.call(this,x,y,z,args);};
G__26780.cljs$lang$maxFixedArity = 3;
G__26780.cljs$lang$applyTo = (function (arglist__26782){
var x = cljs.core.first(arglist__26782);
arglist__26782 = cljs.core.next(arglist__26782);
var y = cljs.core.first(arglist__26782);
arglist__26782 = cljs.core.next(arglist__26782);
var z = cljs.core.first(arglist__26782);
var args = cljs.core.rest(arglist__26782);
return G__26780__delegate(x,y,z,args);
});
G__26780.cljs$core$IFn$_invoke$arity$variadic = G__26780__delegate;
return G__26780;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__26783 = null;
if (arguments.length > 3) {
var G__26784__i = 0, G__26784__a = new Array(arguments.length -  3);
while (G__26784__i < G__26784__a.length) {G__26784__a[G__26784__i] = arguments[G__26784__i + 3]; ++G__26784__i;}
G__26783 = new cljs.core.IndexedSeq(G__26784__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26783);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__26785__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26382_SHARP_){
var G__26761 = x;
return (p1__26382_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26382_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26761) : p1__26382_SHARP_.call(null,G__26761));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26383_SHARP_){
var and__4239__auto__ = (function (){var G__26763 = x;
return (p1__26383_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26383_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26763) : p1__26383_SHARP_.call(null,G__26763));
})();
if(cljs.core.truth_(and__4239__auto__)){
var G__26764 = y;
return (p1__26383_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26383_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26764) : p1__26383_SHARP_.call(null,G__26764));
} else {
return and__4239__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26384_SHARP_){
var and__4239__auto__ = (function (){var G__26766 = x;
return (p1__26384_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26384_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26766) : p1__26384_SHARP_.call(null,G__26766));
})();
if(cljs.core.truth_(and__4239__auto__)){
var and__4239__auto____$1 = (function (){var G__26768 = y;
return (p1__26384_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26384_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26768) : p1__26384_SHARP_.call(null,G__26768));
})();
if(cljs.core.truth_(and__4239__auto____$1)){
var G__26769 = z;
return (p1__26384_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26384_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26769) : p1__26384_SHARP_.call(null,G__26769));
} else {
return and__4239__auto____$1;
}
} else {
return and__4239__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__26786__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26385_SHARP_){
return cljs.core.every_QMARK_(p1__26385_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__26786 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26787__i = 0, G__26787__a = new Array(arguments.length -  3);
while (G__26787__i < G__26787__a.length) {G__26787__a[G__26787__i] = arguments[G__26787__i + 3]; ++G__26787__i;}
  args = new cljs.core.IndexedSeq(G__26787__a,0);
} 
return G__26786__delegate.call(this,x,y,z,args);};
G__26786.cljs$lang$maxFixedArity = 3;
G__26786.cljs$lang$applyTo = (function (arglist__26788){
var x = cljs.core.first(arglist__26788);
arglist__26788 = cljs.core.next(arglist__26788);
var y = cljs.core.first(arglist__26788);
arglist__26788 = cljs.core.next(arglist__26788);
var z = cljs.core.first(arglist__26788);
var args = cljs.core.rest(arglist__26788);
return G__26786__delegate(x,y,z,args);
});
G__26786.cljs$core$IFn$_invoke$arity$variadic = G__26786__delegate;
return G__26786;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__26789 = null;
if (arguments.length > 3) {
var G__26790__i = 0, G__26790__a = new Array(arguments.length -  3);
while (G__26790__i < G__26790__a.length) {G__26790__a[G__26790__i] = arguments[G__26790__i + 3]; ++G__26790__i;}
G__26789 = new cljs.core.IndexedSeq(G__26790__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26789);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__26785 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26791__i = 0, G__26791__a = new Array(arguments.length -  3);
while (G__26791__i < G__26791__a.length) {G__26791__a[G__26791__i] = arguments[G__26791__i + 3]; ++G__26791__i;}
  ps = new cljs.core.IndexedSeq(G__26791__a,0);
} 
return G__26785__delegate.call(this,p1,p2,p3,ps);};
G__26785.cljs$lang$maxFixedArity = 3;
G__26785.cljs$lang$applyTo = (function (arglist__26792){
var p1 = cljs.core.first(arglist__26792);
arglist__26792 = cljs.core.next(arglist__26792);
var p2 = cljs.core.first(arglist__26792);
arglist__26792 = cljs.core.next(arglist__26792);
var p3 = cljs.core.first(arglist__26792);
var ps = cljs.core.rest(arglist__26792);
return G__26785__delegate(p1,p2,p3,ps);
});
G__26785.cljs$core$IFn$_invoke$arity$variadic = G__26785__delegate;
return G__26785;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__26793 = null;
if (arguments.length > 3) {
var G__26794__i = 0, G__26794__a = new Array(arguments.length -  3);
while (G__26794__i < G__26794__a.length) {G__26794__a[G__26794__i] = arguments[G__26794__i + 3]; ++G__26794__i;}
G__26793 = new cljs.core.IndexedSeq(G__26794__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26793);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__27000 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27000) : p.call(null,G__27000));
});
var sp1__2 = (function (x,y){
var or__4251__auto__ = (function (){var G__27002 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27002) : p.call(null,G__27002));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var G__27003 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27003) : p.call(null,G__27003));
}
});
var sp1__3 = (function (x,y,z){
var or__4251__auto__ = (function (){var G__27005 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27005) : p.call(null,G__27005));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (function (){var G__27007 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27007) : p.call(null,G__27007));
})();
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
var G__27008 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27008) : p.call(null,G__27008));
}
}
});
var sp1__4 = (function() { 
var G__27169__delegate = function (x,y,z,args){
var or__4251__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__27169 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27170__i = 0, G__27170__a = new Array(arguments.length -  3);
while (G__27170__i < G__27170__a.length) {G__27170__a[G__27170__i] = arguments[G__27170__i + 3]; ++G__27170__i;}
  args = new cljs.core.IndexedSeq(G__27170__a,0);
} 
return G__27169__delegate.call(this,x,y,z,args);};
G__27169.cljs$lang$maxFixedArity = 3;
G__27169.cljs$lang$applyTo = (function (arglist__27171){
var x = cljs.core.first(arglist__27171);
arglist__27171 = cljs.core.next(arglist__27171);
var y = cljs.core.first(arglist__27171);
arglist__27171 = cljs.core.next(arglist__27171);
var z = cljs.core.first(arglist__27171);
var args = cljs.core.rest(arglist__27171);
return G__27169__delegate(x,y,z,args);
});
G__27169.cljs$core$IFn$_invoke$arity$variadic = G__27169__delegate;
return G__27169;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__27172 = null;
if (arguments.length > 3) {
var G__27173__i = 0, G__27173__a = new Array(arguments.length -  3);
while (G__27173__i < G__27173__a.length) {G__27173__a[G__27173__i] = arguments[G__27173__i + 3]; ++G__27173__i;}
G__27172 = new cljs.core.IndexedSeq(G__27173__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27172);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__4251__auto__ = (function (){var G__27040 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27040) : p1.call(null,G__27040));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var G__27041 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27041) : p2.call(null,G__27041));
}
});
var sp2__2 = (function (x,y){
var or__4251__auto__ = (function (){var G__27043 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27043) : p1.call(null,G__27043));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (function (){var G__27045 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27045) : p1.call(null,G__27045));
})();
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
var or__4251__auto____$2 = (function (){var G__27047 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27047) : p2.call(null,G__27047));
})();
if(cljs.core.truth_(or__4251__auto____$2)){
return or__4251__auto____$2;
} else {
var G__27048 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27048) : p2.call(null,G__27048));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__4251__auto__ = (function (){var G__27050 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27050) : p1.call(null,G__27050));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (function (){var G__27052 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27052) : p1.call(null,G__27052));
})();
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
var or__4251__auto____$2 = (function (){var G__27054 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27054) : p1.call(null,G__27054));
})();
if(cljs.core.truth_(or__4251__auto____$2)){
return or__4251__auto____$2;
} else {
var or__4251__auto____$3 = (function (){var G__27056 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27056) : p2.call(null,G__27056));
})();
if(cljs.core.truth_(or__4251__auto____$3)){
return or__4251__auto____$3;
} else {
var or__4251__auto____$4 = (function (){var G__27058 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27058) : p2.call(null,G__27058));
})();
if(cljs.core.truth_(or__4251__auto____$4)){
return or__4251__auto____$4;
} else {
var G__27059 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27059) : p2.call(null,G__27059));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__27174__delegate = function (x,y,z,args){
var or__4251__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return cljs.core.some(((function (or__4251__auto__){
return (function (p1__26795_SHARP_){
var or__4251__auto____$1 = (function (){var G__27061 = p1__26795_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27061) : p1.call(null,G__27061));
})();
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
var G__27062 = p1__26795_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27062) : p2.call(null,G__27062));
}
});})(or__4251__auto__))
,args);
}
};
var G__27174 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27175__i = 0, G__27175__a = new Array(arguments.length -  3);
while (G__27175__i < G__27175__a.length) {G__27175__a[G__27175__i] = arguments[G__27175__i + 3]; ++G__27175__i;}
  args = new cljs.core.IndexedSeq(G__27175__a,0);
} 
return G__27174__delegate.call(this,x,y,z,args);};
G__27174.cljs$lang$maxFixedArity = 3;
G__27174.cljs$lang$applyTo = (function (arglist__27176){
var x = cljs.core.first(arglist__27176);
arglist__27176 = cljs.core.next(arglist__27176);
var y = cljs.core.first(arglist__27176);
arglist__27176 = cljs.core.next(arglist__27176);
var z = cljs.core.first(arglist__27176);
var args = cljs.core.rest(arglist__27176);
return G__27174__delegate(x,y,z,args);
});
G__27174.cljs$core$IFn$_invoke$arity$variadic = G__27174__delegate;
return G__27174;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__27177 = null;
if (arguments.length > 3) {
var G__27178__i = 0, G__27178__a = new Array(arguments.length -  3);
while (G__27178__i < G__27178__a.length) {G__27178__a[G__27178__i] = arguments[G__27178__i + 3]; ++G__27178__i;}
G__27177 = new cljs.core.IndexedSeq(G__27178__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27177);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__4251__auto__ = (function (){var G__27108 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27108) : p1.call(null,G__27108));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (function (){var G__27110 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27110) : p2.call(null,G__27110));
})();
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
var G__27111 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27111) : p3.call(null,G__27111));
}
}
});
var sp3__2 = (function (x,y){
var or__4251__auto__ = (function (){var G__27113 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27113) : p1.call(null,G__27113));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (function (){var G__27115 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27115) : p2.call(null,G__27115));
})();
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
var or__4251__auto____$2 = (function (){var G__27117 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27117) : p3.call(null,G__27117));
})();
if(cljs.core.truth_(or__4251__auto____$2)){
return or__4251__auto____$2;
} else {
var or__4251__auto____$3 = (function (){var G__27119 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27119) : p1.call(null,G__27119));
})();
if(cljs.core.truth_(or__4251__auto____$3)){
return or__4251__auto____$3;
} else {
var or__4251__auto____$4 = (function (){var G__27121 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27121) : p2.call(null,G__27121));
})();
if(cljs.core.truth_(or__4251__auto____$4)){
return or__4251__auto____$4;
} else {
var G__27122 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27122) : p3.call(null,G__27122));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__4251__auto__ = (function (){var G__27124 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27124) : p1.call(null,G__27124));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (function (){var G__27126 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27126) : p2.call(null,G__27126));
})();
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
var or__4251__auto____$2 = (function (){var G__27128 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27128) : p3.call(null,G__27128));
})();
if(cljs.core.truth_(or__4251__auto____$2)){
return or__4251__auto____$2;
} else {
var or__4251__auto____$3 = (function (){var G__27130 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27130) : p1.call(null,G__27130));
})();
if(cljs.core.truth_(or__4251__auto____$3)){
return or__4251__auto____$3;
} else {
var or__4251__auto____$4 = (function (){var G__27132 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27132) : p2.call(null,G__27132));
})();
if(cljs.core.truth_(or__4251__auto____$4)){
return or__4251__auto____$4;
} else {
var or__4251__auto____$5 = (function (){var G__27134 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27134) : p3.call(null,G__27134));
})();
if(cljs.core.truth_(or__4251__auto____$5)){
return or__4251__auto____$5;
} else {
var or__4251__auto____$6 = (function (){var G__27136 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27136) : p1.call(null,G__27136));
})();
if(cljs.core.truth_(or__4251__auto____$6)){
return or__4251__auto____$6;
} else {
var or__4251__auto____$7 = (function (){var G__27138 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27138) : p2.call(null,G__27138));
})();
if(cljs.core.truth_(or__4251__auto____$7)){
return or__4251__auto____$7;
} else {
var G__27139 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27139) : p3.call(null,G__27139));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__27179__delegate = function (x,y,z,args){
var or__4251__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return cljs.core.some(((function (or__4251__auto__){
return (function (p1__26796_SHARP_){
var or__4251__auto____$1 = (function (){var G__27141 = p1__26796_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27141) : p1.call(null,G__27141));
})();
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
var or__4251__auto____$2 = (function (){var G__27143 = p1__26796_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27143) : p2.call(null,G__27143));
})();
if(cljs.core.truth_(or__4251__auto____$2)){
return or__4251__auto____$2;
} else {
var G__27144 = p1__26796_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27144) : p3.call(null,G__27144));
}
}
});})(or__4251__auto__))
,args);
}
};
var G__27179 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27180__i = 0, G__27180__a = new Array(arguments.length -  3);
while (G__27180__i < G__27180__a.length) {G__27180__a[G__27180__i] = arguments[G__27180__i + 3]; ++G__27180__i;}
  args = new cljs.core.IndexedSeq(G__27180__a,0);
} 
return G__27179__delegate.call(this,x,y,z,args);};
G__27179.cljs$lang$maxFixedArity = 3;
G__27179.cljs$lang$applyTo = (function (arglist__27181){
var x = cljs.core.first(arglist__27181);
arglist__27181 = cljs.core.next(arglist__27181);
var y = cljs.core.first(arglist__27181);
arglist__27181 = cljs.core.next(arglist__27181);
var z = cljs.core.first(arglist__27181);
var args = cljs.core.rest(arglist__27181);
return G__27179__delegate(x,y,z,args);
});
G__27179.cljs$core$IFn$_invoke$arity$variadic = G__27179__delegate;
return G__27179;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__27182 = null;
if (arguments.length > 3) {
var G__27183__i = 0, G__27183__a = new Array(arguments.length -  3);
while (G__27183__i < G__27183__a.length) {G__27183__a[G__27183__i] = arguments[G__27183__i + 3]; ++G__27183__i;}
G__27182 = new cljs.core.IndexedSeq(G__27183__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27182);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__27184__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__26797_SHARP_){
var G__27160 = x;
return (p1__26797_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26797_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27160) : p1__26797_SHARP_.call(null,G__27160));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__26798_SHARP_){
var or__4251__auto__ = (function (){var G__27162 = x;
return (p1__26798_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26798_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27162) : p1__26798_SHARP_.call(null,G__27162));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var G__27163 = y;
return (p1__26798_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26798_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27163) : p1__26798_SHARP_.call(null,G__27163));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__26799_SHARP_){
var or__4251__auto__ = (function (){var G__27165 = x;
return (p1__26799_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26799_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27165) : p1__26799_SHARP_.call(null,G__27165));
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (function (){var G__27167 = y;
return (p1__26799_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26799_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27167) : p1__26799_SHARP_.call(null,G__27167));
})();
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
var G__27168 = z;
return (p1__26799_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26799_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27168) : p1__26799_SHARP_.call(null,G__27168));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__27185__delegate = function (x,y,z,args){
var or__4251__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return cljs.core.some(((function (or__4251__auto__,ps__$1){
return (function (p1__26800_SHARP_){
return cljs.core.some(p1__26800_SHARP_,args);
});})(or__4251__auto__,ps__$1))
,ps__$1);
}
};
var G__27185 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27186__i = 0, G__27186__a = new Array(arguments.length -  3);
while (G__27186__i < G__27186__a.length) {G__27186__a[G__27186__i] = arguments[G__27186__i + 3]; ++G__27186__i;}
  args = new cljs.core.IndexedSeq(G__27186__a,0);
} 
return G__27185__delegate.call(this,x,y,z,args);};
G__27185.cljs$lang$maxFixedArity = 3;
G__27185.cljs$lang$applyTo = (function (arglist__27187){
var x = cljs.core.first(arglist__27187);
arglist__27187 = cljs.core.next(arglist__27187);
var y = cljs.core.first(arglist__27187);
arglist__27187 = cljs.core.next(arglist__27187);
var z = cljs.core.first(arglist__27187);
var args = cljs.core.rest(arglist__27187);
return G__27185__delegate(x,y,z,args);
});
G__27185.cljs$core$IFn$_invoke$arity$variadic = G__27185__delegate;
return G__27185;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__27188 = null;
if (arguments.length > 3) {
var G__27189__i = 0, G__27189__a = new Array(arguments.length -  3);
while (G__27189__i < G__27189__a.length) {G__27189__a[G__27189__i] = arguments[G__27189__i + 3]; ++G__27189__i;}
G__27188 = new cljs.core.IndexedSeq(G__27189__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__27184 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__27190__i = 0, G__27190__a = new Array(arguments.length -  3);
while (G__27190__i < G__27190__a.length) {G__27190__a[G__27190__i] = arguments[G__27190__i + 3]; ++G__27190__i;}
  ps = new cljs.core.IndexedSeq(G__27190__a,0);
} 
return G__27184__delegate.call(this,p1,p2,p3,ps);};
G__27184.cljs$lang$maxFixedArity = 3;
G__27184.cljs$lang$applyTo = (function (arglist__27191){
var p1 = cljs.core.first(arglist__27191);
arglist__27191 = cljs.core.next(arglist__27191);
var p2 = cljs.core.first(arglist__27191);
arglist__27191 = cljs.core.next(arglist__27191);
var p3 = cljs.core.first(arglist__27191);
var ps = cljs.core.rest(arglist__27191);
return G__27184__delegate(p1,p2,p3,ps);
});
G__27184.cljs$core$IFn$_invoke$arity$variadic = G__27184__delegate;
return G__27184;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__27192 = null;
if (arguments.length > 3) {
var G__27193__i = 0, G__27193__a = new Array(arguments.length -  3);
while (G__27193__i < G__27193__a.length) {G__27193__a[G__27193__i] = arguments[G__27193__i + 3]; ++G__27193__i;}
G__27192 = new cljs.core.IndexedSeq(G__27193__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__27192);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__27248 = null;
var G__27248__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27248__1 = (function (result){
var G__27234 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27234) : rf.call(null,G__27234));
});
var G__27248__2 = (function (result,input){
var G__27235 = result;
var G__27236 = (function (){var G__27237 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27237) : f.call(null,G__27237));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27235,G__27236) : rf.call(null,G__27235,G__27236));
});
var G__27248__3 = (function() { 
var G__27249__delegate = function (result,input,inputs){
var G__27238 = result;
var G__27239 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27238,G__27239) : rf.call(null,G__27238,G__27239));
};
var G__27249 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__27250__i = 0, G__27250__a = new Array(arguments.length -  2);
while (G__27250__i < G__27250__a.length) {G__27250__a[G__27250__i] = arguments[G__27250__i + 2]; ++G__27250__i;}
  inputs = new cljs.core.IndexedSeq(G__27250__a,0);
} 
return G__27249__delegate.call(this,result,input,inputs);};
G__27249.cljs$lang$maxFixedArity = 2;
G__27249.cljs$lang$applyTo = (function (arglist__27251){
var result = cljs.core.first(arglist__27251);
arglist__27251 = cljs.core.next(arglist__27251);
var input = cljs.core.first(arglist__27251);
var inputs = cljs.core.rest(arglist__27251);
return G__27249__delegate(result,input,inputs);
});
G__27249.cljs$core$IFn$_invoke$arity$variadic = G__27249__delegate;
return G__27249;
})()
;
G__27248 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__27248__0.call(this);
case 1:
return G__27248__1.call(this,result);
case 2:
return G__27248__2.call(this,result,input);
default:
var G__27252 = null;
if (arguments.length > 2) {
var G__27253__i = 0, G__27253__a = new Array(arguments.length -  2);
while (G__27253__i < G__27253__a.length) {G__27253__a[G__27253__i] = arguments[G__27253__i + 2]; ++G__27253__i;}
G__27252 = new cljs.core.IndexedSeq(G__27253__a,0);
}
return G__27248__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__27252);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27248.cljs$lang$maxFixedArity = 2;
G__27248.cljs$lang$applyTo = G__27248__3.cljs$lang$applyTo;
G__27248.cljs$core$IFn$_invoke$arity$0 = G__27248__0;
G__27248.cljs$core$IFn$_invoke$arity$1 = G__27248__1;
G__27248.cljs$core$IFn$_invoke$arity$2 = G__27248__2;
G__27248.cljs$core$IFn$_invoke$arity$variadic = G__27248__3.cljs$core$IFn$_invoke$arity$variadic;
return G__27248;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5138__auto___27254 = size;
var i_27255 = (0);
while(true){
if((i_27255 < n__5138__auto___27254)){
cljs.core.chunk_append(b,(function (){var G__27240 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27255);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27240) : f.call(null,G__27240));
})());

var G__27256 = (i_27255 + (1));
i_27255 = G__27256;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__27241 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27241) : f.call(null,G__27241));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__27242 = cljs.core.first(s1);
var G__27243 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27242,G__27243) : f.call(null,G__27242,G__27243));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__27244 = cljs.core.first(s1);
var G__27245 = cljs.core.first(s2);
var G__27246 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27244,G__27245,G__27246) : f.call(null,G__27244,G__27245,G__27246));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__27257__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__27194_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__27194_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__27257 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__27258__i = 0, G__27258__a = new Array(arguments.length -  4);
while (G__27258__i < G__27258__a.length) {G__27258__a[G__27258__i] = arguments[G__27258__i + 4]; ++G__27258__i;}
  colls = new cljs.core.IndexedSeq(G__27258__a,0);
} 
return G__27257__delegate.call(this,f,c1,c2,c3,colls);};
G__27257.cljs$lang$maxFixedArity = 4;
G__27257.cljs$lang$applyTo = (function (arglist__27259){
var f = cljs.core.first(arglist__27259);
arglist__27259 = cljs.core.next(arglist__27259);
var c1 = cljs.core.first(arglist__27259);
arglist__27259 = cljs.core.next(arglist__27259);
var c2 = cljs.core.first(arglist__27259);
arglist__27259 = cljs.core.next(arglist__27259);
var c3 = cljs.core.first(arglist__27259);
var colls = cljs.core.rest(arglist__27259);
return G__27257__delegate(f,c1,c2,c3,colls);
});
G__27257.cljs$core$IFn$_invoke$arity$variadic = G__27257__delegate;
return G__27257;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__27260 = null;
if (arguments.length > 4) {
var G__27261__i = 0, G__27261__a = new Array(arguments.length -  4);
while (G__27261__i < G__27261__a.length) {G__27261__a[G__27261__i] = arguments[G__27261__i + 4]; ++G__27261__i;}
G__27260 = new cljs.core.IndexedSeq(G__27261__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__27260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__27270 = null;
var G__27270__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27270__1 = (function (result){
var G__27267 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27267) : rf.call(null,G__27267));
});
var G__27270__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__27268 = result;
var G__27269 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27268,G__27269) : rf.call(null,G__27268,G__27269));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__27270 = function(result,input){
switch(arguments.length){
case 0:
return G__27270__0.call(this);
case 1:
return G__27270__1.call(this,result);
case 2:
return G__27270__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27270.cljs$core$IFn$_invoke$arity$0 = G__27270__0;
G__27270.cljs$core$IFn$_invoke$arity$1 = G__27270__1;
G__27270.cljs$core$IFn$_invoke$arity$2 = G__27270__2;
return G__27270;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__27277 = null;
var G__27277__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27277__1 = (function (result){
var G__27274 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27274) : rf.call(null,G__27274));
});
var G__27277__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__27275 = result;
var G__27276 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27275,G__27276) : rf.call(null,G__27275,G__27276));
}
});
G__27277 = function(result,input){
switch(arguments.length){
case 0:
return G__27277__0.call(this);
case 1:
return G__27277__1.call(this,result);
case 2:
return G__27277__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27277.cljs$core$IFn$_invoke$arity$0 = G__27277__0;
G__27277.cljs$core$IFn$_invoke$arity$1 = G__27277__1;
G__27277.cljs$core$IFn$_invoke$arity$2 = G__27277__2;
return G__27277;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__27278 = (n__$1 - (1));
var G__27279 = cljs.core.rest(s);
n__$1 = G__27278;
coll__$1 = G__27279;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__27282 = cljs.core.next(s);
var G__27283 = cljs.core.next(lead);
s = G__27282;
lead = G__27283;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__27296 = null;
var G__27296__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27296__1 = (function (result){
var G__27290 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27290) : rf.call(null,G__27290));
});
var G__27296__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__4239__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__4239__auto__)){
var G__27291 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27291) : pred.call(null,G__27291));
} else {
return and__4239__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__27292 = result;
var G__27293 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27292,G__27293) : rf.call(null,G__27292,G__27293));
}
});
G__27296 = function(result,input){
switch(arguments.length){
case 0:
return G__27296__0.call(this);
case 1:
return G__27296__1.call(this,result);
case 2:
return G__27296__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27296.cljs$core$IFn$_invoke$arity$0 = G__27296__0;
G__27296.cljs$core$IFn$_invoke$arity$1 = G__27296__1;
G__27296.cljs$core$IFn$_invoke$arity$2 = G__27296__2;
return G__27296;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__4239__auto__ = s;
if(and__4239__auto__){
var G__27295 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__27295) : pred__$1.call(null,G__27295));
} else {
return and__4239__auto__;
}
})())){
var G__27297 = pred__$1;
var G__27298 = cljs.core.rest(s);
pred__$1 = G__27297;
coll__$1 = G__27298;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__27307 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27307) : f.call(null,G__27307));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__27310__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__27310 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__27311__i = 0, G__27311__a = new Array(arguments.length -  2);
while (G__27311__i < G__27311__a.length) {G__27311__a[G__27311__i] = arguments[G__27311__i + 2]; ++G__27311__i;}
  colls = new cljs.core.IndexedSeq(G__27311__a,0);
} 
return G__27310__delegate.call(this,c1,c2,colls);};
G__27310.cljs$lang$maxFixedArity = 2;
G__27310.cljs$lang$applyTo = (function (arglist__27312){
var c1 = cljs.core.first(arglist__27312);
arglist__27312 = cljs.core.next(arglist__27312);
var c2 = cljs.core.first(arglist__27312);
var colls = cljs.core.rest(arglist__27312);
return G__27310__delegate(c1,c2,colls);
});
G__27310.cljs$core$IFn$_invoke$arity$variadic = G__27310__delegate;
return G__27310;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__27313 = null;
if (arguments.length > 2) {
var G__27314__i = 0, G__27314__a = new Array(arguments.length -  2);
while (G__27314__i < G__27314__a.length) {G__27314__a[G__27314__i] = arguments[G__27314__i + 2]; ++G__27314__i;}
G__27313 = new cljs.core.IndexedSeq(G__27314__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__27313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__27329 = null;
var G__27329__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27329__1 = (function (result){
var G__27322 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27322) : rf.call(null,G__27322));
});
var G__27329__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__27323 = result;
var G__27324 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27323,G__27324) : rf.call(null,G__27323,G__27324));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__27325 = sepr;
var G__27326 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27325,G__27326) : rf.call(null,G__27325,G__27326));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__27327 = result;
var G__27328 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27327,G__27328) : rf.call(null,G__27327,G__27328));
}
});
G__27329 = function(result,input){
switch(arguments.length){
case 0:
return G__27329__0.call(this);
case 1:
return G__27329__1.call(this,result);
case 2:
return G__27329__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27329.cljs$core$IFn$_invoke$arity$0 = G__27329__0;
G__27329.cljs$core$IFn$_invoke$arity$1 = G__27329__1;
G__27329.cljs$core$IFn$_invoke$arity$2 = G__27329__2;
return G__27329;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__27338__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__27338 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__27339__i = 0, G__27339__a = new Array(arguments.length -  1);
while (G__27339__i < G__27339__a.length) {G__27339__a[G__27339__i] = arguments[G__27339__i + 1]; ++G__27339__i;}
  colls = new cljs.core.IndexedSeq(G__27339__a,0);
} 
return G__27338__delegate.call(this,f,colls);};
G__27338.cljs$lang$maxFixedArity = 1;
G__27338.cljs$lang$applyTo = (function (arglist__27340){
var f = cljs.core.first(arglist__27340);
var colls = cljs.core.rest(arglist__27340);
return G__27338__delegate(f,colls);
});
G__27338.cljs$core$IFn$_invoke$arity$variadic = G__27338__delegate;
return G__27338;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__27341 = null;
if (arguments.length > 1) {
var G__27342__i = 0, G__27342__a = new Array(arguments.length -  1);
while (G__27342__i < G__27342__a.length) {G__27342__a[G__27342__i] = arguments[G__27342__i + 1]; ++G__27342__i;}
G__27341 = new cljs.core.IndexedSeq(G__27342__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__27341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__27361 = null;
var G__27361__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27361__1 = (function (result){
var G__27355 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27355) : rf.call(null,G__27355));
});
var G__27361__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27356 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27356) : pred.call(null,G__27356));
})())){
var G__27357 = result;
var G__27358 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27357,G__27358) : rf.call(null,G__27357,G__27358));
} else {
return result;
}
});
G__27361 = function(result,input){
switch(arguments.length){
case 0:
return G__27361__0.call(this);
case 1:
return G__27361__1.call(this,result);
case 2:
return G__27361__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27361.cljs$core$IFn$_invoke$arity$0 = G__27361__0;
G__27361.cljs$core$IFn$_invoke$arity$1 = G__27361__1;
G__27361.cljs$core$IFn$_invoke$arity$2 = G__27361__2;
return G__27361;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5138__auto___27362 = size;
var i_27363 = (0);
while(true){
if((i_27363 < n__5138__auto___27362)){
if(cljs.core.truth_((function (){var G__27359 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27363);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27359) : pred.call(null,G__27359));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27363));
} else {
}

var G__27364 = (i_27363 + (1));
i_27363 = G__27364;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__27360 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27360) : pred.call(null,G__27360));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__27371 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__27371) : branch_QMARK_.call(null,G__27371));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__27372 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__27372) : children.call(null,G__27372));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__27373_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__27373_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__27376 = to;
if(G__27376){
var bit__4925__auto__ = (G__27376.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4925__auto__) || (G__27376.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__27377 = to;
if(G__27377){
var bit__4925__auto__ = (G__27377.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4925__auto__) || (G__27377.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__27379 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27379) : f.call(null,G__27379));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__27380__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__27380 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__27381__i = 0, G__27381__a = new Array(arguments.length -  4);
while (G__27381__i < G__27381__a.length) {G__27381__a[G__27381__i] = arguments[G__27381__i + 4]; ++G__27381__i;}
  colls = new cljs.core.IndexedSeq(G__27381__a,0);
} 
return G__27380__delegate.call(this,f,c1,c2,c3,colls);};
G__27380.cljs$lang$maxFixedArity = 4;
G__27380.cljs$lang$applyTo = (function (arglist__27382){
var f = cljs.core.first(arglist__27382);
arglist__27382 = cljs.core.next(arglist__27382);
var c1 = cljs.core.first(arglist__27382);
arglist__27382 = cljs.core.next(arglist__27382);
var c2 = cljs.core.first(arglist__27382);
arglist__27382 = cljs.core.next(arglist__27382);
var c3 = cljs.core.first(arglist__27382);
var colls = cljs.core.rest(arglist__27382);
return G__27380__delegate(f,c1,c2,c3,colls);
});
G__27380.cljs$core$IFn$_invoke$arity$variadic = G__27380__delegate;
return G__27380;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__27383 = null;
if (arguments.length > 4) {
var G__27384__i = 0, G__27384__a = new Array(arguments.length -  4);
while (G__27384__i < G__27384__a.length) {G__27384__a[G__27384__i] = arguments[G__27384__i + 4]; ++G__27384__i;}
G__27383 = new cljs.core.IndexedSeq(G__27384__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__27383);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__27386 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27386) : pred.call(null,G__27386));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__27401 = m__$1;
if(G__27401){
var bit__4932__auto__ = (G__27401.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4932__auto__) || (G__27401.cljs$core$ILookup$)){
return true;
} else {
if((!G__27401.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__27401);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__27401);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__27402 = sentinel;
var G__27403 = m__$2;
var G__27404 = cljs.core.next(ks__$1);
sentinel = G__27402;
m__$1 = G__27403;
ks__$1 = G__27404;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__27405,v){
var vec__27410 = p__27405;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27410,(0),null);
var ks = cljs.core.nthnext(vec__27410,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__27411,f){
var vec__27449 = p__27411;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27449,(0),null);
var ks = cljs.core.nthnext(vec__27449,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27450 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27450) : f.call(null,G__27450));
})());
}
});
var update_in__4 = (function (m,p__27412,f,a){
var vec__27451 = p__27412;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27451,(0),null);
var ks = cljs.core.nthnext(vec__27451,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27452 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27453 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27452,G__27453) : f.call(null,G__27452,G__27453));
})());
}
});
var update_in__5 = (function (m,p__27413,f,a,b){
var vec__27454 = p__27413;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27454,(0),null);
var ks = cljs.core.nthnext(vec__27454,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27455 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27456 = a;
var G__27457 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27455,G__27456,G__27457) : f.call(null,G__27455,G__27456,G__27457));
})());
}
});
var update_in__6 = (function (m,p__27414,f,a,b,c){
var vec__27458 = p__27414;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27458,(0),null);
var ks = cljs.core.nthnext(vec__27458,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27459 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27460 = a;
var G__27461 = b;
var G__27462 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27459,G__27460,G__27461,G__27462) : f.call(null,G__27459,G__27460,G__27461,G__27462));
})());
}
});
var update_in__7 = (function() { 
var G__27464__delegate = function (m,p__27415,f,a,b,c,args){
var vec__27463 = p__27415;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27463,(0),null);
var ks = cljs.core.nthnext(vec__27463,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__27464 = function (m,p__27415,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__27465__i = 0, G__27465__a = new Array(arguments.length -  6);
while (G__27465__i < G__27465__a.length) {G__27465__a[G__27465__i] = arguments[G__27465__i + 6]; ++G__27465__i;}
  args = new cljs.core.IndexedSeq(G__27465__a,0);
} 
return G__27464__delegate.call(this,m,p__27415,f,a,b,c,args);};
G__27464.cljs$lang$maxFixedArity = 6;
G__27464.cljs$lang$applyTo = (function (arglist__27466){
var m = cljs.core.first(arglist__27466);
arglist__27466 = cljs.core.next(arglist__27466);
var p__27415 = cljs.core.first(arglist__27466);
arglist__27466 = cljs.core.next(arglist__27466);
var f = cljs.core.first(arglist__27466);
arglist__27466 = cljs.core.next(arglist__27466);
var a = cljs.core.first(arglist__27466);
arglist__27466 = cljs.core.next(arglist__27466);
var b = cljs.core.first(arglist__27466);
arglist__27466 = cljs.core.next(arglist__27466);
var c = cljs.core.first(arglist__27466);
var args = cljs.core.rest(arglist__27466);
return G__27464__delegate(m,p__27415,f,a,b,c,args);
});
G__27464.cljs$core$IFn$_invoke$arity$variadic = G__27464__delegate;
return G__27464;
})()
;
update_in = function(m,p__27415,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__27415,f);
case 4:
return update_in__4.call(this,m,p__27415,f,a);
case 5:
return update_in__5.call(this,m,p__27415,f,a,b);
case 6:
return update_in__6.call(this,m,p__27415,f,a,b,c);
default:
var G__27467 = null;
if (arguments.length > 6) {
var G__27468__i = 0, G__27468__a = new Array(arguments.length -  6);
while (G__27468__i < G__27468__a.length) {G__27468__a[G__27468__i] = arguments[G__27468__i + 6]; ++G__27468__i;}
G__27467 = new cljs.core.IndexedSeq(G__27468__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__27415,f,a,b,c, G__27467);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27479 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27479) : f.call(null,G__27479));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27480 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27481 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27480,G__27481) : f.call(null,G__27480,G__27481));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27482 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27483 = x;
var G__27484 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27482,G__27483,G__27484) : f.call(null,G__27482,G__27483,G__27484));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27485 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27486 = x;
var G__27487 = y;
var G__27488 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27485,G__27486,G__27487,G__27488) : f.call(null,G__27485,G__27486,G__27487,G__27488));
})());
});
var update__7 = (function() { 
var G__27489__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__27489 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__27490__i = 0, G__27490__a = new Array(arguments.length -  6);
while (G__27490__i < G__27490__a.length) {G__27490__a[G__27490__i] = arguments[G__27490__i + 6]; ++G__27490__i;}
  more = new cljs.core.IndexedSeq(G__27490__a,0);
} 
return G__27489__delegate.call(this,m,k,f,x,y,z,more);};
G__27489.cljs$lang$maxFixedArity = 6;
G__27489.cljs$lang$applyTo = (function (arglist__27491){
var m = cljs.core.first(arglist__27491);
arglist__27491 = cljs.core.next(arglist__27491);
var k = cljs.core.first(arglist__27491);
arglist__27491 = cljs.core.next(arglist__27491);
var f = cljs.core.first(arglist__27491);
arglist__27491 = cljs.core.next(arglist__27491);
var x = cljs.core.first(arglist__27491);
arglist__27491 = cljs.core.next(arglist__27491);
var y = cljs.core.first(arglist__27491);
arglist__27491 = cljs.core.next(arglist__27491);
var z = cljs.core.first(arglist__27491);
var more = cljs.core.rest(arglist__27491);
return G__27489__delegate(m,k,f,x,y,z,more);
});
G__27489.cljs$core$IFn$_invoke$arity$variadic = G__27489__delegate;
return G__27489;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__27492 = null;
if (arguments.length > 6) {
var G__27493__i = 0, G__27493__a = new Array(arguments.length -  6);
while (G__27493__i < G__27493__a.length) {G__27493__a[G__27493__i] = arguments[G__27493__i + 6]; ++G__27493__i;}
G__27492 = new cljs.core.IndexedSeq(G__27493__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__27492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__27494 = (ll - (5));
var G__27495 = r;
ll = G__27494;
ret = G__27495;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__27500 = cljs.core.pv_aget(node,(0));
var G__27501 = (level - (5));
node = G__27500;
level = G__27501;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__27502 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__27503 = (level - (5));
node = G__27502;
level = G__27503;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__27513 = init__$2;
var G__27514 = (j + i);
var G__27515 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27513,G__27514,G__27515) : f.call(null,G__27513,G__27514,G__27515));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__27526 = (j + (1));
var G__27527 = init__$3;
j = G__27526;
init__$2 = G__27527;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27516 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27516) : cljs.core.deref.call(null,G__27516));
} else {
var G__27528 = (i + len);
var G__27529 = init__$2;
i = G__27528;
init__$1 = G__27529;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__27517 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__27517) : cljs.core.tv_editable_root.call(null,G__27517));
})(),(function (){var G__27518 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__27518) : cljs.core.tv_editable_tail.call(null,G__27518));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__27519 = init__$2;
var G__27520 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27519,G__27520) : f.call(null,G__27519,G__27520));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__27530 = (j + (1));
var G__27531 = init__$3;
j = G__27530;
init__$2 = G__27531;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27521 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27521) : cljs.core.deref.call(null,G__27521));
} else {
var G__27532 = (i + len);
var G__27533 = init__$2;
i = G__27532;
init__$1 = G__27533;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__27522 = coll__$1;
var G__27523 = cljs.core.first_array_for_longvec(coll__$1);
var G__27524 = (0);
var G__27525 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27522,G__27523,G__27524,G__27525) : cljs.core.chunked_seq.call(null,G__27522,G__27523,G__27524,G__27525));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__5138__auto___27534 = len;
var i_27535 = (0);
while(true){
if((i_27535 < n__5138__auto___27534)){
(new_tail[i_27535] = (self__.tail[i_27535]));

var G__27536 = (i_27535 + (1));
i_27535 = G__27536;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__27537 = null;
var G__27537__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27537__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27537 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27537__2.call(this,self__,k);
case 3:
return G__27537__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27537.cljs$core$IFn$_invoke$arity$2 = G__27537__2;
G__27537.cljs$core$IFn$_invoke$arity$3 = G__27537__3;
return G__27537;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args27512){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27512)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__27538 = (i + (1));
var G__27539 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__27538;
out = G__27539;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27540__i = 0, G__27540__a = new Array(arguments.length -  0);
while (G__27540__i < G__27540__a.length) {G__27540__a[G__27540__i] = arguments[G__27540__i + 0]; ++G__27540__i;}
  args = new cljs.core.IndexedSeq(G__27540__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__27541){
var args = cljs.core.seq(arglist__27541);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__27542 = self__.vec;
var G__27543 = self__.node;
var G__27544 = self__.i;
var G__27545 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27542,G__27543,G__27544,G__27545) : cljs.core.chunked_seq.call(null,G__27542,G__27543,G__27544,G__27545));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__27546 = self__.vec;
var G__27547 = (self__.i + self__.off);
var G__27548 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27546,G__27547,G__27548) : cljs.core.subvec.call(null,G__27546,G__27547,G__27548));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__27549 = self__.vec;
var G__27550 = (self__.i + self__.off);
var G__27551 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27549,G__27550,G__27551) : cljs.core.subvec.call(null,G__27549,G__27550,G__27551));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__27552 = self__.vec;
var G__27553 = self__.node;
var G__27554 = self__.i;
var G__27555 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27552,G__27553,G__27554,G__27555) : cljs.core.chunked_seq.call(null,G__27552,G__27553,G__27554,G__27555));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__27556 = self__.vec;
var G__27557 = cljs.core.unchecked_array_for(self__.vec,end);
var G__27558 = end;
var G__27559 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27556,G__27557,G__27558,G__27559) : cljs.core.chunked_seq.call(null,G__27556,G__27557,G__27558,G__27559));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__27560 = self__.vec;
var G__27561 = self__.node;
var G__27562 = self__.i;
var G__27563 = self__.off;
var G__27564 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__27560,G__27561,G__27562,G__27563,G__27564) : cljs.core.chunked_seq.call(null,G__27560,G__27561,G__27562,G__27563,G__27564));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__27565 = self__.vec;
var G__27566 = cljs.core.unchecked_array_for(self__.vec,end);
var G__27567 = end;
var G__27568 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27565,G__27566,G__27567,G__27568) : cljs.core.chunked_seq.call(null,G__27565,G__27566,G__27567,G__27568));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__27570 = self__.meta;
var G__27571 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__27572 = self__.start;
var G__27573 = (function (){var x__4568__auto__ = self__.end;
var y__4569__auto__ = (v_pos + (1));
return ((x__4568__auto__ > y__4569__auto__) ? x__4568__auto__ : y__4569__auto__);
})();
var G__27574 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27570,G__27571,G__27572,G__27573,G__27574) : cljs.core.build_subvec.call(null,G__27570,G__27571,G__27572,G__27573,G__27574));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__27575 = self__.meta;
var G__27576 = self__.v;
var G__27577 = self__.start;
var G__27578 = (self__.end - (1));
var G__27579 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27575,G__27576,G__27577,G__27578,G__27579) : cljs.core.build_subvec.call(null,G__27575,G__27576,G__27577,G__27578,G__27579));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__27581 = meta__$1;
var G__27582 = self__.v;
var G__27583 = self__.start;
var G__27584 = self__.end;
var G__27585 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27581,G__27582,G__27583,G__27584,G__27585) : cljs.core.build_subvec.call(null,G__27581,G__27582,G__27583,G__27584,G__27585));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27586 = self__.meta;
var G__27587 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__27588 = self__.start;
var G__27589 = (self__.end + (1));
var G__27590 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27586,G__27587,G__27588,G__27589,G__27590) : cljs.core.build_subvec.call(null,G__27586,G__27587,G__27588,G__27589,G__27590));
});

cljs.core.Subvec.prototype.call = (function() {
var G__27591 = null;
var G__27591__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27591__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27591 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27591__2.call(this,self__,k);
case 3:
return G__27591__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27591.cljs$core$IFn$_invoke$arity$2 = G__27591__2;
G__27591.cljs$core$IFn$_invoke$arity$3 = G__27591__3;
return G__27591;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args27569){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27569)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__27592 = meta;
var G__27593 = v.v;
var G__27594 = (v.start + start);
var G__27595 = (v.start + end);
var G__27596 = __hash;
meta = G__27592;
v = G__27593;
start = G__27594;
end = G__27595;
__hash = G__27596;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj27603 = {};
return obj27603;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__27611 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__27612 = (level - (5));
node = G__27611;
level = G__27612;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__27616 = null;
var G__27616__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27616__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27616 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27616__2.call(this,self__,k);
case 3:
return G__27616__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27616.cljs$core$IFn$_invoke$arity$2 = G__27616__2;
G__27616.cljs$core$IFn$_invoke$arity$3 = G__27616__3;
return G__27616;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args27613){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27613)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__4251__auto__ = self__.front;
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4251__auto__ = self__.rear;
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__27617 = (i + incr);
i = G__27617;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__27618 = (i + (1));
var G__27619 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__27618;
out = G__27619;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj27623 = {};
return obj27623;
})();
var l = ks.length;
var i_27624 = (0);
while(true){
if((i_27624 < l)){
var k_27625 = (ks[i_27624]);
(new_obj[k_27625] = (obj[k_27625]));

var G__27626 = (i_27624 + (1));
i_27624 = G__27626;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4239__auto__ = (function (){var G__27630 = k;
return goog.isString(G__27630);
})();
if(cljs.core.truth_(and__4239__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4239__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__27631 = init__$1;
var G__27632 = k;
var G__27633 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27631,G__27632,G__27633) : f.call(null,G__27631,G__27632,G__27633));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27634 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27634) : cljs.core.deref.call(null,G__27634));
} else {
var G__27640 = cljs.core.rest(keys__$1);
var G__27641 = init__$2;
keys__$1 = G__27640;
init__$1 = G__27641;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4239__auto__ = (function (){var G__27636 = k;
return goog.isString(G__27636);
})();
if(cljs.core.truth_(and__4239__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4239__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__27637 = k;
return goog.isString(G__27637);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4239__auto__ = (function (){var G__27639 = k;
return goog.isString(G__27639);
})();
if(cljs.core.truth_(and__4239__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4239__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__27627_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__27627_SHARP_,(self__.strobj[p1__27627_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__27642 = null;
var G__27642__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27642__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27642 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27642__2.call(this,self__,k);
case 3:
return G__27642__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27642.cljs$core$IFn$_invoke$arity$2 = G__27642__2;
G__27642.cljs$core$IFn$_invoke$arity$3 = G__27642__3;
return G__27642;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args27628){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27628)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj27644 = {};
return obj27644;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__27645 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27645,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27645,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__27646 = (i + (2));
i = G__27646;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__27647 = (i + (2));
i = G__27647;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__27648 = (i + (2));
i = G__27648;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__27649 = (i + (2));
i = G__27649;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__27650 = (i + (2));
i = G__27650;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__4251__auto__ = (function (){var G__27654 = k;
return goog.isString(G__27654);
})();
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_27655 = (0);
while(true){
if((i_27655 < l)){
(narr[i_27655] = (arr[i_27655]));

var G__27656 = (i_27655 + (1));
i_27655 = G__27656;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27658 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27658) : cljs.core.keys.call(null,G__27658));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27659 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27659) : cljs.core.vals.call(null,G__27659));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27660 = cljs.core.seq(coll);
var chunk__27661 = null;
var count__27662 = (0);
var i__27663 = (0);
while(true){
if((i__27663 < count__27662)){
var vec__27664 = chunk__27661.cljs$core$IIndexed$_nth$arity$2(null,i__27663);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27664,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27664,(1),null);
var G__27665_27678 = v;
var G__27666_27679 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27665_27678,G__27666_27679) : f.call(null,G__27665_27678,G__27666_27679));

var G__27680 = seq__27660;
var G__27681 = chunk__27661;
var G__27682 = count__27662;
var G__27683 = (i__27663 + (1));
seq__27660 = G__27680;
chunk__27661 = G__27681;
count__27662 = G__27682;
i__27663 = G__27683;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27660);
if(temp__4126__auto__){
var seq__27660__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27660__$1)){
var c__5038__auto__ = cljs.core.chunk_first(seq__27660__$1);
var G__27684 = cljs.core.chunk_rest(seq__27660__$1);
var G__27685 = c__5038__auto__;
var G__27686 = cljs.core.count(c__5038__auto__);
var G__27687 = (0);
seq__27660 = G__27684;
chunk__27661 = G__27685;
count__27662 = G__27686;
i__27663 = G__27687;
continue;
} else {
var vec__27667 = cljs.core.first(seq__27660__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27667,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27667,(1),null);
var G__27668_27688 = v;
var G__27669_27689 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27668_27688,G__27669_27689) : f.call(null,G__27668_27688,G__27669_27689));

var G__27690 = cljs.core.next(seq__27660__$1);
var G__27691 = null;
var G__27692 = (0);
var G__27693 = (0);
seq__27660 = G__27690;
chunk__27661 = G__27691;
count__27662 = G__27692;
i__27663 = G__27693;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__27670 = init__$1;
var G__27671 = (self__.arr[i]);
var G__27672 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27670,G__27671,G__27672) : f.call(null,G__27670,G__27671,G__27672));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27673 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27673) : cljs.core.deref.call(null,G__27673));
} else {
var G__27694 = (i + (2));
var G__27695 = init__$2;
i = G__27694;
init__$1 = G__27695;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__27674 = other;
if(G__27674){
var bit__4925__auto__ = (G__27674.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4925__auto__) || (G__27674.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__27696 = (i + (2));
i = G__27696;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj27676 = {};
return obj27676;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__27697 = (s + (2));
var G__27698 = d;
s = G__27697;
d = G__27698;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__27699 = (s + (2));
var G__27700 = (d + (2));
s = G__27699;
d = G__27700;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__27677 = cljs.core.aclone(self__.arr);
(G__27677[(idx + (1))] = v);

return G__27677;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27701 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27702 = cljs.core.next(es);
ret = G__27701;
es = G__27702;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__27703 = null;
var G__27703__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27703__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27703 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27703__2.call(this,self__,k);
case 3:
return G__27703__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27703.cljs$core$IFn$_invoke$arity$2 = G__27703__2;
G__27703.cljs$core$IFn$_invoke$arity$3 = G__27703__3;
return G__27703;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args27657){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27657)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27704 = (i + (2));
var G__27705 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27704;
ret = G__27705;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__27706_27714 = self__.arr;
G__27706_27714.pop();

G__27706_27714.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__27707 = self__.len;
var G__27708 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__27707,G__27708) : cljs.core.array__GT_transient_hash_map.call(null,G__27707,G__27708));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__27709 = o;
if(G__27709){
var bit__4932__auto__ = (G__27709.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4932__auto__) || (G__27709.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27709.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27709);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27709);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__27710 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27710) : cljs.core.key.call(null,G__27710));
})(),(function (){var G__27711 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27711) : cljs.core.val.call(null,G__27711));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27715 = cljs.core.next(es);
var G__27716 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__27712 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27712) : cljs.core.key.call(null,G__27712));
})(),(function (){var G__27713 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27713) : cljs.core.val.call(null,G__27713));
})());
es = G__27715;
tcoll__$2 = G__27716;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__27717 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__27718 = (i + (2));
out = G__27717;
i = G__27718;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__27721 = cljs.core.aclone(arr);
(G__27721[i] = a);

return G__27721;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__27722 = cljs.core.aclone(arr);
(G__27722[i] = a);

(G__27722[j] = b);

return G__27722;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__27727 = init__$1;
var G__27728 = k;
var G__27729 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27727,G__27728,G__27729) : f.call(null,G__27727,G__27728,G__27729));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27730 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27730) : cljs.core.deref.call(null,G__27730));
} else {
var G__27731 = (i + (2));
var G__27732 = init__$2;
i = G__27731;
init__$1 = G__27732;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27733 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27733) : cljs.core.create_inode_seq.call(null,G__27733));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27747 = (0);
var j_27748 = (0);
while(true){
if((i_27747 < (32))){
if((((self__.bitmap >>> i_27747) & (1)) === (0))){
var G__27749 = (i_27747 + (1));
var G__27750 = j_27748;
i_27747 = G__27749;
j_27748 = G__27750;
continue;
} else {
(nodes[i_27747] = ((!(((self__.arr[j_27748]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_27748])),(self__.arr[j_27748]),(self__.arr[(j_27748 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27748 + (1))])));

var G__27751 = (i_27747 + (1));
var G__27752 = (j_27748 + (2));
i_27747 = G__27751;
j_27748 = G__27752;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27734 = edit__$1;
var G__27735 = (shift + (5));
var G__27736 = key_or_nil;
var G__27737 = val_or_node;
var G__27738 = hash;
var G__27739 = key;
var G__27740 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__27734,G__27735,G__27736,G__27737,G__27738,G__27739,G__27740) : cljs.core.create_node.call(null,G__27734,G__27735,G__27736,G__27737,G__27738,G__27739,G__27740));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27753 = (0);
var j_27754 = (0);
while(true){
if((i_27753 < (32))){
if((((self__.bitmap >>> i_27753) & (1)) === (0))){
var G__27755 = (i_27753 + (1));
var G__27756 = j_27754;
i_27753 = G__27755;
j_27754 = G__27756;
continue;
} else {
(nodes[i_27753] = ((!(((self__.arr[j_27754]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_27754])),(self__.arr[j_27754]),(self__.arr[(j_27754 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27754 + (1))])));

var G__27757 = (i_27753 + (1));
var G__27758 = (j_27754 + (2));
i_27753 = G__27757;
j_27754 = G__27758;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27741 = (shift + (5));
var G__27742 = key_or_nil;
var G__27743 = val_or_node;
var G__27744 = hash;
var G__27745 = key;
var G__27746 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__27741,G__27742,G__27743,G__27744,G__27745,G__27746) : cljs.core.create_node.call(null,G__27741,G__27742,G__27743,G__27744,G__27745,G__27746));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__27759 = (i + (1));
var G__27760 = (j + (2));
var G__27761 = (bitmap | ((1) << i));
i = G__27759;
j = G__27760;
bitmap = G__27761;
continue;
} else {
var G__27762 = (i + (1));
var G__27763 = j;
var G__27764 = bitmap;
i = G__27762;
j = G__27763;
bitmap = G__27764;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27765 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__27765) : cljs.core.create_array_node_seq.call(null,G__27765));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27766 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27766) : cljs.core.deref.call(null,G__27766));
} else {
var G__27767 = (i + (1));
var G__27768 = init__$2;
i = G__27767;
init__$1 = G__27768;
continue;
}
} else {
var G__27769 = (i + (1));
var G__27770 = init__$1;
i = G__27769;
init__$1 = G__27770;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__27771 = (i + (2));
i = G__27771;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27772 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27772) : cljs.core.create_inode_seq.call(null,G__27772));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__27773 = self__.nodes;
var G__27774 = (self__.i + (2));
var G__27775 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27773,G__27774,G__27775) : cljs.core.create_inode_seq.call(null,G__27773,G__27774,G__27775));
} else {
var G__27776 = self__.nodes;
var G__27777 = self__.i;
var G__27778 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27776,G__27777,G__27778) : cljs.core.create_inode_seq.call(null,G__27776,G__27777,G__27778));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__27782 = (j + (2));
j = G__27782;
continue;
}
} else {
var G__27783 = (j + (2));
j = G__27783;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__27784 = null;
var G__27785 = self__.nodes;
var G__27786 = self__.i;
var G__27787 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__27784,G__27785,G__27786,G__27787) : cljs.core.create_array_node_seq.call(null,G__27784,G__27785,G__27786,G__27787));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__27792 = (j + (1));
j = G__27792;
continue;
}
} else {
var G__27793 = (j + (1));
j = G__27793;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27795 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27795) : cljs.core.keys.call(null,G__27795));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27796 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27796) : cljs.core.vals.call(null,G__27796));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27797 = cljs.core.seq(coll);
var chunk__27798 = null;
var count__27799 = (0);
var i__27800 = (0);
while(true){
if((i__27800 < count__27799)){
var vec__27801 = chunk__27798.cljs$core$IIndexed$_nth$arity$2(null,i__27800);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27801,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27801,(1),null);
var G__27802_27813 = v;
var G__27803_27814 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27802_27813,G__27803_27814) : f.call(null,G__27802_27813,G__27803_27814));

var G__27815 = seq__27797;
var G__27816 = chunk__27798;
var G__27817 = count__27799;
var G__27818 = (i__27800 + (1));
seq__27797 = G__27815;
chunk__27798 = G__27816;
count__27799 = G__27817;
i__27800 = G__27818;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27797);
if(temp__4126__auto__){
var seq__27797__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27797__$1)){
var c__5038__auto__ = cljs.core.chunk_first(seq__27797__$1);
var G__27819 = cljs.core.chunk_rest(seq__27797__$1);
var G__27820 = c__5038__auto__;
var G__27821 = cljs.core.count(c__5038__auto__);
var G__27822 = (0);
seq__27797 = G__27819;
chunk__27798 = G__27820;
count__27799 = G__27821;
i__27800 = G__27822;
continue;
} else {
var vec__27804 = cljs.core.first(seq__27797__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27804,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27804,(1),null);
var G__27805_27823 = v;
var G__27806_27824 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27805_27823,G__27806_27824) : f.call(null,G__27805_27823,G__27806_27824));

var G__27825 = cljs.core.next(seq__27797__$1);
var G__27826 = null;
var G__27827 = (0);
var G__27828 = (0);
seq__27797 = G__27825;
chunk__27798 = G__27826;
count__27799 = G__27827;
i__27800 = G__27828;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__27807 = init;
var G__27808 = null;
var G__27809 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27807,G__27808,G__27809) : f.call(null,G__27807,G__27808,G__27809));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27810 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27810) : cljs.core.deref.call(null,G__27810));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj27812 = {};
return obj27812;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27829 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27830 = cljs.core.next(es);
ret = G__27829;
es = G__27830;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__27831 = null;
var G__27831__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27831__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27831 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27831__2.call(this,self__,k);
case 3:
return G__27831__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27831.cljs$core$IFn$_invoke$arity$2 = G__27831__2;
G__27831.cljs$core$IFn$_invoke$arity$3 = G__27831__3;
return G__27831;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args27794){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27794)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27832 = (i + (2));
var G__27833 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27832;
ret = G__27833;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27834 = (i + (1));
var G__27835 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__27834;
out = G__27835;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__27836 = o;
if(G__27836){
var bit__4932__auto__ = (G__27836.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4932__auto__) || (G__27836.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27836.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27836);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27836);
}
})()){
return tcoll.assoc_BANG_((function (){var G__27837 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27837) : cljs.core.key.call(null,G__27837));
})(),(function (){var G__27838 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27838) : cljs.core.val.call(null,G__27838));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27841 = cljs.core.next(es);
var G__27842 = tcoll__$1.assoc_BANG_((function (){var G__27839 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27839) : cljs.core.key.call(null,G__27839));
})(),(function (){var G__27840 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27840) : cljs.core.val.call(null,G__27840));
})());
es = G__27841;
tcoll__$1 = G__27842;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__27843 = ((ascending_QMARK_)?t.left:t.right);
var G__27844 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__27843;
stack__$1 = G__27844;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27857 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27857) : cljs.core.deref.call(null,G__27857));
} else {
var init__$2 = (function (){var G__27858 = init__$1;
var G__27859 = node.key;
var G__27860 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27858,G__27859,G__27860) : f.call(null,G__27858,G__27859,G__27860));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27861 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27861) : cljs.core.deref.call(null,G__27861));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__27862 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27862) : cljs.core.deref.call(null,G__27862));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__27864 = null;
var G__27864__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27864__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27864 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27864__2.call(this,self__,k);
case 3:
return G__27864__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27864.cljs$core$IFn$_invoke$arity$2 = G__27864__2;
G__27864.cljs$core$IFn$_invoke$arity$3 = G__27864__3;
return G__27864;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args27863){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27863)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__27866 = null;
var G__27866__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27866__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27866 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27866__2.call(this,self__,k);
case 3:
return G__27866__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27866.cljs$core$IFn$_invoke$arity$2 = G__27866__2;
G__27866.cljs$core$IFn$_invoke$arity$3 = G__27866__3;
return G__27866;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args27865){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27865)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__27879 = k;
var G__27880 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27879,G__27880) : comp.call(null,G__27879,G__27880));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__27899 = k;
var G__27900 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27899,G__27900) : comp.call(null,G__27899,G__27900));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__27911 = k;
var G__27912 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27911,G__27912) : comp.call(null,G__27911,G__27912));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27914 = cljs.core.seq(coll);
var chunk__27915 = null;
var count__27916 = (0);
var i__27917 = (0);
while(true){
if((i__27917 < count__27916)){
var vec__27918 = chunk__27915.cljs$core$IIndexed$_nth$arity$2(null,i__27917);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27918,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27918,(1),null);
var G__27919_27931 = v;
var G__27920_27932 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27919_27931,G__27920_27932) : f.call(null,G__27919_27931,G__27920_27932));

var G__27933 = seq__27914;
var G__27934 = chunk__27915;
var G__27935 = count__27916;
var G__27936 = (i__27917 + (1));
seq__27914 = G__27933;
chunk__27915 = G__27934;
count__27916 = G__27935;
i__27917 = G__27936;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27914);
if(temp__4126__auto__){
var seq__27914__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27914__$1)){
var c__5038__auto__ = cljs.core.chunk_first(seq__27914__$1);
var G__27937 = cljs.core.chunk_rest(seq__27914__$1);
var G__27938 = c__5038__auto__;
var G__27939 = cljs.core.count(c__5038__auto__);
var G__27940 = (0);
seq__27914 = G__27937;
chunk__27915 = G__27938;
count__27916 = G__27939;
i__27917 = G__27940;
continue;
} else {
var vec__27921 = cljs.core.first(seq__27914__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27921,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27921,(1),null);
var G__27922_27941 = v;
var G__27923_27942 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27922_27941,G__27923_27942) : f.call(null,G__27922_27941,G__27923_27942));

var G__27943 = cljs.core.next(seq__27914__$1);
var G__27944 = null;
var G__27945 = (0);
var G__27946 = (0);
seq__27914 = G__27943;
chunk__27915 = G__27944;
count__27916 = G__27945;
i__27917 = G__27946;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27924 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27924) : cljs.core.keys.call(null,G__27924));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27925 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27925) : cljs.core.vals.call(null,G__27925));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27926 = k;
var G__27927 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27926,G__27927) : self__.comp.call(null,G__27926,G__27927));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__27947 = t.left;
t = G__27947;
continue;
} else {
var G__27948 = t.right;
t = G__27948;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27949 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27950 = cljs.core.next(es);
ret = G__27949;
es = G__27950;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__27951 = null;
var G__27951__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27951__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27951 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27951__2.call(this,self__,k);
case 3:
return G__27951__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27951.cljs$core$IFn$_invoke$arity$2 = G__27951__2;
G__27951.cljs$core$IFn$_invoke$arity$3 = G__27951__3;
return G__27951;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args27913){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27913)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27928 = k;
var G__27929 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27928,G__27929) : self__.comp.call(null,G__27928,G__27929));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__27952 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27953 = t.left;
stack = G__27952;
t = G__27953;
continue;
} else {
var G__27954 = stack;
var G__27955 = t.right;
stack = G__27954;
t = G__27955;
continue;
}
} else {
if((c > (0))){
var G__27956 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27957 = t.right;
stack = G__27956;
t = G__27957;
continue;
} else {
var G__27958 = stack;
var G__27959 = t.left;
stack = G__27958;
t = G__27959;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__27930 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27930) : cljs.core.key.call(null,G__27930));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__27960 = cljs.core.nnext(in$);
var G__27961 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27960;
out = G__27961;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27962__i = 0, G__27962__a = new Array(arguments.length -  0);
while (G__27962__i < G__27962__a.length) {G__27962__a[G__27962__i] = arguments[G__27962__i + 0]; ++G__27962__i;}
  keyvals = new cljs.core.IndexedSeq(G__27962__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__27963){
var keyvals = cljs.core.seq(arglist__27963);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27964__i = 0, G__27964__a = new Array(arguments.length -  0);
while (G__27964__i < G__27964__a.length) {G__27964__a[G__27964__i] = arguments[G__27964__i + 0]; ++G__27964__i;}
  keyvals = new cljs.core.IndexedSeq(G__27964__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__27965){
var keyvals = cljs.core.seq(arglist__27965);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj27969 = {};
return obj27969;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__27970 = cljs.core.nnext(kvs);
kvs = G__27970;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27971__i = 0, G__27971__a = new Array(arguments.length -  0);
while (G__27971__i < G__27971__a.length) {G__27971__a[G__27971__i] = arguments[G__27971__i + 0]; ++G__27971__i;}
  keyvals = new cljs.core.IndexedSeq(G__27971__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__27972){
var keyvals = cljs.core.seq(arglist__27972);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__27973 = cljs.core.nnext(in$);
var G__27974 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27973;
out = G__27974;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27975__i = 0, G__27975__a = new Array(arguments.length -  0);
while (G__27975__i < G__27975__a.length) {G__27975__a[G__27975__i] = arguments[G__27975__i + 0]; ++G__27975__i;}
  keyvals = new cljs.core.IndexedSeq(G__27975__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__27976){
var keyvals = cljs.core.seq(arglist__27976);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__27977 = cljs.core.nnext(in$);
var G__27978 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27977;
out = G__27978;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__27979__i = 0, G__27979__a = new Array(arguments.length -  1);
while (G__27979__i < G__27979__a.length) {G__27979__a[G__27979__i] = arguments[G__27979__i + 1]; ++G__27979__i;}
  keyvals = new cljs.core.IndexedSeq(G__27979__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__27980){
var comparator = cljs.core.first(arglist__27980);
var keyvals = cljs.core.rest(arglist__27980);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27981 = self__.mseq;
if(G__27981){
var bit__4932__auto__ = (G__27981.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4932__auto__) || (G__27981.cljs$core$INext$)){
return true;
} else {
if((!G__27981.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27981);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27981);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27982 = self__.mseq;
if(G__27982){
var bit__4932__auto__ = (G__27982.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4932__auto__) || (G__27982.cljs$core$INext$)){
return true;
} else {
if((!G__27982.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27982);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27982);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27983 = self__.mseq;
if(G__27983){
var bit__4932__auto__ = (G__27983.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4932__auto__) || (G__27983.cljs$core$INext$)){
return true;
} else {
if((!G__27983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27983);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27984 = self__.mseq;
if(G__27984){
var bit__4932__auto__ = (G__27984.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4932__auto__) || (G__27984.cljs$core$INext$)){
return true;
} else {
if((!G__27984.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27984);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27984);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__27985_SHARP_,p2__27986_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4251__auto__ = p1__27985_SHARP_;
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__27986_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__27987__i = 0, G__27987__a = new Array(arguments.length -  0);
while (G__27987__i < G__27987__a.length) {G__27987__a[G__27987__i] = arguments[G__27987__i + 0]; ++G__27987__i;}
  maps = new cljs.core.IndexedSeq(G__27987__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__27988){
var maps = cljs.core.seq(arglist__27988);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27991 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27992 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27991,G__27992) : f.call(null,G__27991,G__27992));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__4251__auto__ = m1;
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__27993__i = 0, G__27993__a = new Array(arguments.length -  1);
while (G__27993__i < G__27993__a.length) {G__27993__a[G__27993__i] = arguments[G__27993__i + 1]; ++G__27993__i;}
  maps = new cljs.core.IndexedSeq(G__27993__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__27994){
var f = cljs.core.first(arglist__27994);
var maps = cljs.core.rest(arglist__27994);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$14);
var G__27995 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$14))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__27996 = cljs.core.next(keys);
ret = G__27995;
keys = G__27996;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27999 = cljs.core.seq(coll);
var chunk__28000 = null;
var count__28001 = (0);
var i__28002 = (0);
while(true){
if((i__28002 < count__28001)){
var vec__28003 = chunk__28000.cljs$core$IIndexed$_nth$arity$2(null,i__28002);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28003,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28003,(1),null);
var G__28004_28009 = v;
var G__28005_28010 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28004_28009,G__28005_28010) : f.call(null,G__28004_28009,G__28005_28010));

var G__28011 = seq__27999;
var G__28012 = chunk__28000;
var G__28013 = count__28001;
var G__28014 = (i__28002 + (1));
seq__27999 = G__28011;
chunk__28000 = G__28012;
count__28001 = G__28013;
i__28002 = G__28014;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27999);
if(temp__4126__auto__){
var seq__27999__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27999__$1)){
var c__5038__auto__ = cljs.core.chunk_first(seq__27999__$1);
var G__28015 = cljs.core.chunk_rest(seq__27999__$1);
var G__28016 = c__5038__auto__;
var G__28017 = cljs.core.count(c__5038__auto__);
var G__28018 = (0);
seq__27999 = G__28015;
chunk__28000 = G__28016;
count__28001 = G__28017;
i__28002 = G__28018;
continue;
} else {
var vec__28006 = cljs.core.first(seq__27999__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28006,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28006,(1),null);
var G__28007_28019 = v;
var G__28008_28020 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28007_28019,G__28008_28020) : f.call(null,G__28007_28019,G__28008_28020));

var G__28021 = cljs.core.next(seq__27999__$1);
var G__28022 = null;
var G__28023 = (0);
var G__28024 = (0);
seq__27999 = G__28021;
chunk__28000 = G__28022;
count__28001 = G__28023;
i__28002 = G__28024;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27997_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27997_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__28025 = null;
var G__28025__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28025__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28025 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28025__2.call(this,self__,k);
case 3:
return G__28025__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28025.cljs$core$IFn$_invoke$arity$2 = G__28025__2;
G__28025.cljs$core$IFn$_invoke$arity$3 = G__28025__3;
return G__28025;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args27998){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27998)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__28026 = (i + (1));
var G__28027 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__28026;
out = G__28027;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__28028 = (i + (1));
var G__28029 = cljs.core._conj_BANG_(out,(items[i]));
i = G__28028;
out = G__28029;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__28031 = null;
var G__28031__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__28031__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__28031 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28031__2.call(this,self__,k);
case 3:
return G__28031__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28031.cljs$core$IFn$_invoke$arity$2 = G__28031__2;
G__28031.cljs$core$IFn$_invoke$arity$3 = G__28031__3;
return G__28031;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args28030){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28030)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28034 = cljs.core.seq(coll);
var chunk__28035 = null;
var count__28036 = (0);
var i__28037 = (0);
while(true){
if((i__28037 < count__28036)){
var vec__28038 = chunk__28035.cljs$core$IIndexed$_nth$arity$2(null,i__28037);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28038,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28038,(1),null);
var G__28039_28044 = v;
var G__28040_28045 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28039_28044,G__28040_28045) : f.call(null,G__28039_28044,G__28040_28045));

var G__28046 = seq__28034;
var G__28047 = chunk__28035;
var G__28048 = count__28036;
var G__28049 = (i__28037 + (1));
seq__28034 = G__28046;
chunk__28035 = G__28047;
count__28036 = G__28048;
i__28037 = G__28049;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28034);
if(temp__4126__auto__){
var seq__28034__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28034__$1)){
var c__5038__auto__ = cljs.core.chunk_first(seq__28034__$1);
var G__28050 = cljs.core.chunk_rest(seq__28034__$1);
var G__28051 = c__5038__auto__;
var G__28052 = cljs.core.count(c__5038__auto__);
var G__28053 = (0);
seq__28034 = G__28050;
chunk__28035 = G__28051;
count__28036 = G__28052;
i__28037 = G__28053;
continue;
} else {
var vec__28041 = cljs.core.first(seq__28034__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28041,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28041,(1),null);
var G__28042_28054 = v;
var G__28043_28055 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28042_28054,G__28043_28055) : f.call(null,G__28042_28054,G__28043_28055));

var G__28056 = cljs.core.next(seq__28034__$1);
var G__28057 = null;
var G__28058 = (0);
var G__28059 = (0);
seq__28034 = G__28056;
chunk__28035 = G__28057;
count__28036 = G__28058;
i__28037 = G__28059;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__28032_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__28032_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__28060 = null;
var G__28060__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28060__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28060 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28060__2.call(this,self__,k);
case 3:
return G__28060__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28060.cljs$core$IFn$_invoke$arity$2 = G__28060__2;
G__28060.cljs$core$IFn$_invoke$arity$3 = G__28060__3;
return G__28060;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args28033){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28033)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__5132__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__5132__auto__.length)){
var G__28061 = (i + (1));
var G__28062 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__28061;
res = G__28062;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__28063 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__28064 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__28063;
out = G__28064;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__28065__delegate = function (keys){
return cljs.core.set(keys);
};
var G__28065 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__28066__i = 0, G__28066__a = new Array(arguments.length -  0);
while (G__28066__i < G__28066__a.length) {G__28066__a[G__28066__i] = arguments[G__28066__i + 0]; ++G__28066__i;}
  keys = new cljs.core.IndexedSeq(G__28066__a,0);
} 
return G__28065__delegate.call(this,keys);};
G__28065.cljs$lang$maxFixedArity = 0;
G__28065.cljs$lang$applyTo = (function (arglist__28067){
var keys = cljs.core.seq(arglist__28067);
return G__28065__delegate(keys);
});
G__28065.cljs$core$IFn$_invoke$arity$variadic = G__28065__delegate;
return G__28065;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__28068 = null;
if (arguments.length > 0) {
var G__28069__i = 0, G__28069__a = new Array(arguments.length -  0);
while (G__28069__i < G__28069__a.length) {G__28069__a[G__28069__i] = arguments[G__28069__i + 0]; ++G__28069__i;}
G__28068 = new cljs.core.IndexedSeq(G__28069__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__28068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__28070__i = 0, G__28070__a = new Array(arguments.length -  0);
while (G__28070__i < G__28070__a.length) {G__28070__a[G__28070__i] = arguments[G__28070__i + 0]; ++G__28070__i;}
  keys = new cljs.core.IndexedSeq(G__28070__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__28071){
var keys = cljs.core.seq(arglist__28071);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__28072__i = 0, G__28072__a = new Array(arguments.length -  1);
while (G__28072__i < G__28072__a.length) {G__28072__a[G__28072__i] = arguments[G__28072__i + 1]; ++G__28072__i;}
  keys = new cljs.core.IndexedSeq(G__28072__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__28073){
var comparator = cljs.core.first(arglist__28073);
var keys = cljs.core.rest(arglist__28073);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__28074_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__28074_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__28074_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__28075_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__28075_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__28075_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__28096 = null;
var G__28096__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28096__1 = (function (result){
var G__28086 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28086) : rf.call(null,G__28086));
});
var G__28096__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__28087 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28087) : cljs.core.deref.call(null,G__28087));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__28088 = result;
var G__28089 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28088,G__28089) : rf.call(null,G__28088,G__28089));
}
});
G__28096 = function(result,input){
switch(arguments.length){
case 0:
return G__28096__0.call(this);
case 1:
return G__28096__1.call(this,result);
case 2:
return G__28096__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28096.cljs$core$IFn$_invoke$arity$0 = G__28096__0;
G__28096.cljs$core$IFn$_invoke$arity$1 = G__28096__1;
G__28096.cljs$core$IFn$_invoke$arity$2 = G__28096__2;
return G__28096;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__28094,seen__$1){
while(true){
var vec__28095 = p__28094;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28095,(0),null);
var xs__$1 = vec__28095;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__28097 = cljs.core.rest(s);
var G__28098 = seen__$1;
p__28094 = G__28097;
seen__$1 = G__28098;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__28099 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__28100 = cljs.core.next(s__$1);
ret = G__28099;
s__$1 = G__28100;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__28102 = x;
if(G__28102){
var bit__4925__auto__ = (G__28102.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4925__auto__) || (G__28102.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__28103 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__28104 = cljs.core.next(ks);
var G__28105 = cljs.core.next(vs);
map = G__28103;
ks = G__28104;
vs = G__28105;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__28116 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28116) : k.call(null,G__28116));
})() > (function (){var G__28117 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28117) : k.call(null,G__28117));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__28118__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28106_SHARP_,p2__28107_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__28106_SHARP_,p2__28107_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__28118 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__28119__i = 0, G__28119__a = new Array(arguments.length -  3);
while (G__28119__i < G__28119__a.length) {G__28119__a[G__28119__i] = arguments[G__28119__i + 3]; ++G__28119__i;}
  more = new cljs.core.IndexedSeq(G__28119__a,0);
} 
return G__28118__delegate.call(this,k,x,y,more);};
G__28118.cljs$lang$maxFixedArity = 3;
G__28118.cljs$lang$applyTo = (function (arglist__28120){
var k = cljs.core.first(arglist__28120);
arglist__28120 = cljs.core.next(arglist__28120);
var x = cljs.core.first(arglist__28120);
arglist__28120 = cljs.core.next(arglist__28120);
var y = cljs.core.first(arglist__28120);
var more = cljs.core.rest(arglist__28120);
return G__28118__delegate(k,x,y,more);
});
G__28118.cljs$core$IFn$_invoke$arity$variadic = G__28118__delegate;
return G__28118;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__28121 = null;
if (arguments.length > 3) {
var G__28122__i = 0, G__28122__a = new Array(arguments.length -  3);
while (G__28122__i < G__28122__a.length) {G__28122__a[G__28122__i] = arguments[G__28122__i + 3]; ++G__28122__i;}
G__28121 = new cljs.core.IndexedSeq(G__28122__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__28121);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__28133 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28133) : k.call(null,G__28133));
})() < (function (){var G__28134 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28134) : k.call(null,G__28134));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__28135__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28123_SHARP_,p2__28124_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__28123_SHARP_,p2__28124_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__28135 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__28136__i = 0, G__28136__a = new Array(arguments.length -  3);
while (G__28136__i < G__28136__a.length) {G__28136__a[G__28136__i] = arguments[G__28136__i + 3]; ++G__28136__i;}
  more = new cljs.core.IndexedSeq(G__28136__a,0);
} 
return G__28135__delegate.call(this,k,x,y,more);};
G__28135.cljs$lang$maxFixedArity = 3;
G__28135.cljs$lang$applyTo = (function (arglist__28137){
var k = cljs.core.first(arglist__28137);
arglist__28137 = cljs.core.next(arglist__28137);
var x = cljs.core.first(arglist__28137);
arglist__28137 = cljs.core.next(arglist__28137);
var y = cljs.core.first(arglist__28137);
var more = cljs.core.rest(arglist__28137);
return G__28135__delegate(k,x,y,more);
});
G__28135.cljs$core$IFn$_invoke$arity$variadic = G__28135__delegate;
return G__28135;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__28138 = null;
if (arguments.length > 3) {
var G__28139__i = 0, G__28139__a = new Array(arguments.length -  3);
while (G__28139__i < G__28139__a.length) {G__28139__a[G__28139__i] = arguments[G__28139__i + 3]; ++G__28139__i;}
G__28138 = new cljs.core.IndexedSeq(G__28139__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__28138);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__28156 = null;
var G__28156__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28156__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__28151 = result;
var G__28152 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28151,G__28152) : rf.call(null,G__28151,G__28152));
})());
})());
var G__28153 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28153) : rf.call(null,G__28153));
});
var G__28156__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__28154 = result;
var G__28155 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28154,G__28155) : rf.call(null,G__28154,G__28155));
} else {
return result;
}
});
G__28156 = function(result,input){
switch(arguments.length){
case 0:
return G__28156__0.call(this);
case 1:
return G__28156__1.call(this,result);
case 2:
return G__28156__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28156.cljs$core$IFn$_invoke$arity$0 = G__28156__0;
G__28156.cljs$core$IFn$_invoke$arity$1 = G__28156__1;
G__28156.cljs$core$IFn$_invoke$arity$2 = G__28156__2;
return G__28156;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__28169 = null;
var G__28169__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28169__1 = (function (result){
var G__28164 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28164) : rf.call(null,G__28164));
});
var G__28169__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__28165 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28165) : pred.call(null,G__28165));
})())){
var G__28166 = result;
var G__28167 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28166,G__28167) : rf.call(null,G__28166,G__28167));
} else {
return cljs.core.reduced(result);
}
});
G__28169 = function(result,input){
switch(arguments.length){
case 0:
return G__28169__0.call(this);
case 1:
return G__28169__1.call(this,result);
case 2:
return G__28169__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28169.cljs$core$IFn$_invoke$arity$0 = G__28169__0;
G__28169.cljs$core$IFn$_invoke$arity$1 = G__28169__1;
G__28169.cljs$core$IFn$_invoke$arity$2 = G__28169__2;
return G__28169;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__28168 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28168) : pred.call(null,G__28168));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__28174 = (function (){var G__28176 = cljs.core._entry_key(sc,e);
var G__28177 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28176,G__28177) : comp.call(null,G__28176,G__28177));
})();
var G__28175 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__28174,G__28175) : test.call(null,G__28174,G__28175));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28181 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28181,(0),null);
var s = vec__28181;
if(cljs.core.truth_((function (){var G__28182 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__28182) : include.call(null,G__28182));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28183 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28183,(0),null);
var s = vec__28183;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28187 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28187,(0),null);
var s = vec__28187;
if(cljs.core.truth_((function (){var G__28188 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__28188) : include.call(null,G__28188));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28189 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28189,(0),null);
var s = vec__28189;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__28190 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__28190) : Math.ceil.call(null,G__28190));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4672__auto__ = self__.__hash;
if(!((h__4672__auto__ == null))){
return h__4672__auto__;
} else {
var h__4672__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4672__auto____$1;

return h__4672__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__28191 = ret;
var G__28192 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28191,G__28192) : f.call(null,G__28191,G__28192));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__28193 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28193) : cljs.core.deref.call(null,G__28193));
} else {
var G__28194 = (i + self__.step);
var G__28195 = ret__$1;
i = G__28194;
ret = G__28195;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__28213 = null;
var G__28213__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28213__1 = (function (result){
var G__28210 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28210) : rf.call(null,G__28210));
});
var G__28213__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__28211 = result;
var G__28212 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28211,G__28212) : rf.call(null,G__28211,G__28212));
} else {
return result;
}
});
G__28213 = function(result,input){
switch(arguments.length){
case 0:
return G__28213__0.call(this);
case 1:
return G__28213__1.call(this,result);
case 2:
return G__28213__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28213.cljs$core$IFn$_invoke$arity$0 = G__28213__0;
G__28213.cljs$core$IFn$_invoke$arity$1 = G__28213__1;
G__28213.cljs$core$IFn$_invoke$arity$2 = G__28213__2;
return G__28213;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (a,pa){
return (function() {
var G__28235 = null;
var G__28235__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28235__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__28226 = result;
var G__28227 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28226,G__28227) : rf.call(null,G__28226,G__28227));
})());
})());
var G__28228 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28228) : rf.call(null,G__28228));
});
var G__28235__2 = (function (result,input){
var pval = (function (){var G__28229 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28229) : cljs.core.deref.call(null,G__28229));
})();
var val = (function (){var G__28230 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28230) : f.call(null,G__28230));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$15)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__28231 = result;
var G__28232 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28231,G__28232) : rf.call(null,G__28231,G__28232));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__28235 = function(result,input){
switch(arguments.length){
case 0:
return G__28235__0.call(this);
case 1:
return G__28235__1.call(this,result);
case 2:
return G__28235__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28235.cljs$core$IFn$_invoke$arity$0 = G__28235__0;
G__28235.cljs$core$IFn$_invoke$arity$1 = G__28235__1;
G__28235.cljs$core$IFn$_invoke$arity$2 = G__28235__2;
return G__28235;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__28233 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28233) : f.call(null,G__28233));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__28214_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__28234 = p1__28214_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28234) : f.call(null,G__28234));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__28244 = init;
var G__28245 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28244,G__28245) : f.call(null,G__28244,G__28245));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__28340 = null;
var G__28340__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__28340__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28298 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28298) : f.call(null,G__28298));
})()],null));
});
var G__28340__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28299 = x;
var G__28300 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28299,G__28300) : f.call(null,G__28299,G__28300));
})()],null));
});
var G__28340__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28301 = x;
var G__28302 = y;
var G__28303 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28301,G__28302,G__28303) : f.call(null,G__28301,G__28302,G__28303));
})()],null));
});
var G__28340__4 = (function() { 
var G__28341__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__28341 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28342__i = 0, G__28342__a = new Array(arguments.length -  3);
while (G__28342__i < G__28342__a.length) {G__28342__a[G__28342__i] = arguments[G__28342__i + 3]; ++G__28342__i;}
  args = new cljs.core.IndexedSeq(G__28342__a,0);
} 
return G__28341__delegate.call(this,x,y,z,args);};
G__28341.cljs$lang$maxFixedArity = 3;
G__28341.cljs$lang$applyTo = (function (arglist__28343){
var x = cljs.core.first(arglist__28343);
arglist__28343 = cljs.core.next(arglist__28343);
var y = cljs.core.first(arglist__28343);
arglist__28343 = cljs.core.next(arglist__28343);
var z = cljs.core.first(arglist__28343);
var args = cljs.core.rest(arglist__28343);
return G__28341__delegate(x,y,z,args);
});
G__28341.cljs$core$IFn$_invoke$arity$variadic = G__28341__delegate;
return G__28341;
})()
;
G__28340 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28340__0.call(this);
case 1:
return G__28340__1.call(this,x);
case 2:
return G__28340__2.call(this,x,y);
case 3:
return G__28340__3.call(this,x,y,z);
default:
var G__28344 = null;
if (arguments.length > 3) {
var G__28345__i = 0, G__28345__a = new Array(arguments.length -  3);
while (G__28345__i < G__28345__a.length) {G__28345__a[G__28345__i] = arguments[G__28345__i + 3]; ++G__28345__i;}
G__28344 = new cljs.core.IndexedSeq(G__28345__a,0);
}
return G__28340__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28344);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28340.cljs$lang$maxFixedArity = 3;
G__28340.cljs$lang$applyTo = G__28340__4.cljs$lang$applyTo;
G__28340.cljs$core$IFn$_invoke$arity$0 = G__28340__0;
G__28340.cljs$core$IFn$_invoke$arity$1 = G__28340__1;
G__28340.cljs$core$IFn$_invoke$arity$2 = G__28340__2;
G__28340.cljs$core$IFn$_invoke$arity$3 = G__28340__3;
G__28340.cljs$core$IFn$_invoke$arity$variadic = G__28340__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28340;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__28346 = null;
var G__28346__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__28346__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28304 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28304) : f.call(null,G__28304));
})(),(function (){var G__28305 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28305) : g.call(null,G__28305));
})()],null));
});
var G__28346__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28306 = x;
var G__28307 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28306,G__28307) : f.call(null,G__28306,G__28307));
})(),(function (){var G__28308 = x;
var G__28309 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28308,G__28309) : g.call(null,G__28308,G__28309));
})()],null));
});
var G__28346__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28310 = x;
var G__28311 = y;
var G__28312 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28310,G__28311,G__28312) : f.call(null,G__28310,G__28311,G__28312));
})(),(function (){var G__28313 = x;
var G__28314 = y;
var G__28315 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28313,G__28314,G__28315) : g.call(null,G__28313,G__28314,G__28315));
})()],null));
});
var G__28346__4 = (function() { 
var G__28347__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__28347 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28348__i = 0, G__28348__a = new Array(arguments.length -  3);
while (G__28348__i < G__28348__a.length) {G__28348__a[G__28348__i] = arguments[G__28348__i + 3]; ++G__28348__i;}
  args = new cljs.core.IndexedSeq(G__28348__a,0);
} 
return G__28347__delegate.call(this,x,y,z,args);};
G__28347.cljs$lang$maxFixedArity = 3;
G__28347.cljs$lang$applyTo = (function (arglist__28349){
var x = cljs.core.first(arglist__28349);
arglist__28349 = cljs.core.next(arglist__28349);
var y = cljs.core.first(arglist__28349);
arglist__28349 = cljs.core.next(arglist__28349);
var z = cljs.core.first(arglist__28349);
var args = cljs.core.rest(arglist__28349);
return G__28347__delegate(x,y,z,args);
});
G__28347.cljs$core$IFn$_invoke$arity$variadic = G__28347__delegate;
return G__28347;
})()
;
G__28346 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28346__0.call(this);
case 1:
return G__28346__1.call(this,x);
case 2:
return G__28346__2.call(this,x,y);
case 3:
return G__28346__3.call(this,x,y,z);
default:
var G__28350 = null;
if (arguments.length > 3) {
var G__28351__i = 0, G__28351__a = new Array(arguments.length -  3);
while (G__28351__i < G__28351__a.length) {G__28351__a[G__28351__i] = arguments[G__28351__i + 3]; ++G__28351__i;}
G__28350 = new cljs.core.IndexedSeq(G__28351__a,0);
}
return G__28346__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28350);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28346.cljs$lang$maxFixedArity = 3;
G__28346.cljs$lang$applyTo = G__28346__4.cljs$lang$applyTo;
G__28346.cljs$core$IFn$_invoke$arity$0 = G__28346__0;
G__28346.cljs$core$IFn$_invoke$arity$1 = G__28346__1;
G__28346.cljs$core$IFn$_invoke$arity$2 = G__28346__2;
G__28346.cljs$core$IFn$_invoke$arity$3 = G__28346__3;
G__28346.cljs$core$IFn$_invoke$arity$variadic = G__28346__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28346;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__28352 = null;
var G__28352__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__28352__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28316 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28316) : f.call(null,G__28316));
})(),(function (){var G__28317 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28317) : g.call(null,G__28317));
})(),(function (){var G__28318 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__28318) : h.call(null,G__28318));
})()],null));
});
var G__28352__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28319 = x;
var G__28320 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28319,G__28320) : f.call(null,G__28319,G__28320));
})(),(function (){var G__28321 = x;
var G__28322 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28321,G__28322) : g.call(null,G__28321,G__28322));
})(),(function (){var G__28323 = x;
var G__28324 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__28323,G__28324) : h.call(null,G__28323,G__28324));
})()],null));
});
var G__28352__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28325 = x;
var G__28326 = y;
var G__28327 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28325,G__28326,G__28327) : f.call(null,G__28325,G__28326,G__28327));
})(),(function (){var G__28328 = x;
var G__28329 = y;
var G__28330 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28328,G__28329,G__28330) : g.call(null,G__28328,G__28329,G__28330));
})(),(function (){var G__28331 = x;
var G__28332 = y;
var G__28333 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__28331,G__28332,G__28333) : h.call(null,G__28331,G__28332,G__28333));
})()],null));
});
var G__28352__4 = (function() { 
var G__28353__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__28353 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28354__i = 0, G__28354__a = new Array(arguments.length -  3);
while (G__28354__i < G__28354__a.length) {G__28354__a[G__28354__i] = arguments[G__28354__i + 3]; ++G__28354__i;}
  args = new cljs.core.IndexedSeq(G__28354__a,0);
} 
return G__28353__delegate.call(this,x,y,z,args);};
G__28353.cljs$lang$maxFixedArity = 3;
G__28353.cljs$lang$applyTo = (function (arglist__28355){
var x = cljs.core.first(arglist__28355);
arglist__28355 = cljs.core.next(arglist__28355);
var y = cljs.core.first(arglist__28355);
arglist__28355 = cljs.core.next(arglist__28355);
var z = cljs.core.first(arglist__28355);
var args = cljs.core.rest(arglist__28355);
return G__28353__delegate(x,y,z,args);
});
G__28353.cljs$core$IFn$_invoke$arity$variadic = G__28353__delegate;
return G__28353;
})()
;
G__28352 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28352__0.call(this);
case 1:
return G__28352__1.call(this,x);
case 2:
return G__28352__2.call(this,x,y);
case 3:
return G__28352__3.call(this,x,y,z);
default:
var G__28356 = null;
if (arguments.length > 3) {
var G__28357__i = 0, G__28357__a = new Array(arguments.length -  3);
while (G__28357__i < G__28357__a.length) {G__28357__a[G__28357__i] = arguments[G__28357__i + 3]; ++G__28357__i;}
G__28356 = new cljs.core.IndexedSeq(G__28357__a,0);
}
return G__28352__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28356);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28352.cljs$lang$maxFixedArity = 3;
G__28352.cljs$lang$applyTo = G__28352__4.cljs$lang$applyTo;
G__28352.cljs$core$IFn$_invoke$arity$0 = G__28352__0;
G__28352.cljs$core$IFn$_invoke$arity$1 = G__28352__1;
G__28352.cljs$core$IFn$_invoke$arity$2 = G__28352__2;
G__28352.cljs$core$IFn$_invoke$arity$3 = G__28352__3;
G__28352.cljs$core$IFn$_invoke$arity$variadic = G__28352__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28352;
})()
});
var juxt__4 = (function() { 
var G__28358__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__28359 = null;
var G__28359__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28246_SHARP_,p2__28247_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28246_SHARP_,(function (){return (p2__28247_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__28247_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__28247_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28359__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28248_SHARP_,p2__28249_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28248_SHARP_,(function (){var G__28334 = x;
return (p2__28249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__28249_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28334) : p2__28249_SHARP_.call(null,G__28334));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28359__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28250_SHARP_,p2__28251_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28250_SHARP_,(function (){var G__28335 = x;
var G__28336 = y;
return (p2__28251_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__28251_SHARP_.cljs$core$IFn$_invoke$arity$2(G__28335,G__28336) : p2__28251_SHARP_.call(null,G__28335,G__28336));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28359__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28252_SHARP_,p2__28253_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28252_SHARP_,(function (){var G__28337 = x;
var G__28338 = y;
var G__28339 = z;
return (p2__28253_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__28253_SHARP_.cljs$core$IFn$_invoke$arity$3(G__28337,G__28338,G__28339) : p2__28253_SHARP_.call(null,G__28337,G__28338,G__28339));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28359__4 = (function() { 
var G__28360__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28254_SHARP_,p2__28255_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28254_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__28255_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__28360 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28361__i = 0, G__28361__a = new Array(arguments.length -  3);
while (G__28361__i < G__28361__a.length) {G__28361__a[G__28361__i] = arguments[G__28361__i + 3]; ++G__28361__i;}
  args = new cljs.core.IndexedSeq(G__28361__a,0);
} 
return G__28360__delegate.call(this,x,y,z,args);};
G__28360.cljs$lang$maxFixedArity = 3;
G__28360.cljs$lang$applyTo = (function (arglist__28362){
var x = cljs.core.first(arglist__28362);
arglist__28362 = cljs.core.next(arglist__28362);
var y = cljs.core.first(arglist__28362);
arglist__28362 = cljs.core.next(arglist__28362);
var z = cljs.core.first(arglist__28362);
var args = cljs.core.rest(arglist__28362);
return G__28360__delegate(x,y,z,args);
});
G__28360.cljs$core$IFn$_invoke$arity$variadic = G__28360__delegate;
return G__28360;
})()
;
G__28359 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28359__0.call(this);
case 1:
return G__28359__1.call(this,x);
case 2:
return G__28359__2.call(this,x,y);
case 3:
return G__28359__3.call(this,x,y,z);
default:
var G__28363 = null;
if (arguments.length > 3) {
var G__28364__i = 0, G__28364__a = new Array(arguments.length -  3);
while (G__28364__i < G__28364__a.length) {G__28364__a[G__28364__i] = arguments[G__28364__i + 3]; ++G__28364__i;}
G__28363 = new cljs.core.IndexedSeq(G__28364__a,0);
}
return G__28359__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28359.cljs$lang$maxFixedArity = 3;
G__28359.cljs$lang$applyTo = G__28359__4.cljs$lang$applyTo;
G__28359.cljs$core$IFn$_invoke$arity$0 = G__28359__0;
G__28359.cljs$core$IFn$_invoke$arity$1 = G__28359__1;
G__28359.cljs$core$IFn$_invoke$arity$2 = G__28359__2;
G__28359.cljs$core$IFn$_invoke$arity$3 = G__28359__3;
G__28359.cljs$core$IFn$_invoke$arity$variadic = G__28359__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28359;
})()
;})(fs__$1))
};
var G__28358 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__28365__i = 0, G__28365__a = new Array(arguments.length -  3);
while (G__28365__i < G__28365__a.length) {G__28365__a[G__28365__i] = arguments[G__28365__i + 3]; ++G__28365__i;}
  fs = new cljs.core.IndexedSeq(G__28365__a,0);
} 
return G__28358__delegate.call(this,f,g,h,fs);};
G__28358.cljs$lang$maxFixedArity = 3;
G__28358.cljs$lang$applyTo = (function (arglist__28366){
var f = cljs.core.first(arglist__28366);
arglist__28366 = cljs.core.next(arglist__28366);
var g = cljs.core.first(arglist__28366);
arglist__28366 = cljs.core.next(arglist__28366);
var h = cljs.core.first(arglist__28366);
var fs = cljs.core.rest(arglist__28366);
return G__28358__delegate(f,g,h,fs);
});
G__28358.cljs$core$IFn$_invoke$arity$variadic = G__28358__delegate;
return G__28358;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__28367 = null;
if (arguments.length > 3) {
var G__28368__i = 0, G__28368__a = new Array(arguments.length -  3);
while (G__28368__i < G__28368__a.length) {G__28368__a[G__28368__i] = arguments[G__28368__i + 3]; ++G__28368__i;}
G__28367 = new cljs.core.IndexedSeq(G__28368__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__28367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__28369 = cljs.core.next(coll);
coll = G__28369;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__28370 = (n - (1));
var G__28371 = cljs.core.next(coll);
n = G__28370;
coll = G__28371;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__28375 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28375,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28375,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28375,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_28383 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__28384_28390 = cljs.core.first(coll);
var G__28385_28391 = writer;
var G__28386_28392 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28384_28390,G__28385_28391,G__28386_28392) : print_one.call(null,G__28384_28390,G__28385_28391,G__28386_28392));
} else {
}

var coll_28393__$1 = cljs.core.next(coll);
var n_28394 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_28393__$1) && (((n_28394 == null)) || (!((n_28394 === (0)))))){
cljs.core._write(writer,sep);

var G__28387_28395 = cljs.core.first(coll_28393__$1);
var G__28388_28396 = writer;
var G__28389_28397 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28387_28395,G__28388_28396,G__28389_28397) : print_one.call(null,G__28387_28395,G__28388_28396,G__28389_28397));

var G__28398 = cljs.core.next(coll_28393__$1);
var G__28399 = (n_28394 - (1));
coll_28393__$1 = G__28398;
n_28394 = G__28399;
continue;
} else {
if((cljs.core.seq(coll_28393__$1)) && ((n_28394 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_28383;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__28404 = cljs.core.seq(ss);
var chunk__28405 = null;
var count__28406 = (0);
var i__28407 = (0);
while(true){
if((i__28407 < count__28406)){
var s = chunk__28405.cljs$core$IIndexed$_nth$arity$2(null,i__28407);
cljs.core._write(writer,s);

var G__28408 = seq__28404;
var G__28409 = chunk__28405;
var G__28410 = count__28406;
var G__28411 = (i__28407 + (1));
seq__28404 = G__28408;
chunk__28405 = G__28409;
count__28406 = G__28410;
i__28407 = G__28411;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28404);
if(temp__4126__auto__){
var seq__28404__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28404__$1)){
var c__5038__auto__ = cljs.core.chunk_first(seq__28404__$1);
var G__28412 = cljs.core.chunk_rest(seq__28404__$1);
var G__28413 = c__5038__auto__;
var G__28414 = cljs.core.count(c__5038__auto__);
var G__28415 = (0);
seq__28404 = G__28412;
chunk__28405 = G__28413;
count__28406 = G__28414;
i__28407 = G__28415;
continue;
} else {
var s = cljs.core.first(seq__28404__$1);
cljs.core._write(writer,s);

var G__28416 = cljs.core.next(seq__28404__$1);
var G__28417 = null;
var G__28418 = (0);
var G__28419 = (0);
seq__28404 = G__28416;
chunk__28405 = G__28417;
count__28406 = G__28418;
i__28407 = G__28419;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__28420__i = 0, G__28420__a = new Array(arguments.length -  1);
while (G__28420__i < G__28420__a.length) {G__28420__a[G__28420__i] = arguments[G__28420__i + 1]; ++G__28420__i;}
  ss = new cljs.core.IndexedSeq(G__28420__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__28421){
var writer = cljs.core.first(arglist__28421);
var ss = cljs.core.rest(arglist__28421);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj28423 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj28423;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__28426 = "[\\\\\"\b\f\n\r\t]";
var G__28427 = "g";
return RegExp(G__28426,G__28427);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__4239__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__4239__auto__)){
var and__4239__auto____$1 = (function (){var G__28441 = obj;
if(G__28441){
var bit__4932__auto__ = (G__28441.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4932__auto__) || (G__28441.cljs$core$IMeta$)){
return true;
} else {
if((!G__28441.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28441);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28441);
}
})();
if(and__4239__auto____$1){
return cljs.core.meta(obj);
} else {
return and__4239__auto____$1;
}
} else {
return and__4239__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__28442 = obj;
if(G__28442){
var bit__4925__auto__ = (G__28442.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4925__auto__) || (G__28442.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__28443 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__28444 = pr_writer;
var G__28445 = writer;
var G__28446 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__28443,G__28444,G__28445,G__28446) : cljs.core.print_map.call(null,G__28443,G__28444,G__28445,G__28446));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__28447 = obj;
return goog.isString(G__28447);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__28449 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__28449;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__28448 = obj;
if(G__28448){
var bit__4932__auto__ = (G__28448.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4932__auto__) || (G__28448.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__28448.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__28448);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__28448);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__28454 = cljs.core.seq(cljs.core.next(objs));
var chunk__28455 = null;
var count__28456 = (0);
var i__28457 = (0);
while(true){
if((i__28457 < count__28456)){
var obj = chunk__28455.cljs$core$IIndexed$_nth$arity$2(null,i__28457);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__28458 = seq__28454;
var G__28459 = chunk__28455;
var G__28460 = count__28456;
var G__28461 = (i__28457 + (1));
seq__28454 = G__28458;
chunk__28455 = G__28459;
count__28456 = G__28460;
i__28457 = G__28461;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28454);
if(temp__4126__auto__){
var seq__28454__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28454__$1)){
var c__5038__auto__ = cljs.core.chunk_first(seq__28454__$1);
var G__28462 = cljs.core.chunk_rest(seq__28454__$1);
var G__28463 = c__5038__auto__;
var G__28464 = cljs.core.count(c__5038__auto__);
var G__28465 = (0);
seq__28454 = G__28462;
chunk__28455 = G__28463;
count__28456 = G__28464;
i__28457 = G__28465;
continue;
} else {
var obj = cljs.core.first(seq__28454__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__28466 = cljs.core.next(seq__28454__$1);
var G__28467 = null;
var G__28468 = (0);
var G__28469 = (0);
seq__28454 = G__28466;
chunk__28455 = G__28467;
count__28456 = G__28468;
i__28457 = G__28469;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28470__i = 0, G__28470__a = new Array(arguments.length -  0);
while (G__28470__i < G__28470__a.length) {G__28470__a[G__28470__i] = arguments[G__28470__i + 0]; ++G__28470__i;}
  objs = new cljs.core.IndexedSeq(G__28470__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__28471){
var objs = cljs.core.seq(arglist__28471);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28472__i = 0, G__28472__a = new Array(arguments.length -  0);
while (G__28472__i < G__28472__a.length) {G__28472__a[G__28472__i] = arguments[G__28472__i + 0]; ++G__28472__i;}
  objs = new cljs.core.IndexedSeq(G__28472__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__28473){
var objs = cljs.core.seq(arglist__28473);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28474__i = 0, G__28474__a = new Array(arguments.length -  0);
while (G__28474__i < G__28474__a.length) {G__28474__a[G__28474__i] = arguments[G__28474__i + 0]; ++G__28474__i;}
  objs = new cljs.core.IndexedSeq(G__28474__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__28475){
var objs = cljs.core.seq(arglist__28475);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28476__i = 0, G__28476__a = new Array(arguments.length -  0);
while (G__28476__i < G__28476__a.length) {G__28476__a[G__28476__i] = arguments[G__28476__i + 0]; ++G__28476__i;}
  objs = new cljs.core.IndexedSeq(G__28476__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__28477){
var objs = cljs.core.seq(arglist__28477);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28478__i = 0, G__28478__a = new Array(arguments.length -  0);
while (G__28478__i < G__28478__a.length) {G__28478__a[G__28478__i] = arguments[G__28478__i + 0]; ++G__28478__i;}
  objs = new cljs.core.IndexedSeq(G__28478__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__28479){
var objs = cljs.core.seq(arglist__28479);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28480__i = 0, G__28480__a = new Array(arguments.length -  0);
while (G__28480__i < G__28480__a.length) {G__28480__a[G__28480__i] = arguments[G__28480__i + 0]; ++G__28480__i;}
  objs = new cljs.core.IndexedSeq(G__28480__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__28481){
var objs = cljs.core.seq(arglist__28481);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28482__i = 0, G__28482__a = new Array(arguments.length -  0);
while (G__28482__i < G__28482__a.length) {G__28482__a[G__28482__i] = arguments[G__28482__i + 0]; ++G__28482__i;}
  objs = new cljs.core.IndexedSeq(G__28482__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__28483){
var objs = cljs.core.seq(arglist__28483);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28484__i = 0, G__28484__a = new Array(arguments.length -  0);
while (G__28484__i < G__28484__a.length) {G__28484__a[G__28484__i] = arguments[G__28484__i + 0]; ++G__28484__i;}
  objs = new cljs.core.IndexedSeq(G__28484__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__28485){
var objs = cljs.core.seq(arglist__28485);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__28492_28498 = cljs.core.key(e);
var G__28493_28499 = w;
var G__28494_28500 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28492_28498,G__28493_28499,G__28494_28500) : print_one.call(null,G__28492_28498,G__28493_28499,G__28494_28500));

cljs.core._write(w," ");

var G__28495 = cljs.core.val(e);
var G__28496 = w;
var G__28497 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28495,G__28496,G__28497) : print_one.call(null,G__28495,G__28496,G__28497));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__28501__i = 0, G__28501__a = new Array(arguments.length -  2);
while (G__28501__i < G__28501__a.length) {G__28501__a[G__28501__i] = arguments[G__28501__i + 2]; ++G__28501__i;}
  args = new cljs.core.IndexedSeq(G__28501__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__28502){
var iref = cljs.core.first(arglist__28502);
arglist__28502 = cljs.core.next(arglist__28502);
var f = cljs.core.first(arglist__28502);
var args = cljs.core.rest(arglist__28502);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__28505 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28505) : cljs.core.atom.call(null,G__28505));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__28507 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28507) : cljs.core.deref.call(null,G__28507));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__28508_SHARP_,p2__28509_SHARP_){
var ret = (function (){var G__28512 = p1__28508_SHARP_;
var G__28513 = p2__28509_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28512,G__28513) : rf.call(null,G__28512,G__28513));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__28516 = null;
var G__28516__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28516__1 = (function (result){
var G__28515 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28515) : rf.call(null,G__28515));
});
var G__28516__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__28516 = function(result,input){
switch(arguments.length){
case 0:
return G__28516__0.call(this);
case 1:
return G__28516__1.call(this,result);
case 2:
return G__28516__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28516.cljs$core$IFn$_invoke$arity$0 = G__28516__0;
G__28516.cljs$core$IFn$_invoke$arity$1 = G__28516__1;
G__28516.cljs$core$IFn$_invoke$arity$2 = G__28516__2;
return G__28516;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (pa){
return (function() {
var G__28525 = null;
var G__28525__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28525__1 = (function (result){
var G__28521 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28521) : rf.call(null,G__28521));
});
var G__28525__2 = (function (result,input){
var prior = (function (){var G__28522 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28522) : cljs.core.deref.call(null,G__28522));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__28523 = result;
var G__28524 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28523,G__28524) : rf.call(null,G__28523,G__28524));
}
});
G__28525 = function(result,input){
switch(arguments.length){
case 0:
return G__28525__0.call(this);
case 1:
return G__28525__1.call(this,result);
case 2:
return G__28525__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28525.cljs$core$IFn$_invoke$arity$0 = G__28525__0;
G__28525.cljs$core$IFn$_invoke$arity$1 = G__28525__1;
G__28525.cljs$core$IFn$_invoke$arity$2 = G__28525__2;
return G__28525;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5229__auto__ = this;
return cljs.core.es6_iterator(this__5229__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28527_SHARP_,p2__28526_SHARP_){
var G__28529 = p2__28526_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__28529) : proc.call(null,G__28529));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj28531 = {};
return obj28531;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__4239__auto__ = x;
if(and__4239__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__4239__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4895__auto__ = (((x == null))?null:x);
return (function (){var or__4251__auto__ = (cljs.core._clj__GT_js[(function (){var G__28535 = x__4895__auto__;
return goog.typeOf(G__28535);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__4239__auto__ = x;
if(and__4239__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__4239__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4895__auto__ = (((x == null))?null:x);
return (function (){var or__4251__auto__ = (cljs.core._key__GT_js[(function (){var G__28539 = x__4895__auto__;
return goog.typeOf(G__28539);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__28542 = k;
if(G__28542){
var bit__4932__auto__ = null;
if(cljs.core.truth_((function (){var or__4251__auto__ = bit__4932__auto__;
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return G__28542.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__28542.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28542);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28542);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__28543 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__28543) : cljs.core.clj__GT_js.call(null,G__28543));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__28559 = x;
if(G__28559){
var bit__4932__auto__ = null;
if(cljs.core.truth_((function (){var or__4251__auto__ = bit__4932__auto__;
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return G__28559.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__28559.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28559);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28559);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj28561 = {};
return obj28561;
})();
var seq__28562_28572 = cljs.core.seq(x);
var chunk__28563_28573 = null;
var count__28564_28574 = (0);
var i__28565_28575 = (0);
while(true){
if((i__28565_28575 < count__28564_28574)){
var vec__28566_28576 = chunk__28563_28573.cljs$core$IIndexed$_nth$arity$2(null,i__28565_28575);
var k_28577 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28566_28576,(0),null);
var v_28578 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28566_28576,(1),null);
(m[cljs.core.key__GT_js(k_28577)] = clj__GT_js(v_28578));

var G__28579 = seq__28562_28572;
var G__28580 = chunk__28563_28573;
var G__28581 = count__28564_28574;
var G__28582 = (i__28565_28575 + (1));
seq__28562_28572 = G__28579;
chunk__28563_28573 = G__28580;
count__28564_28574 = G__28581;
i__28565_28575 = G__28582;
continue;
} else {
var temp__4126__auto___28583 = cljs.core.seq(seq__28562_28572);
if(temp__4126__auto___28583){
var seq__28562_28584__$1 = temp__4126__auto___28583;
if(cljs.core.chunked_seq_QMARK_(seq__28562_28584__$1)){
var c__5038__auto___28585 = cljs.core.chunk_first(seq__28562_28584__$1);
var G__28586 = cljs.core.chunk_rest(seq__28562_28584__$1);
var G__28587 = c__5038__auto___28585;
var G__28588 = cljs.core.count(c__5038__auto___28585);
var G__28589 = (0);
seq__28562_28572 = G__28586;
chunk__28563_28573 = G__28587;
count__28564_28574 = G__28588;
i__28565_28575 = G__28589;
continue;
} else {
var vec__28567_28590 = cljs.core.first(seq__28562_28584__$1);
var k_28591 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28567_28590,(0),null);
var v_28592 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28567_28590,(1),null);
(m[cljs.core.key__GT_js(k_28591)] = clj__GT_js(v_28592));

var G__28593 = cljs.core.next(seq__28562_28584__$1);
var G__28594 = null;
var G__28595 = (0);
var G__28596 = (0);
seq__28562_28572 = G__28593;
chunk__28563_28573 = G__28594;
count__28564_28574 = G__28595;
i__28565_28575 = G__28596;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__28568_28597 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__28569_28598 = null;
var count__28570_28599 = (0);
var i__28571_28600 = (0);
while(true){
if((i__28571_28600 < count__28570_28599)){
var x_28601__$1 = chunk__28569_28598.cljs$core$IIndexed$_nth$arity$2(null,i__28571_28600);
arr.push(x_28601__$1);

var G__28602 = seq__28568_28597;
var G__28603 = chunk__28569_28598;
var G__28604 = count__28570_28599;
var G__28605 = (i__28571_28600 + (1));
seq__28568_28597 = G__28602;
chunk__28569_28598 = G__28603;
count__28570_28599 = G__28604;
i__28571_28600 = G__28605;
continue;
} else {
var temp__4126__auto___28606 = cljs.core.seq(seq__28568_28597);
if(temp__4126__auto___28606){
var seq__28568_28607__$1 = temp__4126__auto___28606;
if(cljs.core.chunked_seq_QMARK_(seq__28568_28607__$1)){
var c__5038__auto___28608 = cljs.core.chunk_first(seq__28568_28607__$1);
var G__28609 = cljs.core.chunk_rest(seq__28568_28607__$1);
var G__28610 = c__5038__auto___28608;
var G__28611 = cljs.core.count(c__5038__auto___28608);
var G__28612 = (0);
seq__28568_28597 = G__28609;
chunk__28569_28598 = G__28610;
count__28570_28599 = G__28611;
i__28571_28600 = G__28612;
continue;
} else {
var x_28613__$1 = cljs.core.first(seq__28568_28607__$1);
arr.push(x_28613__$1);

var G__28614 = cljs.core.next(seq__28568_28607__$1);
var G__28615 = null;
var G__28616 = (0);
var G__28617 = (0);
seq__28568_28597 = G__28614;
chunk__28569_28598 = G__28615;
count__28570_28599 = G__28616;
i__28571_28600 = G__28617;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj28619 = {};
return obj28619;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__4239__auto__ = x;
if(and__4239__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__4239__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4895__auto__ = (((x == null))?null:x);
return (function (){var or__4251__auto__ = (cljs.core._js__GT_clj[(function (){var G__28623 = x__4895__auto__;
return goog.typeOf(G__28623);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$16,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__28680__delegate = function (x,opts){
var map__28653 = opts;
var map__28653__$1 = ((cljs.core.seq_QMARK_(map__28653))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28653):map__28653);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28653__$1,cljs.core.constant$keyword$16);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__28653,map__28653__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__28669 = x__$1;
if(G__28669){
var bit__4932__auto__ = null;
if(cljs.core.truth_((function (){var or__4251__auto__ = bit__4932__auto__;
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return G__28669.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__28669.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28669);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28669);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__5007__auto__ = ((function (map__28653,map__28653__$1,keywordize_keys,keyfn){
return (function iter__28670(s__28671){
return (new cljs.core.LazySeq(null,((function (map__28653,map__28653__$1,keywordize_keys,keyfn){
return (function (){
var s__28671__$1 = s__28671;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__28671__$1);
if(temp__4126__auto__){
var s__28671__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__28671__$2)){
var c__5005__auto__ = cljs.core.chunk_first(s__28671__$2);
var size__5006__auto__ = cljs.core.count(c__5005__auto__);
var b__28673 = cljs.core.chunk_buffer(size__5006__auto__);
if((function (){var i__28672 = (0);
while(true){
if((i__28672 < size__5006__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5005__auto__,i__28672);
cljs.core.chunk_append(b__28673,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28678 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28678) : keyfn.call(null,G__28678));
})(),thisfn((x__$1[k]))], null));

var G__28681 = (i__28672 + (1));
i__28672 = G__28681;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__28673),iter__28670(cljs.core.chunk_rest(s__28671__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__28673),null);
}
} else {
var k = cljs.core.first(s__28671__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28679 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28679) : keyfn.call(null,G__28679));
})(),thisfn((x__$1[k]))], null),iter__28670(cljs.core.rest(s__28671__$2)));
}
} else {
return null;
}
break;
}
});})(map__28653,map__28653__$1,keywordize_keys,keyfn))
,null,null));
});})(map__28653,map__28653__$1,keywordize_keys,keyfn))
;
return iter__5007__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__28653,map__28653__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__28680 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__28682__i = 0, G__28682__a = new Array(arguments.length -  1);
while (G__28682__i < G__28682__a.length) {G__28682__a[G__28682__i] = arguments[G__28682__i + 1]; ++G__28682__i;}
  opts = new cljs.core.IndexedSeq(G__28682__a,0);
} 
return G__28680__delegate.call(this,x,opts);};
G__28680.cljs$lang$maxFixedArity = 1;
G__28680.cljs$lang$applyTo = (function (arglist__28683){
var x = cljs.core.first(arglist__28683);
var opts = cljs.core.rest(arglist__28683);
return G__28680__delegate(x,opts);
});
G__28680.cljs$core$IFn$_invoke$arity$variadic = G__28680__delegate;
return G__28680;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__28684 = null;
if (arguments.length > 1) {
var G__28685__i = 0, G__28685__a = new Array(arguments.length -  1);
while (G__28685__i < G__28685__a.length) {G__28685__a[G__28685__i] = arguments[G__28685__i + 1]; ++G__28685__i;}
G__28684 = new cljs.core.IndexedSeq(G__28685__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__28688 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28688) : cljs.core.atom.call(null,G__28688));
})();
return ((function (mem){
return (function() { 
var G__28690__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__28689 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28689) : cljs.core.deref.call(null,G__28689));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__28690 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28691__i = 0, G__28691__a = new Array(arguments.length -  0);
while (G__28691__i < G__28691__a.length) {G__28691__a[G__28691__i] = arguments[G__28691__i + 0]; ++G__28691__i;}
  args = new cljs.core.IndexedSeq(G__28691__a,0);
} 
return G__28690__delegate.call(this,args);};
G__28690.cljs$lang$maxFixedArity = 0;
G__28690.cljs$lang$applyTo = (function (arglist__28692){
var args = cljs.core.seq(arglist__28692);
return G__28690__delegate(args);
});
G__28690.cljs$core$IFn$_invoke$arity$variadic = G__28690__delegate;
return G__28690;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__28694 = ret;
f = G__28694;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__28695__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__28695 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28696__i = 0, G__28696__a = new Array(arguments.length -  1);
while (G__28696__i < G__28696__a.length) {G__28696__a[G__28696__i] = arguments[G__28696__i + 1]; ++G__28696__i;}
  args = new cljs.core.IndexedSeq(G__28696__a,0);
} 
return G__28695__delegate.call(this,f,args);};
G__28695.cljs$lang$maxFixedArity = 1;
G__28695.cljs$lang$applyTo = (function (arglist__28697){
var f = cljs.core.first(arglist__28697);
var args = cljs.core.rest(arglist__28697);
return G__28695__delegate(f,args);
});
G__28695.cljs$core$IFn$_invoke$arity$variadic = G__28695__delegate;
return G__28695;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__28698 = null;
if (arguments.length > 1) {
var G__28699__i = 0, G__28699__a = new Array(arguments.length -  1);
while (G__28699__i < G__28699__a.length) {G__28699__a[G__28699__i] = arguments[G__28699__i + 1]; ++G__28699__i;}
G__28698 = new cljs.core.IndexedSeq(G__28699__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__28698);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__28702 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__28702) : Math.floor.call(null,G__28702));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__28704 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28704) : f.call(null,G__28704));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$18,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$19,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__28706 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28706) : cljs.core.atom.call(null,G__28706));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28707__i = 0, G__28707__a = new Array(arguments.length -  1);
while (G__28707__i < G__28707__a.length) {G__28707__a[G__28707__i] = arguments[G__28707__i + 1]; ++G__28707__i;}
  args = new cljs.core.IndexedSeq(G__28707__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__28708){
var f = cljs.core.first(arglist__28708);
var args = cljs.core.rest(arglist__28708);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28773 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28773) : cljs.core.deref.call(null,G__28773));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__4251__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
var and__4239__auto__ = cljs.core.vector_QMARK_(parent);
if(and__4239__auto__){
var and__4239__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__4239__auto____$1){
var and__4239__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__4239__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__28798 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__28796 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__28796) : child.call(null,G__28796));
})(),(function (){var G__28797 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__28797) : parent.call(null,G__28797));
})());
var G__28799 = (i + (1));
ret = G__28798;
i = G__28799;
continue;
}
break;
}
} else {
return and__4239__auto____$2;
}
} else {
return and__4239__auto____$1;
}
} else {
return and__4239__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__28803 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28803) : cljs.core.deref.call(null,G__28803));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__28807 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28807) : cljs.core.deref.call(null,G__28807));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__28811 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28811) : cljs.core.deref.call(null,G__28811));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__28820 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__28820) : targets.call(null,G__28820));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__28821 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__28821) : sources.call(null,G__28821));
})()));
});})(tp,td,ta))
;
var or__4251__auto__ = ((cljs.core.contains_QMARK_((function (){var G__28825 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__28825) : tp.call(null,G__28825));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__28826 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28826) : ta.call(null,G__28826));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__28827 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28827) : ta.call(null,G__28827));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$19,tf(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$18,tf(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__28834 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28834) : parentMap.call(null,G__28834));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__28835 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28835) : parentMap.call(null,G__28835));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__28828_SHARP_){
return cljs.core.cons(cljs.core.first(p1__28828_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__28828_SHARP_),cljs.core.second(p1__28828_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__28836 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28836) : parentMap.call(null,G__28836));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__28829_SHARP_,p2__28830_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__28829_SHARP_,p2__28830_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__28839 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28839) : cljs.core.deref.call(null,G__28839));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__28840 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28840) : cljs.core.deref.call(null,G__28840));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__28856 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28856) : cljs.core.deref.call(null,G__28856));
})().call(null,x);
var or__4251__auto__ = (cljs.core.truth_((function (){var and__4239__auto__ = xprefs;
if(cljs.core.truth_(and__4239__auto__)){
var G__28858 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__28858) : xprefs.call(null,G__28858));
} else {
return and__4239__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__28859 = cljs.core.rest(ps);
ps = G__28859;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4251__auto____$1)){
return or__4251__auto____$1;
} else {
var or__4251__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__28860 = cljs.core.rest(ps);
ps = G__28860;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4251__auto____$2)){
return or__4251__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__4251__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__4251__auto__)){
return or__4251__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__28874){
var vec__28875 = p__28874;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28875,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28875,(1),null);
var e = vec__28875;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28876 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28876) : cljs.core.deref.call(null,G__28876));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__4251__auto__ = (be == null);
if(or__4251__auto__){
return or__4251__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__28877 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28877) : cljs.core.deref.call(null,G__28877));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28878 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28878) : cljs.core.deref.call(null,G__28878));
})(),(function (){var G__28879 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28879) : cljs.core.deref.call(null,G__28879));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj28881 = {};
return obj28881;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__4239__auto__ = mf;
if(and__4239__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__4239__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4895__auto__ = (((mf == null))?null:mf);
return (function (){var or__4251__auto__ = (cljs.core._reset[(function (){var G__28885 = x__4895__auto__;
return goog.typeOf(G__28885);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._reset["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__4239__auto__ = mf;
if(and__4239__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__4239__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4895__auto__ = (((mf == null))?null:mf);
return (function (){var or__4251__auto__ = (cljs.core._add_method[(function (){var G__28889 = x__4895__auto__;
return goog.typeOf(G__28889);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._add_method["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__4239__auto__ = mf;
if(and__4239__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__4239__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4895__auto__ = (((mf == null))?null:mf);
return (function (){var or__4251__auto__ = (cljs.core._remove_method[(function (){var G__28893 = x__4895__auto__;
return goog.typeOf(G__28893);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._remove_method["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__4239__auto__ = mf;
if(and__4239__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__4239__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4895__auto__ = (((mf == null))?null:mf);
return (function (){var or__4251__auto__ = (cljs.core._prefer_method[(function (){var G__28897 = x__4895__auto__;
return goog.typeOf(G__28897);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__4239__auto__ = mf;
if(and__4239__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__4239__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4895__auto__ = (((mf == null))?null:mf);
return (function (){var or__4251__auto__ = (cljs.core._get_method[(function (){var G__28901 = x__4895__auto__;
return goog.typeOf(G__28901);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._get_method["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__4239__auto__ = mf;
if(and__4239__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__4239__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4895__auto__ = (((mf == null))?null:mf);
return (function (){var or__4251__auto__ = (cljs.core._methods[(function (){var G__28905 = x__4895__auto__;
return goog.typeOf(G__28905);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._methods["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__4239__auto__ = mf;
if(and__4239__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__4239__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4895__auto__ = (((mf == null))?null:mf);
return (function (){var or__4251__auto__ = (cljs.core._prefers[(function (){var G__28909 = x__4895__auto__;
return goog.typeOf(G__28909);
})()]);
if(or__4251__auto__){
return or__4251__auto__;
} else {
var or__4251__auto____$1 = (cljs.core._prefers["_"]);
if(or__4251__auto____$1){
return or__4251__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28911 = this$__$1;
return goog.getUid(G__28911);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28912 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28912) : cljs.core.deref.call(null,G__28912));
})(),(function (){var G__28913 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28913) : cljs.core.deref.call(null,G__28913));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__28914 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28914) : cljs.core.deref.call(null,G__28914));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__28915 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28915) : cljs.core.deref.call(null,G__28915));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28916 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28916) : cljs.core.deref.call(null,G__28916));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28917 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28917) : cljs.core.deref.call(null,G__28917));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__29758 = null;
var G__29758__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__29758__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28918 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28918) : self__.dispatch_fn.call(null,G__28918));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28919 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28919) : target_fn.call(null,G__28919));
});
var G__29758__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28920 = a;
var G__28921 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28920,G__28921) : self__.dispatch_fn.call(null,G__28920,G__28921));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28922 = a;
var G__28923 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28922,G__28923) : target_fn.call(null,G__28922,G__28923));
});
var G__29758__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28924 = a;
var G__28925 = b;
var G__28926 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28924,G__28925,G__28926) : self__.dispatch_fn.call(null,G__28924,G__28925,G__28926));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28927 = a;
var G__28928 = b;
var G__28929 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28927,G__28928,G__28929) : target_fn.call(null,G__28927,G__28928,G__28929));
});
var G__29758__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28930 = a;
var G__28931 = b;
var G__28932 = c;
var G__28933 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28930,G__28931,G__28932,G__28933) : self__.dispatch_fn.call(null,G__28930,G__28931,G__28932,G__28933));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28934 = a;
var G__28935 = b;
var G__28936 = c;
var G__28937 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28934,G__28935,G__28936,G__28937) : target_fn.call(null,G__28934,G__28935,G__28936,G__28937));
});
var G__29758__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28938 = a;
var G__28939 = b;
var G__28940 = c;
var G__28941 = d;
var G__28942 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28938,G__28939,G__28940,G__28941,G__28942) : self__.dispatch_fn.call(null,G__28938,G__28939,G__28940,G__28941,G__28942));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28943 = a;
var G__28944 = b;
var G__28945 = c;
var G__28946 = d;
var G__28947 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28943,G__28944,G__28945,G__28946,G__28947) : target_fn.call(null,G__28943,G__28944,G__28945,G__28946,G__28947));
});
var G__29758__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28948 = a;
var G__28949 = b;
var G__28950 = c;
var G__28951 = d;
var G__28952 = e;
var G__28953 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28948,G__28949,G__28950,G__28951,G__28952,G__28953) : self__.dispatch_fn.call(null,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28954 = a;
var G__28955 = b;
var G__28956 = c;
var G__28957 = d;
var G__28958 = e;
var G__28959 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28954,G__28955,G__28956,G__28957,G__28958,G__28959) : target_fn.call(null,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959));
});
var G__29758__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28960 = a;
var G__28961 = b;
var G__28962 = c;
var G__28963 = d;
var G__28964 = e;
var G__28965 = f;
var G__28966 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28960,G__28961,G__28962,G__28963,G__28964,G__28965,G__28966) : self__.dispatch_fn.call(null,G__28960,G__28961,G__28962,G__28963,G__28964,G__28965,G__28966));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28967 = a;
var G__28968 = b;
var G__28969 = c;
var G__28970 = d;
var G__28971 = e;
var G__28972 = f;
var G__28973 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28967,G__28968,G__28969,G__28970,G__28971,G__28972,G__28973) : target_fn.call(null,G__28967,G__28968,G__28969,G__28970,G__28971,G__28972,G__28973));
});
var G__29758__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28974 = a;
var G__28975 = b;
var G__28976 = c;
var G__28977 = d;
var G__28978 = e;
var G__28979 = f;
var G__28980 = g;
var G__28981 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28974,G__28975,G__28976,G__28977,G__28978,G__28979,G__28980,G__28981) : self__.dispatch_fn.call(null,G__28974,G__28975,G__28976,G__28977,G__28978,G__28979,G__28980,G__28981));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28982 = a;
var G__28983 = b;
var G__28984 = c;
var G__28985 = d;
var G__28986 = e;
var G__28987 = f;
var G__28988 = g;
var G__28989 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28982,G__28983,G__28984,G__28985,G__28986,G__28987,G__28988,G__28989) : target_fn.call(null,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987,G__28988,G__28989));
});
var G__29758__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28990 = a;
var G__28991 = b;
var G__28992 = c;
var G__28993 = d;
var G__28994 = e;
var G__28995 = f;
var G__28996 = g;
var G__28997 = h;
var G__28998 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28990,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996,G__28997,G__28998) : self__.dispatch_fn.call(null,G__28990,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996,G__28997,G__28998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28999 = a;
var G__29000 = b;
var G__29001 = c;
var G__29002 = d;
var G__29003 = e;
var G__29004 = f;
var G__29005 = g;
var G__29006 = h;
var G__29007 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007) : target_fn.call(null,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007));
});
var G__29758__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29008 = a;
var G__29009 = b;
var G__29010 = c;
var G__29011 = d;
var G__29012 = e;
var G__29013 = f;
var G__29014 = g;
var G__29015 = h;
var G__29016 = i;
var G__29017 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014,G__29015,G__29016,G__29017) : self__.dispatch_fn.call(null,G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014,G__29015,G__29016,G__29017));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29018 = a;
var G__29019 = b;
var G__29020 = c;
var G__29021 = d;
var G__29022 = e;
var G__29023 = f;
var G__29024 = g;
var G__29025 = h;
var G__29026 = i;
var G__29027 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025,G__29026,G__29027) : target_fn.call(null,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025,G__29026,G__29027));
});
var G__29758__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29028 = a;
var G__29029 = b;
var G__29030 = c;
var G__29031 = d;
var G__29032 = e;
var G__29033 = f;
var G__29034 = g;
var G__29035 = h;
var G__29036 = i;
var G__29037 = j;
var G__29038 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__29028,G__29029,G__29030,G__29031,G__29032,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038) : self__.dispatch_fn.call(null,G__29028,G__29029,G__29030,G__29031,G__29032,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29039 = a;
var G__29040 = b;
var G__29041 = c;
var G__29042 = d;
var G__29043 = e;
var G__29044 = f;
var G__29045 = g;
var G__29046 = h;
var G__29047 = i;
var G__29048 = j;
var G__29049 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__29039,G__29040,G__29041,G__29042,G__29043,G__29044,G__29045,G__29046,G__29047,G__29048,G__29049) : target_fn.call(null,G__29039,G__29040,G__29041,G__29042,G__29043,G__29044,G__29045,G__29046,G__29047,G__29048,G__29049));
});
var G__29758__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29050 = a;
var G__29051 = b;
var G__29052 = c;
var G__29053 = d;
var G__29054 = e;
var G__29055 = f;
var G__29056 = g;
var G__29057 = h;
var G__29058 = i;
var G__29059 = j;
var G__29060 = k;
var G__29061 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__29050,G__29051,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061) : self__.dispatch_fn.call(null,G__29050,G__29051,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29062 = a;
var G__29063 = b;
var G__29064 = c;
var G__29065 = d;
var G__29066 = e;
var G__29067 = f;
var G__29068 = g;
var G__29069 = h;
var G__29070 = i;
var G__29071 = j;
var G__29072 = k;
var G__29073 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__29062,G__29063,G__29064,G__29065,G__29066,G__29067,G__29068,G__29069,G__29070,G__29071,G__29072,G__29073) : target_fn.call(null,G__29062,G__29063,G__29064,G__29065,G__29066,G__29067,G__29068,G__29069,G__29070,G__29071,G__29072,G__29073));
});
var G__29758__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29074 = a;
var G__29075 = b;
var G__29076 = c;
var G__29077 = d;
var G__29078 = e;
var G__29079 = f;
var G__29080 = g;
var G__29081 = h;
var G__29082 = i;
var G__29083 = j;
var G__29084 = k;
var G__29085 = l;
var G__29086 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__29074,G__29075,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082,G__29083,G__29084,G__29085,G__29086) : self__.dispatch_fn.call(null,G__29074,G__29075,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082,G__29083,G__29084,G__29085,G__29086));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29087 = a;
var G__29088 = b;
var G__29089 = c;
var G__29090 = d;
var G__29091 = e;
var G__29092 = f;
var G__29093 = g;
var G__29094 = h;
var G__29095 = i;
var G__29096 = j;
var G__29097 = k;
var G__29098 = l;
var G__29099 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__29087,G__29088,G__29089,G__29090,G__29091,G__29092,G__29093,G__29094,G__29095,G__29096,G__29097,G__29098,G__29099) : target_fn.call(null,G__29087,G__29088,G__29089,G__29090,G__29091,G__29092,G__29093,G__29094,G__29095,G__29096,G__29097,G__29098,G__29099));
});
var G__29758__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29100 = a;
var G__29101 = b;
var G__29102 = c;
var G__29103 = d;
var G__29104 = e;
var G__29105 = f;
var G__29106 = g;
var G__29107 = h;
var G__29108 = i;
var G__29109 = j;
var G__29110 = k;
var G__29111 = l;
var G__29112 = m;
var G__29113 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__29100,G__29101,G__29102,G__29103,G__29104,G__29105,G__29106,G__29107,G__29108,G__29109,G__29110,G__29111,G__29112,G__29113) : self__.dispatch_fn.call(null,G__29100,G__29101,G__29102,G__29103,G__29104,G__29105,G__29106,G__29107,G__29108,G__29109,G__29110,G__29111,G__29112,G__29113));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29114 = a;
var G__29115 = b;
var G__29116 = c;
var G__29117 = d;
var G__29118 = e;
var G__29119 = f;
var G__29120 = g;
var G__29121 = h;
var G__29122 = i;
var G__29123 = j;
var G__29124 = k;
var G__29125 = l;
var G__29126 = m;
var G__29127 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__29114,G__29115,G__29116,G__29117,G__29118,G__29119,G__29120,G__29121,G__29122,G__29123,G__29124,G__29125,G__29126,G__29127) : target_fn.call(null,G__29114,G__29115,G__29116,G__29117,G__29118,G__29119,G__29120,G__29121,G__29122,G__29123,G__29124,G__29125,G__29126,G__29127));
});
var G__29758__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29128 = a;
var G__29129 = b;
var G__29130 = c;
var G__29131 = d;
var G__29132 = e;
var G__29133 = f;
var G__29134 = g;
var G__29135 = h;
var G__29136 = i;
var G__29137 = j;
var G__29138 = k;
var G__29139 = l;
var G__29140 = m;
var G__29141 = n;
var G__29142 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__29128,G__29129,G__29130,G__29131,G__29132,G__29133,G__29134,G__29135,G__29136,G__29137,G__29138,G__29139,G__29140,G__29141,G__29142) : self__.dispatch_fn.call(null,G__29128,G__29129,G__29130,G__29131,G__29132,G__29133,G__29134,G__29135,G__29136,G__29137,G__29138,G__29139,G__29140,G__29141,G__29142));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29143 = a;
var G__29144 = b;
var G__29145 = c;
var G__29146 = d;
var G__29147 = e;
var G__29148 = f;
var G__29149 = g;
var G__29150 = h;
var G__29151 = i;
var G__29152 = j;
var G__29153 = k;
var G__29154 = l;
var G__29155 = m;
var G__29156 = n;
var G__29157 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__29143,G__29144,G__29145,G__29146,G__29147,G__29148,G__29149,G__29150,G__29151,G__29152,G__29153,G__29154,G__29155,G__29156,G__29157) : target_fn.call(null,G__29143,G__29144,G__29145,G__29146,G__29147,G__29148,G__29149,G__29150,G__29151,G__29152,G__29153,G__29154,G__29155,G__29156,G__29157));
});
var G__29758__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29158 = a;
var G__29159 = b;
var G__29160 = c;
var G__29161 = d;
var G__29162 = e;
var G__29163 = f;
var G__29164 = g;
var G__29165 = h;
var G__29166 = i;
var G__29167 = j;
var G__29168 = k;
var G__29169 = l;
var G__29170 = m;
var G__29171 = n;
var G__29172 = o;
var G__29173 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29158,G__29159,G__29160,G__29161,G__29162,G__29163,G__29164,G__29165,G__29166,G__29167,G__29168,G__29169,G__29170,G__29171,G__29172,G__29173) : self__.dispatch_fn.call(null,G__29158,G__29159,G__29160,G__29161,G__29162,G__29163,G__29164,G__29165,G__29166,G__29167,G__29168,G__29169,G__29170,G__29171,G__29172,G__29173));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29174 = a;
var G__29175 = b;
var G__29176 = c;
var G__29177 = d;
var G__29178 = e;
var G__29179 = f;
var G__29180 = g;
var G__29181 = h;
var G__29182 = i;
var G__29183 = j;
var G__29184 = k;
var G__29185 = l;
var G__29186 = m;
var G__29187 = n;
var G__29188 = o;
var G__29189 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29174,G__29175,G__29176,G__29177,G__29178,G__29179,G__29180,G__29181,G__29182,G__29183,G__29184,G__29185,G__29186,G__29187,G__29188,G__29189) : target_fn.call(null,G__29174,G__29175,G__29176,G__29177,G__29178,G__29179,G__29180,G__29181,G__29182,G__29183,G__29184,G__29185,G__29186,G__29187,G__29188,G__29189));
});
var G__29758__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29190 = a;
var G__29191 = b;
var G__29192 = c;
var G__29193 = d;
var G__29194 = e;
var G__29195 = f;
var G__29196 = g;
var G__29197 = h;
var G__29198 = i;
var G__29199 = j;
var G__29200 = k;
var G__29201 = l;
var G__29202 = m;
var G__29203 = n;
var G__29204 = o;
var G__29205 = p;
var G__29206 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__29190,G__29191,G__29192,G__29193,G__29194,G__29195,G__29196,G__29197,G__29198,G__29199,G__29200,G__29201,G__29202,G__29203,G__29204,G__29205,G__29206) : self__.dispatch_fn.call(null,G__29190,G__29191,G__29192,G__29193,G__29194,G__29195,G__29196,G__29197,G__29198,G__29199,G__29200,G__29201,G__29202,G__29203,G__29204,G__29205,G__29206));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29207 = a;
var G__29208 = b;
var G__29209 = c;
var G__29210 = d;
var G__29211 = e;
var G__29212 = f;
var G__29213 = g;
var G__29214 = h;
var G__29215 = i;
var G__29216 = j;
var G__29217 = k;
var G__29218 = l;
var G__29219 = m;
var G__29220 = n;
var G__29221 = o;
var G__29222 = p;
var G__29223 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__29207,G__29208,G__29209,G__29210,G__29211,G__29212,G__29213,G__29214,G__29215,G__29216,G__29217,G__29218,G__29219,G__29220,G__29221,G__29222,G__29223) : target_fn.call(null,G__29207,G__29208,G__29209,G__29210,G__29211,G__29212,G__29213,G__29214,G__29215,G__29216,G__29217,G__29218,G__29219,G__29220,G__29221,G__29222,G__29223));
});
var G__29758__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29224 = a;
var G__29225 = b;
var G__29226 = c;
var G__29227 = d;
var G__29228 = e;
var G__29229 = f;
var G__29230 = g;
var G__29231 = h;
var G__29232 = i;
var G__29233 = j;
var G__29234 = k;
var G__29235 = l;
var G__29236 = m;
var G__29237 = n;
var G__29238 = o;
var G__29239 = p;
var G__29240 = q;
var G__29241 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__29224,G__29225,G__29226,G__29227,G__29228,G__29229,G__29230,G__29231,G__29232,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238,G__29239,G__29240,G__29241) : self__.dispatch_fn.call(null,G__29224,G__29225,G__29226,G__29227,G__29228,G__29229,G__29230,G__29231,G__29232,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238,G__29239,G__29240,G__29241));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29242 = a;
var G__29243 = b;
var G__29244 = c;
var G__29245 = d;
var G__29246 = e;
var G__29247 = f;
var G__29248 = g;
var G__29249 = h;
var G__29250 = i;
var G__29251 = j;
var G__29252 = k;
var G__29253 = l;
var G__29254 = m;
var G__29255 = n;
var G__29256 = o;
var G__29257 = p;
var G__29258 = q;
var G__29259 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29242,G__29243,G__29244,G__29245,G__29246,G__29247,G__29248,G__29249,G__29250,G__29251,G__29252,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259) : target_fn.call(null,G__29242,G__29243,G__29244,G__29245,G__29246,G__29247,G__29248,G__29249,G__29250,G__29251,G__29252,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259));
});
var G__29758__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29260 = a;
var G__29261 = b;
var G__29262 = c;
var G__29263 = d;
var G__29264 = e;
var G__29265 = f;
var G__29266 = g;
var G__29267 = h;
var G__29268 = i;
var G__29269 = j;
var G__29270 = k;
var G__29271 = l;
var G__29272 = m;
var G__29273 = n;
var G__29274 = o;
var G__29275 = p;
var G__29276 = q;
var G__29277 = r;
var G__29278 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29260,G__29261,G__29262,G__29263,G__29264,G__29265,G__29266,G__29267,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273,G__29274,G__29275,G__29276,G__29277,G__29278) : self__.dispatch_fn.call(null,G__29260,G__29261,G__29262,G__29263,G__29264,G__29265,G__29266,G__29267,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273,G__29274,G__29275,G__29276,G__29277,G__29278));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29279 = a;
var G__29280 = b;
var G__29281 = c;
var G__29282 = d;
var G__29283 = e;
var G__29284 = f;
var G__29285 = g;
var G__29286 = h;
var G__29287 = i;
var G__29288 = j;
var G__29289 = k;
var G__29290 = l;
var G__29291 = m;
var G__29292 = n;
var G__29293 = o;
var G__29294 = p;
var G__29295 = q;
var G__29296 = r;
var G__29297 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285,G__29286,G__29287,G__29288,G__29289,G__29290,G__29291,G__29292,G__29293,G__29294,G__29295,G__29296,G__29297) : target_fn.call(null,G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285,G__29286,G__29287,G__29288,G__29289,G__29290,G__29291,G__29292,G__29293,G__29294,G__29295,G__29296,G__29297));
});
var G__29758__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29298 = a;
var G__29299 = b;
var G__29300 = c;
var G__29301 = d;
var G__29302 = e;
var G__29303 = f;
var G__29304 = g;
var G__29305 = h;
var G__29306 = i;
var G__29307 = j;
var G__29308 = k;
var G__29309 = l;
var G__29310 = m;
var G__29311 = n;
var G__29312 = o;
var G__29313 = p;
var G__29314 = q;
var G__29315 = r;
var G__29316 = s;
var G__29317 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306,G__29307,G__29308,G__29309,G__29310,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317) : self__.dispatch_fn.call(null,G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306,G__29307,G__29308,G__29309,G__29310,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29318 = a;
var G__29319 = b;
var G__29320 = c;
var G__29321 = d;
var G__29322 = e;
var G__29323 = f;
var G__29324 = g;
var G__29325 = h;
var G__29326 = i;
var G__29327 = j;
var G__29328 = k;
var G__29329 = l;
var G__29330 = m;
var G__29331 = n;
var G__29332 = o;
var G__29333 = p;
var G__29334 = q;
var G__29335 = r;
var G__29336 = s;
var G__29337 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29318,G__29319,G__29320,G__29321,G__29322,G__29323,G__29324,G__29325,G__29326,G__29327,G__29328,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334,G__29335,G__29336,G__29337) : target_fn.call(null,G__29318,G__29319,G__29320,G__29321,G__29322,G__29323,G__29324,G__29325,G__29326,G__29327,G__29328,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334,G__29335,G__29336,G__29337));
});
var G__29758__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__29758 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__29758__1.call(this,self__);
case 2:
return G__29758__2.call(this,self__,a);
case 3:
return G__29758__3.call(this,self__,a,b);
case 4:
return G__29758__4.call(this,self__,a,b,c);
case 5:
return G__29758__5.call(this,self__,a,b,c,d);
case 6:
return G__29758__6.call(this,self__,a,b,c,d,e);
case 7:
return G__29758__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__29758__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__29758__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__29758__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__29758__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__29758__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__29758__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__29758__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__29758__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__29758__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__29758__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__29758__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__29758__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__29758__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__29758__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__29758__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29758.cljs$core$IFn$_invoke$arity$1 = G__29758__1;
G__29758.cljs$core$IFn$_invoke$arity$2 = G__29758__2;
G__29758.cljs$core$IFn$_invoke$arity$3 = G__29758__3;
G__29758.cljs$core$IFn$_invoke$arity$4 = G__29758__4;
G__29758.cljs$core$IFn$_invoke$arity$5 = G__29758__5;
G__29758.cljs$core$IFn$_invoke$arity$6 = G__29758__6;
G__29758.cljs$core$IFn$_invoke$arity$7 = G__29758__7;
G__29758.cljs$core$IFn$_invoke$arity$8 = G__29758__8;
G__29758.cljs$core$IFn$_invoke$arity$9 = G__29758__9;
G__29758.cljs$core$IFn$_invoke$arity$10 = G__29758__10;
G__29758.cljs$core$IFn$_invoke$arity$11 = G__29758__11;
G__29758.cljs$core$IFn$_invoke$arity$12 = G__29758__12;
G__29758.cljs$core$IFn$_invoke$arity$13 = G__29758__13;
G__29758.cljs$core$IFn$_invoke$arity$14 = G__29758__14;
G__29758.cljs$core$IFn$_invoke$arity$15 = G__29758__15;
G__29758.cljs$core$IFn$_invoke$arity$16 = G__29758__16;
G__29758.cljs$core$IFn$_invoke$arity$17 = G__29758__17;
G__29758.cljs$core$IFn$_invoke$arity$18 = G__29758__18;
G__29758.cljs$core$IFn$_invoke$arity$19 = G__29758__19;
G__29758.cljs$core$IFn$_invoke$arity$20 = G__29758__20;
G__29758.cljs$core$IFn$_invoke$arity$21 = G__29758__21;
G__29758.cljs$core$IFn$_invoke$arity$22 = G__29758__22;
return G__29758;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args28910){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28910)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29338 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__29338) : self__.dispatch_fn.call(null,G__29338));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29339 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__29339) : target_fn.call(null,G__29339));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29340 = a;
var G__29341 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__29340,G__29341) : self__.dispatch_fn.call(null,G__29340,G__29341));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29342 = a;
var G__29343 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__29342,G__29343) : target_fn.call(null,G__29342,G__29343));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29344 = a;
var G__29345 = b;
var G__29346 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__29344,G__29345,G__29346) : self__.dispatch_fn.call(null,G__29344,G__29345,G__29346));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29347 = a;
var G__29348 = b;
var G__29349 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__29347,G__29348,G__29349) : target_fn.call(null,G__29347,G__29348,G__29349));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29350 = a;
var G__29351 = b;
var G__29352 = c;
var G__29353 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__29350,G__29351,G__29352,G__29353) : self__.dispatch_fn.call(null,G__29350,G__29351,G__29352,G__29353));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29354 = a;
var G__29355 = b;
var G__29356 = c;
var G__29357 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__29354,G__29355,G__29356,G__29357) : target_fn.call(null,G__29354,G__29355,G__29356,G__29357));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29358 = a;
var G__29359 = b;
var G__29360 = c;
var G__29361 = d;
var G__29362 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__29358,G__29359,G__29360,G__29361,G__29362) : self__.dispatch_fn.call(null,G__29358,G__29359,G__29360,G__29361,G__29362));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29363 = a;
var G__29364 = b;
var G__29365 = c;
var G__29366 = d;
var G__29367 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__29363,G__29364,G__29365,G__29366,G__29367) : target_fn.call(null,G__29363,G__29364,G__29365,G__29366,G__29367));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29368 = a;
var G__29369 = b;
var G__29370 = c;
var G__29371 = d;
var G__29372 = e;
var G__29373 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__29368,G__29369,G__29370,G__29371,G__29372,G__29373) : self__.dispatch_fn.call(null,G__29368,G__29369,G__29370,G__29371,G__29372,G__29373));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29374 = a;
var G__29375 = b;
var G__29376 = c;
var G__29377 = d;
var G__29378 = e;
var G__29379 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__29374,G__29375,G__29376,G__29377,G__29378,G__29379) : target_fn.call(null,G__29374,G__29375,G__29376,G__29377,G__29378,G__29379));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29380 = a;
var G__29381 = b;
var G__29382 = c;
var G__29383 = d;
var G__29384 = e;
var G__29385 = f;
var G__29386 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__29380,G__29381,G__29382,G__29383,G__29384,G__29385,G__29386) : self__.dispatch_fn.call(null,G__29380,G__29381,G__29382,G__29383,G__29384,G__29385,G__29386));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29387 = a;
var G__29388 = b;
var G__29389 = c;
var G__29390 = d;
var G__29391 = e;
var G__29392 = f;
var G__29393 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__29387,G__29388,G__29389,G__29390,G__29391,G__29392,G__29393) : target_fn.call(null,G__29387,G__29388,G__29389,G__29390,G__29391,G__29392,G__29393));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29394 = a;
var G__29395 = b;
var G__29396 = c;
var G__29397 = d;
var G__29398 = e;
var G__29399 = f;
var G__29400 = g;
var G__29401 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__29394,G__29395,G__29396,G__29397,G__29398,G__29399,G__29400,G__29401) : self__.dispatch_fn.call(null,G__29394,G__29395,G__29396,G__29397,G__29398,G__29399,G__29400,G__29401));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29402 = a;
var G__29403 = b;
var G__29404 = c;
var G__29405 = d;
var G__29406 = e;
var G__29407 = f;
var G__29408 = g;
var G__29409 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__29402,G__29403,G__29404,G__29405,G__29406,G__29407,G__29408,G__29409) : target_fn.call(null,G__29402,G__29403,G__29404,G__29405,G__29406,G__29407,G__29408,G__29409));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29410 = a;
var G__29411 = b;
var G__29412 = c;
var G__29413 = d;
var G__29414 = e;
var G__29415 = f;
var G__29416 = g;
var G__29417 = h;
var G__29418 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__29410,G__29411,G__29412,G__29413,G__29414,G__29415,G__29416,G__29417,G__29418) : self__.dispatch_fn.call(null,G__29410,G__29411,G__29412,G__29413,G__29414,G__29415,G__29416,G__29417,G__29418));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29419 = a;
var G__29420 = b;
var G__29421 = c;
var G__29422 = d;
var G__29423 = e;
var G__29424 = f;
var G__29425 = g;
var G__29426 = h;
var G__29427 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__29419,G__29420,G__29421,G__29422,G__29423,G__29424,G__29425,G__29426,G__29427) : target_fn.call(null,G__29419,G__29420,G__29421,G__29422,G__29423,G__29424,G__29425,G__29426,G__29427));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29428 = a;
var G__29429 = b;
var G__29430 = c;
var G__29431 = d;
var G__29432 = e;
var G__29433 = f;
var G__29434 = g;
var G__29435 = h;
var G__29436 = i;
var G__29437 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__29428,G__29429,G__29430,G__29431,G__29432,G__29433,G__29434,G__29435,G__29436,G__29437) : self__.dispatch_fn.call(null,G__29428,G__29429,G__29430,G__29431,G__29432,G__29433,G__29434,G__29435,G__29436,G__29437));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29438 = a;
var G__29439 = b;
var G__29440 = c;
var G__29441 = d;
var G__29442 = e;
var G__29443 = f;
var G__29444 = g;
var G__29445 = h;
var G__29446 = i;
var G__29447 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__29438,G__29439,G__29440,G__29441,G__29442,G__29443,G__29444,G__29445,G__29446,G__29447) : target_fn.call(null,G__29438,G__29439,G__29440,G__29441,G__29442,G__29443,G__29444,G__29445,G__29446,G__29447));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29448 = a;
var G__29449 = b;
var G__29450 = c;
var G__29451 = d;
var G__29452 = e;
var G__29453 = f;
var G__29454 = g;
var G__29455 = h;
var G__29456 = i;
var G__29457 = j;
var G__29458 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__29448,G__29449,G__29450,G__29451,G__29452,G__29453,G__29454,G__29455,G__29456,G__29457,G__29458) : self__.dispatch_fn.call(null,G__29448,G__29449,G__29450,G__29451,G__29452,G__29453,G__29454,G__29455,G__29456,G__29457,G__29458));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29459 = a;
var G__29460 = b;
var G__29461 = c;
var G__29462 = d;
var G__29463 = e;
var G__29464 = f;
var G__29465 = g;
var G__29466 = h;
var G__29467 = i;
var G__29468 = j;
var G__29469 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__29459,G__29460,G__29461,G__29462,G__29463,G__29464,G__29465,G__29466,G__29467,G__29468,G__29469) : target_fn.call(null,G__29459,G__29460,G__29461,G__29462,G__29463,G__29464,G__29465,G__29466,G__29467,G__29468,G__29469));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29470 = a;
var G__29471 = b;
var G__29472 = c;
var G__29473 = d;
var G__29474 = e;
var G__29475 = f;
var G__29476 = g;
var G__29477 = h;
var G__29478 = i;
var G__29479 = j;
var G__29480 = k;
var G__29481 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__29470,G__29471,G__29472,G__29473,G__29474,G__29475,G__29476,G__29477,G__29478,G__29479,G__29480,G__29481) : self__.dispatch_fn.call(null,G__29470,G__29471,G__29472,G__29473,G__29474,G__29475,G__29476,G__29477,G__29478,G__29479,G__29480,G__29481));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29482 = a;
var G__29483 = b;
var G__29484 = c;
var G__29485 = d;
var G__29486 = e;
var G__29487 = f;
var G__29488 = g;
var G__29489 = h;
var G__29490 = i;
var G__29491 = j;
var G__29492 = k;
var G__29493 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__29482,G__29483,G__29484,G__29485,G__29486,G__29487,G__29488,G__29489,G__29490,G__29491,G__29492,G__29493) : target_fn.call(null,G__29482,G__29483,G__29484,G__29485,G__29486,G__29487,G__29488,G__29489,G__29490,G__29491,G__29492,G__29493));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29494 = a;
var G__29495 = b;
var G__29496 = c;
var G__29497 = d;
var G__29498 = e;
var G__29499 = f;
var G__29500 = g;
var G__29501 = h;
var G__29502 = i;
var G__29503 = j;
var G__29504 = k;
var G__29505 = l;
var G__29506 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__29494,G__29495,G__29496,G__29497,G__29498,G__29499,G__29500,G__29501,G__29502,G__29503,G__29504,G__29505,G__29506) : self__.dispatch_fn.call(null,G__29494,G__29495,G__29496,G__29497,G__29498,G__29499,G__29500,G__29501,G__29502,G__29503,G__29504,G__29505,G__29506));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29507 = a;
var G__29508 = b;
var G__29509 = c;
var G__29510 = d;
var G__29511 = e;
var G__29512 = f;
var G__29513 = g;
var G__29514 = h;
var G__29515 = i;
var G__29516 = j;
var G__29517 = k;
var G__29518 = l;
var G__29519 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__29507,G__29508,G__29509,G__29510,G__29511,G__29512,G__29513,G__29514,G__29515,G__29516,G__29517,G__29518,G__29519) : target_fn.call(null,G__29507,G__29508,G__29509,G__29510,G__29511,G__29512,G__29513,G__29514,G__29515,G__29516,G__29517,G__29518,G__29519));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29520 = a;
var G__29521 = b;
var G__29522 = c;
var G__29523 = d;
var G__29524 = e;
var G__29525 = f;
var G__29526 = g;
var G__29527 = h;
var G__29528 = i;
var G__29529 = j;
var G__29530 = k;
var G__29531 = l;
var G__29532 = m;
var G__29533 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__29520,G__29521,G__29522,G__29523,G__29524,G__29525,G__29526,G__29527,G__29528,G__29529,G__29530,G__29531,G__29532,G__29533) : self__.dispatch_fn.call(null,G__29520,G__29521,G__29522,G__29523,G__29524,G__29525,G__29526,G__29527,G__29528,G__29529,G__29530,G__29531,G__29532,G__29533));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29534 = a;
var G__29535 = b;
var G__29536 = c;
var G__29537 = d;
var G__29538 = e;
var G__29539 = f;
var G__29540 = g;
var G__29541 = h;
var G__29542 = i;
var G__29543 = j;
var G__29544 = k;
var G__29545 = l;
var G__29546 = m;
var G__29547 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__29534,G__29535,G__29536,G__29537,G__29538,G__29539,G__29540,G__29541,G__29542,G__29543,G__29544,G__29545,G__29546,G__29547) : target_fn.call(null,G__29534,G__29535,G__29536,G__29537,G__29538,G__29539,G__29540,G__29541,G__29542,G__29543,G__29544,G__29545,G__29546,G__29547));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29548 = a;
var G__29549 = b;
var G__29550 = c;
var G__29551 = d;
var G__29552 = e;
var G__29553 = f;
var G__29554 = g;
var G__29555 = h;
var G__29556 = i;
var G__29557 = j;
var G__29558 = k;
var G__29559 = l;
var G__29560 = m;
var G__29561 = n;
var G__29562 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__29548,G__29549,G__29550,G__29551,G__29552,G__29553,G__29554,G__29555,G__29556,G__29557,G__29558,G__29559,G__29560,G__29561,G__29562) : self__.dispatch_fn.call(null,G__29548,G__29549,G__29550,G__29551,G__29552,G__29553,G__29554,G__29555,G__29556,G__29557,G__29558,G__29559,G__29560,G__29561,G__29562));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29563 = a;
var G__29564 = b;
var G__29565 = c;
var G__29566 = d;
var G__29567 = e;
var G__29568 = f;
var G__29569 = g;
var G__29570 = h;
var G__29571 = i;
var G__29572 = j;
var G__29573 = k;
var G__29574 = l;
var G__29575 = m;
var G__29576 = n;
var G__29577 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__29563,G__29564,G__29565,G__29566,G__29567,G__29568,G__29569,G__29570,G__29571,G__29572,G__29573,G__29574,G__29575,G__29576,G__29577) : target_fn.call(null,G__29563,G__29564,G__29565,G__29566,G__29567,G__29568,G__29569,G__29570,G__29571,G__29572,G__29573,G__29574,G__29575,G__29576,G__29577));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29578 = a;
var G__29579 = b;
var G__29580 = c;
var G__29581 = d;
var G__29582 = e;
var G__29583 = f;
var G__29584 = g;
var G__29585 = h;
var G__29586 = i;
var G__29587 = j;
var G__29588 = k;
var G__29589 = l;
var G__29590 = m;
var G__29591 = n;
var G__29592 = o;
var G__29593 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29578,G__29579,G__29580,G__29581,G__29582,G__29583,G__29584,G__29585,G__29586,G__29587,G__29588,G__29589,G__29590,G__29591,G__29592,G__29593) : self__.dispatch_fn.call(null,G__29578,G__29579,G__29580,G__29581,G__29582,G__29583,G__29584,G__29585,G__29586,G__29587,G__29588,G__29589,G__29590,G__29591,G__29592,G__29593));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29594 = a;
var G__29595 = b;
var G__29596 = c;
var G__29597 = d;
var G__29598 = e;
var G__29599 = f;
var G__29600 = g;
var G__29601 = h;
var G__29602 = i;
var G__29603 = j;
var G__29604 = k;
var G__29605 = l;
var G__29606 = m;
var G__29607 = n;
var G__29608 = o;
var G__29609 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29594,G__29595,G__29596,G__29597,G__29598,G__29599,G__29600,G__29601,G__29602,G__29603,G__29604,G__29605,G__29606,G__29607,G__29608,G__29609) : target_fn.call(null,G__29594,G__29595,G__29596,G__29597,G__29598,G__29599,G__29600,G__29601,G__29602,G__29603,G__29604,G__29605,G__29606,G__29607,G__29608,G__29609));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29610 = a;
var G__29611 = b;
var G__29612 = c;
var G__29613 = d;
var G__29614 = e;
var G__29615 = f;
var G__29616 = g;
var G__29617 = h;
var G__29618 = i;
var G__29619 = j;
var G__29620 = k;
var G__29621 = l;
var G__29622 = m;
var G__29623 = n;
var G__29624 = o;
var G__29625 = p;
var G__29626 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__29610,G__29611,G__29612,G__29613,G__29614,G__29615,G__29616,G__29617,G__29618,G__29619,G__29620,G__29621,G__29622,G__29623,G__29624,G__29625,G__29626) : self__.dispatch_fn.call(null,G__29610,G__29611,G__29612,G__29613,G__29614,G__29615,G__29616,G__29617,G__29618,G__29619,G__29620,G__29621,G__29622,G__29623,G__29624,G__29625,G__29626));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29627 = a;
var G__29628 = b;
var G__29629 = c;
var G__29630 = d;
var G__29631 = e;
var G__29632 = f;
var G__29633 = g;
var G__29634 = h;
var G__29635 = i;
var G__29636 = j;
var G__29637 = k;
var G__29638 = l;
var G__29639 = m;
var G__29640 = n;
var G__29641 = o;
var G__29642 = p;
var G__29643 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__29627,G__29628,G__29629,G__29630,G__29631,G__29632,G__29633,G__29634,G__29635,G__29636,G__29637,G__29638,G__29639,G__29640,G__29641,G__29642,G__29643) : target_fn.call(null,G__29627,G__29628,G__29629,G__29630,G__29631,G__29632,G__29633,G__29634,G__29635,G__29636,G__29637,G__29638,G__29639,G__29640,G__29641,G__29642,G__29643));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29644 = a;
var G__29645 = b;
var G__29646 = c;
var G__29647 = d;
var G__29648 = e;
var G__29649 = f;
var G__29650 = g;
var G__29651 = h;
var G__29652 = i;
var G__29653 = j;
var G__29654 = k;
var G__29655 = l;
var G__29656 = m;
var G__29657 = n;
var G__29658 = o;
var G__29659 = p;
var G__29660 = q;
var G__29661 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__29644,G__29645,G__29646,G__29647,G__29648,G__29649,G__29650,G__29651,G__29652,G__29653,G__29654,G__29655,G__29656,G__29657,G__29658,G__29659,G__29660,G__29661) : self__.dispatch_fn.call(null,G__29644,G__29645,G__29646,G__29647,G__29648,G__29649,G__29650,G__29651,G__29652,G__29653,G__29654,G__29655,G__29656,G__29657,G__29658,G__29659,G__29660,G__29661));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29662 = a;
var G__29663 = b;
var G__29664 = c;
var G__29665 = d;
var G__29666 = e;
var G__29667 = f;
var G__29668 = g;
var G__29669 = h;
var G__29670 = i;
var G__29671 = j;
var G__29672 = k;
var G__29673 = l;
var G__29674 = m;
var G__29675 = n;
var G__29676 = o;
var G__29677 = p;
var G__29678 = q;
var G__29679 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29662,G__29663,G__29664,G__29665,G__29666,G__29667,G__29668,G__29669,G__29670,G__29671,G__29672,G__29673,G__29674,G__29675,G__29676,G__29677,G__29678,G__29679) : target_fn.call(null,G__29662,G__29663,G__29664,G__29665,G__29666,G__29667,G__29668,G__29669,G__29670,G__29671,G__29672,G__29673,G__29674,G__29675,G__29676,G__29677,G__29678,G__29679));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29680 = a;
var G__29681 = b;
var G__29682 = c;
var G__29683 = d;
var G__29684 = e;
var G__29685 = f;
var G__29686 = g;
var G__29687 = h;
var G__29688 = i;
var G__29689 = j;
var G__29690 = k;
var G__29691 = l;
var G__29692 = m;
var G__29693 = n;
var G__29694 = o;
var G__29695 = p;
var G__29696 = q;
var G__29697 = r;
var G__29698 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29680,G__29681,G__29682,G__29683,G__29684,G__29685,G__29686,G__29687,G__29688,G__29689,G__29690,G__29691,G__29692,G__29693,G__29694,G__29695,G__29696,G__29697,G__29698) : self__.dispatch_fn.call(null,G__29680,G__29681,G__29682,G__29683,G__29684,G__29685,G__29686,G__29687,G__29688,G__29689,G__29690,G__29691,G__29692,G__29693,G__29694,G__29695,G__29696,G__29697,G__29698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29699 = a;
var G__29700 = b;
var G__29701 = c;
var G__29702 = d;
var G__29703 = e;
var G__29704 = f;
var G__29705 = g;
var G__29706 = h;
var G__29707 = i;
var G__29708 = j;
var G__29709 = k;
var G__29710 = l;
var G__29711 = m;
var G__29712 = n;
var G__29713 = o;
var G__29714 = p;
var G__29715 = q;
var G__29716 = r;
var G__29717 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29699,G__29700,G__29701,G__29702,G__29703,G__29704,G__29705,G__29706,G__29707,G__29708,G__29709,G__29710,G__29711,G__29712,G__29713,G__29714,G__29715,G__29716,G__29717) : target_fn.call(null,G__29699,G__29700,G__29701,G__29702,G__29703,G__29704,G__29705,G__29706,G__29707,G__29708,G__29709,G__29710,G__29711,G__29712,G__29713,G__29714,G__29715,G__29716,G__29717));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29718 = a;
var G__29719 = b;
var G__29720 = c;
var G__29721 = d;
var G__29722 = e;
var G__29723 = f;
var G__29724 = g;
var G__29725 = h;
var G__29726 = i;
var G__29727 = j;
var G__29728 = k;
var G__29729 = l;
var G__29730 = m;
var G__29731 = n;
var G__29732 = o;
var G__29733 = p;
var G__29734 = q;
var G__29735 = r;
var G__29736 = s;
var G__29737 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29718,G__29719,G__29720,G__29721,G__29722,G__29723,G__29724,G__29725,G__29726,G__29727,G__29728,G__29729,G__29730,G__29731,G__29732,G__29733,G__29734,G__29735,G__29736,G__29737) : self__.dispatch_fn.call(null,G__29718,G__29719,G__29720,G__29721,G__29722,G__29723,G__29724,G__29725,G__29726,G__29727,G__29728,G__29729,G__29730,G__29731,G__29732,G__29733,G__29734,G__29735,G__29736,G__29737));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29738 = a;
var G__29739 = b;
var G__29740 = c;
var G__29741 = d;
var G__29742 = e;
var G__29743 = f;
var G__29744 = g;
var G__29745 = h;
var G__29746 = i;
var G__29747 = j;
var G__29748 = k;
var G__29749 = l;
var G__29750 = m;
var G__29751 = n;
var G__29752 = o;
var G__29753 = p;
var G__29754 = q;
var G__29755 = r;
var G__29756 = s;
var G__29757 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29738,G__29739,G__29740,G__29741,G__29742,G__29743,G__29744,G__29745,G__29746,G__29747,G__29748,G__29749,G__29750,G__29751,G__29752,G__29753,G__29754,G__29755,G__29756,G__29757) : target_fn.call(null,G__29738,G__29739,G__29740,G__29741,G__29742,G__29743,G__29744,G__29745,G__29746,G__29747,G__29748,G__29749,G__29750,G__29751,G__29752,G__29753,G__29754,G__29755,G__29756,G__29757));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29759 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__29759);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4838__auto__,writer__4839__auto__,opt__4840__auto__){
return cljs.core._write(writer__4839__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__29764 = msg;
return Error(G__29764);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__29769 = x;
var G__29770 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29769,G__29770) : pred.call(null,G__29769,G__29770));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__29771 = y;
var G__29772 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29771,G__29772) : pred.call(null,G__29771,G__29772));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$20;
} else {
return cljs.core.constant$keyword$21;
}
});
